[{"date":"1725062400", "url":"https://eddyshomepages.github.io/about/about/", "title":"Tietoja sivustosta ja kirjoittajasta", "summary":"Sivuston ylläpitäjä on tällainen Linux -\u0026ldquo;nörtti\u0026rdquo;, joka tykkää puuhailla vapaa-aikoina Linuxin ja muiden siihen liittyvien juttujen kanssa kuten esim. Raspberry Pi -pikkutietokoneet. Lisäksi myös kaikki kotiautomaatioon liittyvät jutut ovat lähellä sydäntä.\nMinulla on taustalla rakennusinsinöörin koulutus ja melkein 25 vuoden työkokemus erilaisista tehtävistä rakennus- ja kiinteistöalalta toimien mm. projektipäällikkönä erilaisissa korjaus- ja energiatehokkuushankkeissa.\nNyt olen kuitenkin vaihtanut alaa ja helmikuun 2022 alussa aloitin opiskelemaan tieto- ja viestintätekniikan perustutkintoa suuntautuen hyvinvointiteknologiaan. Tämän tutkinnon sain valmiiksi noin 1,5 vuodessa ja paperit sain lokakuussa 2023.", "content":"Sivuston ylläpitäjä on tällainen Linux -\u0026ldquo;nörtti\u0026rdquo;, joka tykkää puuhailla vapaa-aikoina Linuxin ja muiden siihen liittyvien juttujen kanssa kuten esim. Raspberry Pi -pikkutietokoneet. Lisäksi myös kaikki kotiautomaatioon liittyvät jutut ovat lähellä sydäntä.\nMinulla on taustalla rakennusinsinöörin koulutus ja melkein 25 vuoden työkokemus erilaisista tehtävistä rakennus- ja kiinteistöalalta toimien mm. projektipäällikkönä erilaisissa korjaus- ja energiatehokkuushankkeissa.\nNyt olen kuitenkin vaihtanut alaa ja helmikuun 2022 alussa aloitin opiskelemaan tieto- ja viestintätekniikan perustutkintoa suuntautuen hyvinvointiteknologiaan. Tämän tutkinnon sain valmiiksi noin 1,5 vuodessa ja paperit sain lokakuussa 2023. Sammalla aloitin elokuussa 2023 myös nykyisessä ammatissani teknisenä tukihenkilönä. Tässä työssä käytän yksin omaan Linux-käyttöjärjestelmää, joka sopii minulle paremmin kuin hyvin, koska nyt saan olla päivittäin tekemisessä asioiden kanssa, jota olen harrastanut viimeiset parikymmentä vuotta.\nTälle sivustolle minulla on edelleenkin tarkoituksena kirjoitella erilaisia blogi -kirjoituksia liittyen omiin kokemuksiin, joita on vuosien varrella kertynyt mm. Linuxin parista. Esimerkiksi tämän sivuston luominen lähti halusta ja innostuksesta opetella oman blogi -sivuston pystyttämistä ja ylläpitämistä. Aikaisemmat blogi -sivuni pyörivät WordPress.org alustan päällä, joka oli tuolloin aloittaessa niin ikään sellainen asia, jota halusin opetella alusta alkaen käyttämään. Näitä sivuja ylläpidin melkein vuoden verran ennen niiden muuttamista nykyisen kaltaiseksi.\nNämä nykyiset sivut on sijoitettu Github -sivustolle käyttäen Hugo -sivusto generaattoria. Hugo:n avulla voidaan luoda staattiset kotisivut, jotka ovat tietysti hiukan työläämmät ylläpitää, mutta toisaalta niiden toiminta on nopeampaa ja turvallisempaa, koska sivut ovat staattiset eikä sivustolle voi kirjautua sisälle samalla tavalla kuin tehtäisiin WordPress.org -palvelimelle.\nSivustojen ylläpidon ajatus ei ole kuitenkaan muuttunut aikaisemmasta, koska minulla on edelleen tarkoituksena jatkaa kirjoittamista näistä omakohtaisista kokemuksista samalla kun tämä sivusto ja nämä kirjoitukset toimivat itselleni muistilistana tehdyistä asennuksista, jos ja kun taas tarvitsee palata johonkin vanhaan asennukseen jälkeen päin.\nEhkäpä näistä on kuitenkin jollekin muulle yhtä paljon hyötyä, mitä itselleni on ollut siitä, kun olen ongelmiin etsinyt netistä ratkaisuja sekä lukenut erilaisia keskustelupalstoja yms. muiden kirjoituksia.\nMuistutuksena kuitenkin, että muista aina ottaa varmuuskopiot ennen kuin alat tekemään suurempia muutoksia järjestelmääsi. Nämä kirjoitukseni pohjautuvat omakohtaisiin kokemuksiin ja ovat sellaisia, joita olen itse yrityksen ja välillä myös erehdyksen kautta tehnyt ja jotka ovat minulla toimineet. Nämä asiat eivät välttämättä toimi sinun järjestelmässä tai tietokoneella eli minä en ota vastuuta siitä, mikäli sinulle sattuu oman järjestelmäsi tai tietokoneesi kanssa jotain vahinkoa sen vuoksi, että olet toiminut näiden minun kirjoituksien mukaisesti.\nViestiä tai kysymyksiä voi laittaa minulle some-linkkien tai kommenttikentän kautta. Kommentointi on hoidettu käyttäen utterances kommentointia, joka nivoutuu hyvin yhteen GitHub:in kanssa, jolle nämäkin sivustot on sijoitettu.\n","tags":[], "section": "about"},{"date":"1697328000", "url":"https://eddyshomepages.github.io/posts/eddys-homapages-new-site/", "title":"Eddy's Homepages on saanut uuden kodin", "summary":"Eddy\u0026rsquo;s Homepages on saanut uuden kodin Link to heading Lyhyesti sanottuna vanha sivusto https://fasted.dy.fi -osoitteesta on nyt muuttanut uuteen osoitteeseen https://eddyshomepages.github.io/.\nVanhan sivuston osoitteesta on tehty ohjaus tälle uudelle sivustolle eli kaikki liikenne ohjautuu tämän uuden sivuston etusivulle. Lisäksi vanhalta sivustolta on siirretty kaikki aikaisemmin luodut kirjoitukset tähän uuteen osoitteeseen ja ne löytyvät Blogit -osiosta. Kirjoituksia on muokattu sen verran, että niiden sisäisten linkkien pitäisi toimia samalla tavoin kuin aikaisemminkin.", "content":" Eddy\u0026rsquo;s Homepages on saanut uuden kodin Link to heading Lyhyesti sanottuna vanha sivusto https://fasted.dy.fi -osoitteesta on nyt muuttanut uuteen osoitteeseen https://eddyshomepages.github.io/.\nVanhan sivuston osoitteesta on tehty ohjaus tälle uudelle sivustolle eli kaikki liikenne ohjautuu tämän uuden sivuston etusivulle. Lisäksi vanhalta sivustolta on siirretty kaikki aikaisemmin luodut kirjoitukset tähän uuteen osoitteeseen ja ne löytyvät Blogit -osiosta. Kirjoituksia on muokattu sen verran, että niiden sisäisten linkkien pitäisi toimia samalla tavoin kuin aikaisemminkin.\nTämä uusi sivusto on luotu käyttäen Hugoa, jolla voidaan luoda staattisia nettisivustoja. Lisäksi sivusto on löytänyt uuden kodin Github -sivustolta, johon yksityishenkilöt ja yritykset voivat perustaa omat kotisivut. Kotisivujen luontiin ei tosin enää voi käyttää Wordpress.org -ohjelmistoa, vaan sivut täytyy luoda staattiseksi kuten tämä minun uusi sivusto. Blogien kirjoittaminen eroaa tietysti Wordpress.org:sta, mutta käyn läpi näiden sivustojen tekemistä ja blogien kirjoittamista paremmin tulevissa kirjoituksissa. Se ainakin eroaa vanhasta, että enää ei tarvitse pelata useiden pluginien kanssa, jotta sivuston saa turvalliseksi ja kunnolla toimimaan.\nTervetuloa tutustumaan uuteen sivustoon!\n","tags":["yleinen","hugo","github","wordpress.org"], "section": "posts"},{"date":"1690675200", "url":"https://eddyshomepages.github.io/posts/ruuvitag-ble-integraation-kayttoonotto-docker-composen-avulla-asennetussa-home-assistantissa/", "title":"RuuviTag BLE -integraation käyttöönotto Docker-Composen avulla asennetussa Home Assistantissa", "summary":"Minulla oli aikaisemmin RuuviTag -anturit yhdistettynä Home Assistantiin RuuviTag Discovery nimisen ohjelmiston avulla, josta myös aikoinaan kirjoitin jutun. Viime aikoina tämä konfiguraatio on kuitenkin alkanut enemmän ja enemmän temppuilemaan. Tämä johtunee ilmeisesti siitä, että node.js -paketteihin on tullut päivityksiä, joiden kanssa Ruuvitag Discovery ei enää oikein toimi kunnolla.\nTästä syystä aloin miettimään, että miten anturit olisi järkevä liittää Home Assistantiin, koska minulla ei ole esim. Ruuvi Gateway:tä käytössä. Home Assistantissa on kuitenkin nykyisin olemassa RuuviTag BLE -integraatio, jonka vuoksi aloin selvittämään, että miten anturit saisi lisättyä järjestelmään sen avulla.", "content":"Minulla oli aikaisemmin RuuviTag -anturit yhdistettynä Home Assistantiin RuuviTag Discovery nimisen ohjelmiston avulla, josta myös aikoinaan kirjoitin jutun. Viime aikoina tämä konfiguraatio on kuitenkin alkanut enemmän ja enemmän temppuilemaan. Tämä johtunee ilmeisesti siitä, että node.js -paketteihin on tullut päivityksiä, joiden kanssa Ruuvitag Discovery ei enää oikein toimi kunnolla.\nTästä syystä aloin miettimään, että miten anturit olisi järkevä liittää Home Assistantiin, koska minulla ei ole esim. Ruuvi Gateway:tä käytössä. Home Assistantissa on kuitenkin nykyisin olemassa RuuviTag BLE -integraatio, jonka vuoksi aloin selvittämään, että miten anturit saisi lisättyä järjestelmään sen avulla.\nMuutokset isäntä -järjestelmään Link to heading Home Assistant on minulla asennettuna konttiin Docker-Composen avulla, joten aluksi isäntä -järjestelmään piti asentaa tarvittavat paketit kuten BlueZ, lisätä configurations.yaml -tiedostoon rivi bluetooth: ja lopuksi käynnistää vielä Home Assistantin uudelleen.\nMitään ei kuitenkaan tapahtunut kunnes tajusin lukea vielä tarkemmin Home Assistantin dokumentointia Bluetooth -integraation osalta. Ratkaisu löytyikin kohdasta Additional requirements by install method, jossa mainitaan, että Dockerin avulla asennetussa järjestelmässä täytyy isäntä -järjestelmässä olla käytössä BlueZ ja D-Bus socket ja ne täytyy olla myös Home Assistantin saatavilla kontin sisällä. Eli tämä korjaantuu lisäämällä docker-compose.yaml -tiedostoon kohdan volumes: alle rivi\n- /run/dbus:/run/dbus:ro Ennen kuin käynnistetään Home Assistantin kontti uudestaan, niin tässä vaiheessa on hyvä viimeistään ottaa varmuuskopio Home Assistantista. Minulla nimittäin kävi niin, että järjestelmän käynnistyttyä uudestaan olivat kaikki vanhat historiatiedot yms. hävinneet ja Home Assistant käynnistyi kokonaan puhtaalta pöydältä. Tämä toi tietysti hiukan lisää työtä, kun järjestelmää joutui palauttamaan vanhoista varmuuskopioista, mutta se onnistui kuitenkin hyvin.\nTietojen nollaantuminen johtunee todennäköisesti siitä, että lisäsin epähuomiossa tämän /run/dbus:/run/dbus:ro -rivin docker-compose.yaml tiedostoon loppuun uuteen volumes -kohtaan, jolloin se jostain syystä nollasi kaikki tiedot.\nHome Assistantin varmuuskopiointi Link to heading Home Assistantin varmuuskopioinnin voi hoitaa usealla tavalla ja minulla se on hoidettu automaattisesti Duplicati -nimisellä selainpohjaisella sovelluksella, josta aikoinaan kirjoitin tämän tarinan. Varmuuskopion järjestelmästä voi tehdä myös manuaalisesti päätteen kautta, kuten tein sen tässä tapauksessa eli toisin sanoen luodaan Home Assistantin -kansiosta kopio. Tämä tapahtuu päätteen kautta siten, että annetaan päätteessä komento (tällöin pitää olla tietysti oikeassa hakemistossa, jossa käsky annetaan)\nsudo cp -r homeassistant homeassistant_backup Varmuuskopioinnin jälkeen käynnistetään Home Assistantin kontti uudelleen komennolla\nsudo docker-compose up -d Seuraavaksi odotetaan hetken aikaa, että myös Home Assistant käynnistyy uudestaan. Tämän jälkeen Home Assistant tarjoaa suoraan Bluetooth -integraatiota käyttöön otettavaksi eli otetaan se käyttöön. Seuraavaksi Home Assistant tarjoaa automaattisesti myös RuuviTag -antureita käyttöön otettavaksi. Eli nyt Home Assistant löytää automaattisesti kantaman päässä olevat RuuviTag -anturit ja ehdottaa niiden lisäämistä järjestelmään.\nOman kokemukseni perusteella anturit ovat pysyneet hyvin käytössä ilman ongelmia. Mikäli käy kuitenkin niin, että Home Assistant ei löydäkään RuuviTag -antureita, niin seuraavaksi kannattaa päivittää RuuviTagien firmikset viimeisimpään versioon. Firmiksien päivitys yleensä viimeistään korjaa tilanteen.\n","tags":["docker","docker-compose","duplicati","homeassistant","kotiautomaatio","ruuvitag","ruuvitag-ble","ruuvitag-discovery"], "section": "posts"},{"date":"1687910400", "url":"https://eddyshomepages.github.io/posts/huoltokatko/", "title":"Huoltokatko 28.6.2023", "summary":"Nettisivuilla voi esiintyä 28.6.2023 katkoksia sivuston huoltoon ja yhteyksiin liittyen.", "content":"Nettisivuilla voi esiintyä 28.6.2023 katkoksia sivuston huoltoon ja yhteyksiin liittyen.\n","tags":[], "section": "posts"},{"date":"1687219200", "url":"https://eddyshomepages.github.io/posts/sadevesimittarin-tuunaus-zigbee-verkkoon-sopivaksi/", "title":"Sadevesimittarin tuunaus Zigbee-verkkoon sopivaksi", "summary":"Seuraavaksi ajattelin kirjoittaa aiheesta, joka liittyy Home Assistantin lisäksi myös hiukan elektroniikkaan. Tarkoituksena on tuunata sadevesimittaria sellaiseksi, että se voidaan liittää Zigbee -verkkoon. Innostuksen tähän sain, kun luin vastaavanlaisesta muutoksesta Home Assistantin keskustelupalstalta, johon linkki https://community.home-assistant.io/t/diy-zigbee-rain-gauge/255379. Pienenä varoituksen sanana myös, että tämän muutostyön yhteydessä tarvitaan juotoskolvia.\nMitä tarvitaan? Link to heading Tarvikkeina tarvitaan jokin sadevesimittari, joka minulla on tällainen MTX Basic langanton sadevesimittari (HUOM! ei ole maksettu mainos) sekä Zigbee -verkkoon liitettävä ovi- ja ikkuna -anturi, kuten esimerkiksi Aqara, joka minulla on käytössä.", "content":"Seuraavaksi ajattelin kirjoittaa aiheesta, joka liittyy Home Assistantin lisäksi myös hiukan elektroniikkaan. Tarkoituksena on tuunata sadevesimittaria sellaiseksi, että se voidaan liittää Zigbee -verkkoon. Innostuksen tähän sain, kun luin vastaavanlaisesta muutoksesta Home Assistantin keskustelupalstalta, johon linkki https://community.home-assistant.io/t/diy-zigbee-rain-gauge/255379. Pienenä varoituksen sanana myös, että tämän muutostyön yhteydessä tarvitaan juotoskolvia.\nMitä tarvitaan? Link to heading Tarvikkeina tarvitaan jokin sadevesimittari, joka minulla on tällainen MTX Basic langanton sadevesimittari (HUOM! ei ole maksettu mainos) sekä Zigbee -verkkoon liitettävä ovi- ja ikkuna -anturi, kuten esimerkiksi Aqara, joka minulla on käytössä. Tämä MTX:n sadevesimittari toimii 433 MHz -verkkoon liitettynä, mutta minulla ei ollut sellaista mökillä käytössä, jonka vuoksi tuunasin tämän mittarin toimimaan Zigbee -verkossa.\nTämä MTX:n sadevesimittari, kuten myös useat muut markkinoilla olevat mittarit, toimivat siten, että mittarin sisällä on eräänlainen heiluri -kuppi (engl. tipping bucket), joka ohjaa sadevesimittarissa olevaa reed -relettä sitä mukaan, kun kuppi täyttyy vedellä. Eli sademäärän laskenta tapahtuu laskemalla pulsseina reed -releen aukeamista ja sulkeutumista samalla tavalla kuten tapahtuu ovi- ja ikkuna -antureissa eli kun ovi sulkeutuu, rele sulkeutuu ja kun ovi avautuu, niin rele avautuu. Samalla tavalla toimii myös tämä tuunattu sadevesimittari eli lasketaan sen antamaa pulssia ja annetaan Home Assistantin hoitaa sitten muunnos millimetreiksi.\nToteutus lyhykäisyydessään Link to heading Aluksi avataan sadevesimittari ja poistetaan vanha piirilevy siten, että olemassa olevan reed -releen johdot jäävät näkyville (tässä kuvassa piirilevy on jo poistettu ja johdot liitetty ovi- ja ikkuna -anturiin)\nKuva: Sademittari, josta alkuperäinen piirilevy poistettu\nSeuraavaksi avataan ovi- ja ikkuna -tunnistin ja poistetaan siitä reed -rele juottamalla se irti piirilevyltä sekä juottamalla sadevesimittarin reed -releen johdot tilalle\nKuva: Sademittarin reed -releen johdot juotettu ovianturin reed -releen tilalle\nAlla vielä kuva valmiista toteutuksesta ennen kuin paketti suljetaan\nKuva: Sademäärä -anturi valmis\nMuutokset Home Assistantiin Link to heading Lopuksi vielä yhdistetään sadevesimittari Home Assistantiin (ellei jo tehty) eli minä lisään mittarin Zigbee2MQTT kautta Home Assistantiin, jolloin se tulee näkyviin MQTT -liitännäisen kautta. Laitteen olen nimennyt \u0026ldquo;raingauge\u0026rdquo; eli sademäärämittari eli minulla laite näkyy nimellä binary_sensor.raingauge_contact.\nSeuraavaksi luodaan Home Assistantiin kaksi uutta sensoria eli lisätään configuration.yaml -tiedostoon alla olevat rivit\nsensor: - platform: history_stats name: Raingauge laskuri entity_id: binary_sensor.raingauge_contact #ovianturi state: \u0026#39;off\u0026#39; type: count start: \u0026#39;{{ now().replace(hour=0, minute=0, second=0) }}\u0026#39; end: \u0026#39;{{ now() }}\u0026#39; - platform: template sensors: rainfall_today: friendly_name: Sademäärä tänään unit_of_measurement: mm icon_template: mdi:water value_template: \u0026gt;- {% set count = states(\u0026#39;sensor.raingauge_laskuri\u0026#39;) | int %} {% set mm_per_pulse = 0.330024 %} {% set mm = count * mm_per_pulse %} {{ mm|round(1, \u0026#39;floor\u0026#39;) }} Sademittarin kalibrointi Link to heading Sadevesimittarin kalibrointi voidaan tehdä seuraavasti (selitetty myös keskustelupalstalla) eli aluksi mitataan sadevesimittarin pinta-ala sekä kuinka monta pulssia 10 ml vettä aiheuttaa. Laskelmia alla\nsadevesimittarin koko on 17,2 cm x 9,6 cm\n1 mm sadetta mittarissa on tällöin 0,1 x 17,2 x 9,6 = 16,512 ml\n10 ml vettä sademäärämittarissa aiheuttaa 5 pulssi eli 2 ml / pulssi\ntällöin saadaan sademääräksi per pulssi 16,512 / 10 / 5 = 0,33024 mm / pulssi\nEli edellä lasketulla tavalla saadaan laskettua vuorokautista kokonaissademäärää, mutta mikäli halutaan laskea tarkemmin myös esim. tunti-, viikko- jne. kohtaisia sademääriä, täytyy Home Assistantin configuration.yaml -tiedostoon lisätä vielä laskentakaavat näille eli tässä voidaan käyttää Home Assistantin utility_meter -integraatiota.\nutility_meter: # sademäärä per tunti rainfall_hour: source: sensor.rainfall_today cycle: hourly # sademäärä per viikko rainfall_week: source: sensor.rainfall_today cycle: weekly # sademäärä per kuukausi rainfall_month: source: sensor.rainfall_today cycle: monthly # sademäärä per vuosi rainfall_year: source: sensor.rainfall_today cycle: yearly Lopuksi voidaan vielä lisätä Home Assistantin työpöydälle tiedot sademääristä eli lisätään entities -kortti alla olevan mukaisesti\nKuva: Home Assistantin entities -kortti\n","tags":["433-mhz","elektroniikka","homeassistant","kotiautomaatio","mqtt","raingauge","reed-rele","sademittari","tipping-bucket","utility_meter","zigbee","zigbee2mqtt"], "section": "posts"},{"date":"1684627200", "url":"https://eddyshomepages.github.io/posts/motioneye-kameravalvonta-ohjelmiston-asennus/", "title":"MotionEye kameravalvonta -ohjelmiston asennus", "summary":"Tässä kirjoituksessa ajattelin kirjoittaa MotionEye -kameravalvonta -ohjelmiston asennuksesta RaspberryPi 3 -tietokoneelle. MotionEye on myös siitä mukava, että se toimii Home Assistantin kanssa hyvin yhteen ja kameroista saa tehtyä esim. liiketunnistimet Home Assistantiin samalla, kun ne hoitavat kameran virkaa.\nToki näitä vastaavia kameravalvonta -ohjelmistoja on muitakin, kuten esim. ZoneMinder, Shinobi ja Agent DVR (ent. iSpy), jotka toimivat myös hyvin Home Assistantin kanssa.\nMotionEye -sovelluksen on alun perin kehittänyt Calin Crisan, joka ei enää jatka ohjelmiston kehittämistä, vaan kehityksestä vastaa jatkossa uusi tiimi.", "content":"Tässä kirjoituksessa ajattelin kirjoittaa MotionEye -kameravalvonta -ohjelmiston asennuksesta RaspberryPi 3 -tietokoneelle. MotionEye on myös siitä mukava, että se toimii Home Assistantin kanssa hyvin yhteen ja kameroista saa tehtyä esim. liiketunnistimet Home Assistantiin samalla, kun ne hoitavat kameran virkaa.\nToki näitä vastaavia kameravalvonta -ohjelmistoja on muitakin, kuten esim. ZoneMinder, Shinobi ja Agent DVR (ent. iSpy), jotka toimivat myös hyvin Home Assistantin kanssa.\nMotionEye -sovelluksen on alun perin kehittänyt Calin Crisan, joka ei enää jatka ohjelmiston kehittämistä, vaan kehityksestä vastaa jatkossa uusi tiimi. Tällä hetkellä MotienEye:stä on tarjolla tosin vielä versio, joka käyttää vanhempaa Python 2 -versiota, mutta jatkossa ohjelma on tarkoitus kääntää Python 3 -versiolle.\nMotionEye -ohjelmistosta löytyy myös valmis levy-image MotionEyeOS, jonka voi kopioida muistikortille, laittaa kortin kiinni Raspiin ja laittaa virrat päälle, niin sen jälkeen on kameravalvonta -palvelin valmiina käyttöön.\nJärjestelmän päivittäminen ja tarvittavien sovellusten asentaminen Link to heading Minulla Raspi on myös muussa käytössä, joten asennan ohjelmiston erikseen järjestelmään. Asennukseen löytyvät tarkemmat asennusohjeet projektin Wiki -sivuilta, josta niitä voi tarkemmin katsoa. Minulle käyttiksenä on RaspberryPiOS:n Bullseye -versio, jonka asentamisesta ja konffaamisesta löytyy vanha kirjoitus täältä.\nJa vaikka minulla onkin käytössä Raspi, niin asennan MotionEye:n kuitenkin Debian 11 (Bullseye) -asennusohjeen mukaisesti eli asennus menee Wiki -sivuston perusteella aika lailla seuraavasti, mutta tarkistetaan ja asennetaan aluksi kuitenkin mahdolliset päivitykset komennolla\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade Seuraavaksi asennetaan tarvittavat muut sovellukset eli annetaan komento\nsudo apt install python2 curl motion ffmpeg v4l-utils python-dev-is-python2 python-setuptools libssl-dev libcurl4-openssl-dev libjpeg-dev zlib1g-dev libffi-dev libzbar-dev libzbar0 Seuraavaksi suljetaan ja poistetaan motion -sovellus käytöstä komennoilla\nsudo systemctl stop motion sudo systemctl disable motion Tämän jälkeen haetaan ja asennetaan Pythoniin pip -niminen sovellus komennoilla\nsudo curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py sudo python2 get-pip.py MotionEye:n asentaminen Link to heading Seuraavaksi asennetaan MotionEye komennolla (komento asentaa automaattisesti myös muut tarvittavat paketit, joita ovat tornado, jinja2, pillow ja pycurl)\nsudo pip install motioneye Asennuksen jälkeen tehdään vielä tarvittavat muutokset järjestelmään eli aluksi luodaan hakemisto motioneye hakemistoon /etc sekä kopioidaan hakemistoon motioneye.conf -tiedosto komennoilla\nsudo mkdir -p /etc/motioneye sudo cp /usr/local/share/motioneye/extra/motioneye.conf.sample /etc/motioneye/motioneye.conf Seuraavaksi luodaan medialle oma hakemisto komennolla\nsudo mkdir -p /var/lib/motioneye Lopuksi vielä tehdään MotionEye:stä automaattisesti käynnistyvä palvelin eli annetaan komennot\nsudo cp /usr/local/share/motioneye/extra/motioneye.systemd-unit-local /etc/systemd/system/motioneye.service sudo systemctl daemon-reload sudo systemctl enable motioneye sudo systemctl start motioneye Tarvittaessa MotionEye -sovelluksen saa päivitettyä komennolla\nsudo pip install motioneye --upgrade sudo systemctl restart motioneye MotionEye:n konfigurointi Link to heading Nyt on MotionEye asennettu ja seuraavaksi avataan MotionEye -palvelin webbi-selaimessa eli tämä tapahtuu siten, että avataan selaimessa osoite http://x.x.x.x:8765, jossa x.x.x.x on sen tietokoneen IP-osoite, johon MotionEye on asennettu.\nJärjestelmän kaikki konfigurointi sekä kameroiden lisääminen järjestelmään tapahtuu webbi-selaimen kautta ja MotionEye tukee mm. Raspiin liitettävää omaa kameraa sekä erilaisia IP- kameroita, jotka lähettävät kuvaa rtsp -protokollaa käyttäen.\nKameroista löytyy hyvä tietokokanta iSpy -sivustolta osoitteesta https://www.ispyconnect.com/cameras ja täältä melkein kannattaa katsoa oman kameran osalta kameran käyttämä protokolla ja striimin osoite.\nEsimerkiksi D-linkin kameroihin löytyy nettisivulta https://www.ispyconnect.com/camera/d-link tieto, että esim. DCS 4701E -mallisen kameran käyttämä protokolla on rtsp ja striimin osoite live3.sdp eli omassa verkossa tämä kamera pitäisi löytyä osoitteesta rtsp://x.x.x.x/live3.sdp.\nSeuraavissa kirjoituksissa kerron sitten tarkemmin, että miten MotionEye -järjestelmään liitetystä kamerasta saadaan tehtyä liiketunnistimen ja liitettyä se Home Assistant -pohjaiseen hälytysjärjestelmään.\n","tags":["halytysjarjestelma","homeassistant","kotiautomaatio","linux","motioneye","python","raspberrypi","raspberrypios","rtsp"], "section": "posts"},{"date":"1683417600", "url":"https://eddyshomepages.github.io/posts/syncthing-synkronointisovelluksen-asennus-ja-kayttoonotto/", "title":"Syncthing synkronointisovelluksen asennus- ja käyttöönotto", "summary":"Seuraavaksi ajattelin kirjoittaa Syncthing -nimisestä synkronointisovelluksesta, jolla pystyy esim. synkronoimaan puhelimen valokuvat automaattisesti omalle tietokoneelle ilman, että tarvitsee juurikaan tietää/tuntea oman kotiverkon asetuksista mitään. Riittää, että molemmille laitteille on asennettu Syncthing ja laitteet on yhdistetty toimimaan yhdessä.\nSyncthing on avoimen lähdekoodin sovellus ja sen toiminta perustuu Block Exchange Protocollan 1. versioon. Lisäksi Synctingin saa asetettua toimimaan, joko pelkästään omassa sisäverkossa tai vaihtoehtoisesti myös internetin yli. Syncthing myös salaa kaiken liikenteen käyttäen TLS:n versiota 1.", "content":"Seuraavaksi ajattelin kirjoittaa Syncthing -nimisestä synkronointisovelluksesta, jolla pystyy esim. synkronoimaan puhelimen valokuvat automaattisesti omalle tietokoneelle ilman, että tarvitsee juurikaan tietää/tuntea oman kotiverkon asetuksista mitään. Riittää, että molemmille laitteille on asennettu Syncthing ja laitteet on yhdistetty toimimaan yhdessä.\nSyncthing on avoimen lähdekoodin sovellus ja sen toiminta perustuu Block Exchange Protocollan 1. versioon. Lisäksi Synctingin saa asetettua toimimaan, joko pelkästään omassa sisäverkossa tai vaihtoehtoisesti myös internetin yli. Syncthing myös salaa kaiken liikenteen käyttäen TLS:n versiota 1.2 tai uudempi sekä luo automaattisesti tarvittavat sertifikaatit, joten käyttäjän ei tarvitse tehdä muuta kuin asentaa sovellus ja käynnistää se. Loppu konfigurointi hoidetaan nettiselaimen kautta.\nSyncthingistä löytyy versiot macOS:lle, Windows:lle, Linuxille, FreeBSD:lle, Solarikselle, OpenBSD:lle, Androidille ja mm. SailfishOS:lle.\nSyncthingin asennus Link to heading Itse käytän Syncthingiä siten, että minulla BananaPi -tietokone toimii \u0026ldquo;keskuskoneena\u0026rdquo; ja jota kautta jaettavat tiedostot jaetaan eri tietokoneiden ja puhelimien kesken. Käyttöjärjestelminä minulla on käytössä Debian -pohjaisia käyttöjärjestelmiä, joten Syncthingin asennuksen saa tehtyä suoraan ohjelmistolähteiden kautta antamalla komento sudo apt install syncthing, jota ennen kuitenkin tarkistetaan ja asennetaan päivitykset antamalla komento\nsudo apt update \u0026amp;\u0026amp; sudoa apt upgrade Vaihtoehtoisesti Syncthingin voi asentaa myös käyttäen ohjelmistolähteenä apt.syncthing.net -ohjelmistolähdettä, mutta tällöin täytyy aluksi asentaa release-key ja stable -ohjelmistolähteet komennoilla\nsudo curl -o /usr/share/keyrings/syncthing-archive-keyring.gpg https://syncthing.net/release-key.gpg echo \u0026#34;deb [signed-by=/usr/share/keyrings/syncthing-archive-keyring.gpg] https://apt.syncthing.net/ syncthing stable\u0026#34; | sudo tee /etc/apt/sources.list.d/syncthing.list Seuraavaksi asennetaan itse sovellus samalla komennolla kuin aikaisemmin eli annetaan komennot\nsudo apt update sudo apt install syncthing Syncthin käynnistys ja asetukset Link to heading Seuraavaksi Syncthing voidaan käynnistää ja työpöydällä tämä tapahtuu aloitusvalikon kautta. Ainakin Linuxin puolella aloitusvalikkoon tulee kuvake Syncthingin käynnistämiseksi ja sen saa asetettua käynnistymään myös automaattisesti työpöydän asetuksien kautta.\nSeuraavaksi avataan selain eli annetaan sen koneen IP-osoite, jolle Syncthing on asennettu eli minulla esimerkiksi tämä sama tietokone, jolloin osoite on http://127.0.0.1:8384 (tai vaihtoehtoisesti voidaan käyttää myös osoitetta http://localhost:8384).\nSyncthing käyttää oletusporttina porttia 8384, mutta tämän voi halutessaan muuttaa sovelluksen asetuksien kautta.\nEli avaamisen jälkeen selaimelle avautuu alla olevan kaltainen ikkuna\nKuva: Syncthing aloitusikkuna\nTässä ikkunassa kohdassa Kansiot näkyvät kaikki ne laitteen kansiot, jotka jaetaan kohdassa Laitteet näkyvien laitteiden kanssa. Kohdassa Tämä laite näkyy tämän kyseisen laitteen tiedot.\nLisää jaettavia kansioita Link to heading Syncthing tekee valmiiksi oletuksena Sync -nimisen kansion, mutta mikäli halutaan jakaa muitakin kansioita, se voidaan tehdä valitsemalla Lisää kansio, jolloin avautuu alla oleva näkymä\nKuva: Syncthing, lisää kansio\nKansiota lisätessä annetaan aluksi kansion nimi, kansion ID (tulee yleensä automaattisesti) sekä kansion polku. Tässä huomataan, että oletuksena kansio luodaan kotihakemistoon eli hakemistopolku on tässä tapauksessa /home/user/kansio.\nLisää laitteita Link to heading Kansion asetuksien jälkeen voidaan lisätä uusia laitteita ja tämä tapahtuu painamalla kohdasta Lisää laite, jolloin avautuu alla olevan kaltainen ikkuna\nKuva: Syncthing, lisää laite - Yleinen\nLaitteen lisäämiseksi tarvitaan tieto lisättävän laitteen ID:stä ja tämä tieto saadaan avaamalla Syncthing lisättävän laitteen selaimessa.\nTämän jälkeen avataan oikeasta yläreunasta kohta Muokkaa - Näytä ID, jolloin näkyviin tulee QR -koodi sekä numero/kirjainsarja, jossa on kahdeksan kappaletta seitsemän merkkisiä numero/kirjain -yhdistelmiä.\nTämä merkkisarja tarvitaan, jotta uusi laite voidaan lisätä. Syncthing yleensä löytää samassa verkossa olevat laitteet automaattisesti ja ne näkyvät Laitteen ID -kohdan alla, josta sitten voidaan valita oikea laite. Tämän jälkeen, kun laite on valittu, tulee nettisivun yläreunaan näkyviin kysymys, että saako tämä lisättävä laite yhdistää ja tähän voidaan vastata kyllä.\nSeuraavaksi valitaan vielä kansiot, jotka halutaan jakaa eli alla minulla jaettavaksi tulisivat kansiot Dokumentit sekä Kuvat_SailfishOS.\nKuvat: Syncthing, lisää laite - Jakaminen\nOikeasta ylerunasta kohdasta Muokkaa - Asetukset voidaan kohdassa Yleinen muuttaa esim. hakemistojen oletuspolkua. Tämä tapahtuu kohdasta Oletuspolku kansioille eli tässä kohdassa määritetään oletuskansio, johon kansioon muiden laitteiden kanssa jaetut kansiot tallennetaan. Tässä tapauksessa oletuskansiona ~ (tilde) eli tämän tarkoittaa kotikansiota, joka tässä Linuxilla on /home/user.\nKuva: Syncthing asetukset, kohta Yleinen\nKohdasta GUI avautuu alla oleva näkymä ja tässä voidaan muokata mm. käyttöliittymän osoitetta ja porttia sekä ottaa käyttöön suojattu https -yhteys käyttöliittymän kanssa.\nKuva: Syncthing asetukset, kohta GUI\nAsetuksien muista kohdista löytyy tietoja yhteyksistä ja täältä voidaan määrittää myös mahdolliset ohitetut laitteet tai -kansiot, mutta näihin ei ole yleensä tarvinnut tehdä muutoksia.\n","tags":["android","bananapi","debian","freebsd","linux","macos","openpsd","sailfishos","solaris","syncthing","windows"], "section": "posts"},{"date":"1682208000", "url":"https://eddyshomepages.github.io/posts/jellyfin-mediapalvelimen-asennus/", "title":"Jellyfin -mediapalvelimen asennus", "summary":"Kirjoitin aikaisemmin tarinan Emby -mediaserverin asentamisesta ja nyt ajattelin kirjoittaa vaihtoehtoisesta ratkaisusta eli Jellyfin -mediaserverin asentaminen. Jellyfin on oma palvelimensa vaikka sen alkujuuret juontavatkin Emby -mediaserveriin eli toisin sanoen Jellyfin on forkki Emby -mediaserveristä. Jellyfin -mediaserverin kautta voi mm. katsoa videoita ja TV -tallennuksia, kuunnella musiikkia sekä katsella myös valokuvia eli sovellus on siinä mielessä monipuolinen.\nJellyfinin asennus Link to heading Minä asennan Jellyfin -mediaserverin BananaPi -tietokoneella ja katsotaan miten se siinä toimii.", "content":"Kirjoitin aikaisemmin tarinan Emby -mediaserverin asentamisesta ja nyt ajattelin kirjoittaa vaihtoehtoisesta ratkaisusta eli Jellyfin -mediaserverin asentaminen. Jellyfin on oma palvelimensa vaikka sen alkujuuret juontavatkin Emby -mediaserveriin eli toisin sanoen Jellyfin on forkki Emby -mediaserveristä. Jellyfin -mediaserverin kautta voi mm. katsoa videoita ja TV -tallennuksia, kuunnella musiikkia sekä katsella myös valokuvia eli sovellus on siinä mielessä monipuolinen.\nJellyfinin asennus Link to heading Minä asennan Jellyfin -mediaserverin BananaPi -tietokoneella ja katsotaan miten se siinä toimii. Eli aluksi ladataan Jellyfin -sivustolta asennus -scripti, jolla asennus saadaan suoritettua eli aluksi kirjaudutaan BananaPi -koneelle etänä SSH:n avulla. Aluksi kuitenkin tarkistetaan ja asennetaan päivitykset eli annetaan komento\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade Seuraavaksi voidaan ajaa asennus -scripti eli annetaan komento\ncurl https://repo.jellyfin.org/install-debuntu.sh | sudo bash Tämän jälkeen odotellaan hetki asennuksen suorittamista. Kun asennus on valmis, voidaan jatkaa Jellyfinin asennusta selaimen kautta eli otetaan selaimella yhteyttä ko. koneeseen, johon Jellyfin on asennettu eli http://x.x.x.x:8096. Tämän jälkeen avautuun alla olevan kaltainen ikkuna eli aluksi valitaan asennuskieli.\nKuva 1: Jellyfin - asennuskielen valinta\nSeuraavaksi luodaan pääkäyttäjä.\nKuva 2: Jellyfin - pääkäyttäjän luonti\nSeuraavana lisätään Jellyfiniin mahdolliset mediakirjastot. Mediakirjastojen lisäys voidaan tehdä myös myöhemminkin sen jälkeen, kun asennukset on suoritettu.\nKuva 3: Jellyfin - mediakirjaston asetus\nMediakirjaston tietojen antamisen jälkeen valitaan metatietojen kieli ja maa.\nKuva 4: Jellyfin - metatietojen kieli- ja maa-asetus\nKieliasetuksien jälkeen määritetään etäkäyttö eli voidaan sallia serverin etäkäyttö. Reitittimien porttien automaattista avaamista (UPnP) en suosittele sallittavaksi.\nKuva 5: Jellyfin - etäkäytön määritys\nTämän jälkeen asennus on valmis ja Jellyfin -mediaserveri on valmis käyttöön otettavaksi.\nKuva 6: Jellyfin - asennus on valmis\nLopuksi voidaan kirjautua järjestelmään sisään ja aluksi kannattaa luoda tavallinen käyttäjä, jolla käyttää Jellyfin -mediaserveriä.\nKuva 7: Jellyfin - kirjautumisikkuna\nJellyfiniin löytyy useita eri clienttejä eri alustoille kuten Linux, Android, AndroidTV, iOS, Roku, Kodi, webOS sekä myös SailfishOS -käyttöjärjestelmälle. Myös palvelin -versiot löytyvät yleisimmille Linux -jakeluille kuten Debian, Ubuntu, Arch, Fedora, CentOS, Gentoo sekä geneerinen- ja portable -versio Linuxille.\nItselläni on asennettuna Sony Xperia 10 II -puhelimeen SailfishOS -käyttöjräjestelmä ja seuraaville kerroilla voin käydä hiukan läpi tätä käyttistä.\n","tags":["android","androidtv","archlinux","bananapi","centos","debian","emby","fedora","gentoo","ios","kodi","linux","roku","sailfishos","ubuntu","webos"], "section": "posts"},{"date":"1680220800", "url":"https://eddyshomepages.github.io/posts/home-assistantin-kaytto-halytysjarjestelmana-osa-2/", "title":"Home Assistantin käyttö hälytysjärjestelmänä, osa 2", "summary":"Seuraavaksi ajatteli jatkaa tarinaa Home Assistantin käytöstä hälytysjärjestelmänä. Tässä tarinassa käyn läpi RFID-lukijan tekemisen ja liittämisen Home Assistantiin siten, että RFID- tagilla tai -kortilla voi laittaa hälyt päälle ja ottaa ne pois päältä.\nMateriaalina tarvitaan RFID-lukija, RFID -tagi sekä jokin ESP8266 -mikrokontrolleri. Minulla on RFID -lukijana joy-it RFID-RC522 -lukija ja mikrokontrollerina Wemos D1 Mini lähinnä sen pienuuden vuoksi. Mikrokontrollerissa käytän firmiksenä ESPHome -firmwarea, koska se on hyvin yhteensopiva Home Assistantin kanssa.", "content":"Seuraavaksi ajatteli jatkaa tarinaa Home Assistantin käytöstä hälytysjärjestelmänä. Tässä tarinassa käyn läpi RFID-lukijan tekemisen ja liittämisen Home Assistantiin siten, että RFID- tagilla tai -kortilla voi laittaa hälyt päälle ja ottaa ne pois päältä.\nMateriaalina tarvitaan RFID-lukija, RFID -tagi sekä jokin ESP8266 -mikrokontrolleri. Minulla on RFID -lukijana joy-it RFID-RC522 -lukija ja mikrokontrollerina Wemos D1 Mini lähinnä sen pienuuden vuoksi. Mikrokontrollerissa käytän firmiksenä ESPHome -firmwarea, koska se on hyvin yhteensopiva Home Assistantin kanssa.\nRFID -lukijan rakentaminen Link to heading Aluksi aloitetaan RFID -lukijan rakentaminen kytkemällä RFID -lukija mikrokontrolleriin seuraavasti:\nKuva: RFID -lukijan kytkentä, kuva luotu käyttäen Fritzing -sovellusta\nEli pinnien osalta kytkentä on alla olevan mukainen:\nRFID-RC522 (joy-it:in lukijan pinnijärjestys) WEMOS D1 MINI GND GND VCC 3V3 NSS D8 (GPIO15) SCK D5 (GPIO14) MOSI D7 (GPIO13) MISO D6 (GPIO12) RST RST Taulukko: Pinnien kytkentä\nSeuraavaksi muokataan ESPHome -asetustiedostoa sopivaksi eli mennään ESPHomen hakemistoon, joka luotiin asennuksen yhteydessä home -hakemistoon eli annetaan komento\ncd esphome Seuraavaksi tehdään firmiksen asetustiedosto seuraavalla komennolla\nnano nodemcu-rfid.yaml Tämän jälkeen kopioidaan tiedostoon seuraavat rivit\nesphome: name: nodemcu-rfid platform: ESP8266 board: d1_mini wifi: ssid: \u0026#34;tähän wifi-verkon ssid\u0026#34; password: \u0026#34;tähän wifi-verkon salasana\u0026#34; # Enable fallback hotspot (captive portal) in case wifi connection fails ap: ssid: \u0026#34;rfid Fallback Hotspot\u0026#34; password: \u0026#34;tähän jokin salasana\u0026#34; captive_portal: # Enable logging logger: # Enable Home Assistant API api: # Enable OTA updates ota: # Enable web-server web_server: port: 80 spi: clk_pin: GPIO14 miso_pin: GPIO12 mosi_pin: GPIO13 rc522_spi: cs_pin: GPIO15 update_interval: 1s # Alla oleva asetus lisää tagin automaattisesti Home Assistantiin, kun lukija lukee tagin on_tag: then: - homeassistant.tag_scanned: !lambda \u0026#39;return x;\u0026#39; # Sensorit text_sensor: - platform: wifi_info ip_address: name: \u0026#39;IP-address\u0026#39; # Mikrokontrollerin IP-osoite ssid: name: \u0026#39;SSID\u0026#39; # Mikrokontrollerin wifi-verkko, johon se on yhdistetty Kun asetukset ovat kunnossa, edetään samaan tapaan kuin tehtiin aikaisemmassa tarinassa, jossa luotiin pulssianturi laskemaan sähkömittarin pulsseja. Eli yhdistetään mikrokontrolleri-kortti USB-kaapelilla tietokoneeseen ja annetaan alla olevat käskyt\nesphome compile nodemcu-rfid.yaml esphome upload nodemcu-rfid.yaml Ensimmäisenä käännetään firmis compile -käskyllä ja tässä menee hetki aikaa riippuen tietokoneen nopeudesta. Kun kääntäminen on valmis, niin seuraavaksi annetaan käsky upload, joka lataa käännetyn firmiksen mikrokontrollerille. Kun firmistä ladataan mikrokontrolleriin, niin valitaan se vaihtoehto, jolla firmis ladataan USB-väylän kautta.\nYhdistäminen Home Assistantiin Link to heading Seuraavaksi voidaan yhdistää tagi Home Assistantiin eli luetaan tagi lukijalla, jonka se pitäisi ilmestyä Home Assistantiin näkyviin asetuksien alle kohtaan \u0026ldquo;Merkinnät\u0026rdquo; (kts. kuva alla)\nKuva: Home Assistant, Asetukset - Merkinnät\nLuetut tagit näkyvät luettelossa ja avatessa tagin tiedot, ne näkyvät alla olevan mukaisesti (tiedoista poistettu tagin tunniste ja QR-koodi)\nKuva: Tagin tiedot\nAutomaatioiden luominen Link to heading Seuraavaksi luodaan tagille automaatio eli painetaan tagin rivillä tätä \u0026ldquo;robotin pää\u0026rdquo; -kuvaketta\nKuva: Automaation lisääminen tagille\nEnsimmäisenä lisätään automaatio, joka kytkee hälytykset päälle, kun tagi skannataan. Eli alla oleva automaatio tarkastaa aluksi ehdon, että hälyt eivät ole päällä ja mikäli tämä ehto toteutuu, niin automaatio laittaa ne päälle. Kuvassa näkyvä koodi asetetaan Alarmon asetuksista, kun luodaan käyttäjä, jolle tagi kohdistetaan.\nKuva: Hälyt päälle, kun tagi skannataan\nLopuksi luodaan vielä toinen automaatio, jolla hälyt otetaan pois päältä. Eli tässä automaatio tarkistaa aluksi, että hälyt ovat päällä ja mikäli tämä ehto täyttyy, niin automaatio ottaa ne pois päältä.\nKuva: Hälyt pois päältä, kun tagi skannataan\nEli nyt meillä on luotuna Home Assistantin hälytysjärjestelmään lukija, joka lukee tagin ja laittaa sen perusteella hälytykset päälle tai pois päältä.\nSeuraavaksi tätä Home Assistantin avulla tehtyä hälytysjärjestelmää voidaan laajentaa esim. kameroilla, jotka voidaan laittaa ottamaan kuvia tai videoita, kun hälyt ovat lauenneet ja lähettämään ne esim. sähköpostiin, Telegram -sovellukseen tai Signal -sovellukseen. Vaihtoehtoja siis löytyy mitä vain keksii tehdä.\n","tags":["alarmo","esp8266","esphome","halytysjarjestelma","homeassistant","joy-it-rfid-rc522","kotiautomaatio","rfid","wemos-d1-mini"], "section": "posts"},{"date":"1678838400", "url":"https://eddyshomepages.github.io/posts/raspberrypi-osn-asentaminen-kiosk-tilaan/", "title":"RaspberryPi OS:n asentaminen kiosk -tilaan", "summary":"Seuraavaksi ajattelin kirjoittaa asiasta, joka tuli vastaani jokin aika sitten eli miten RaspberryPi OS:n saa asetettua kiosk -tilaan ja saako käyttöjärjestelmän asetettua sellaiseen tilaan, että näppäimistön ja hiiren avulla ei päästä käsiksi käyttöjärjestelmään.\nMikäli järjestelmään halutaan saada yhteys, mutta näppäimistön ja hiiren käyttö on estetty, niin tällöin täytyy miettiä jokin muu yhteystapa ja jäljelle jää oikeastaan ottaa yhteys koneeseen joko etänä tai paikan päällä esim. siten, että laite luo ympärilleen hotspotin, jonka WI-FI -verkkoon sitten yhdistetään ja kirjaudutaan koneelle esim.", "content":"Seuraavaksi ajattelin kirjoittaa asiasta, joka tuli vastaani jokin aika sitten eli miten RaspberryPi OS:n saa asetettua kiosk -tilaan ja saako käyttöjärjestelmän asetettua sellaiseen tilaan, että näppäimistön ja hiiren avulla ei päästä käsiksi käyttöjärjestelmään.\nMikäli järjestelmään halutaan saada yhteys, mutta näppäimistön ja hiiren käyttö on estetty, niin tällöin täytyy miettiä jokin muu yhteystapa ja jäljelle jää oikeastaan ottaa yhteys koneeseen joko etänä tai paikan päällä esim. siten, että laite luo ympärilleen hotspotin, jonka WI-FI -verkkoon sitten yhdistetään ja kirjaudutaan koneelle esim. SSH:n avulla.\nMikäli yhteys halutaan ottaa kokonaan etänä, niin tällöin pitäisi käyttää jonkinlaista etätyöympäristöä tai asentaa Raspille VPN-palvelin. Valmiiden etäyhteyssovellusten kuten TeamViewerin tms. käyttö ei taas välttämättä toimi, koska laite on kiosk -tilassa ja varsinaista työpöytää ei ole käytössä. Voin olla tässä myös väärässäkin, koska en ole ehtinyt tähän oikein vielä perehtyä.\nRaspberryPi OS:lle pystyy asentamaan OpenVPN -palvelimen helposti asentamalla se esim. PiVPN:n avulla, joka on käytännössä valmis scripti, joka asentaa Raspille OpenVPN -palvelimen. Tällöin täytyy olla kuitenkin tiedossa laitteen ulkoinen IP-osoite, jotta yhteys voidaan ottaa. Raspille voidaan tietysti konffata esim. 4G -mokkula, jonka liittymässä olisi julkinen IP-osoite käytössä, mutta tällöin tarvittaisiin vielä lisäksi jokin DNS-palvelu, jonka avulla laitteelle saataisiin ulkoinen nettisoite. Näitä ilmaisia DNS palveluita kyllä löytyy kuten esim. DynDNS jne. sekä suomalainen dy.fi -palvelu, joka minulla on käytössä.\nRaspberryPiOS asentaminen kiosk -tilaan Link to heading Aloitetaan kuitenkin asennus asentamalla aluksi RaspberryPi OS muistikortille ja tähän löytyi ohjeet aikaisemmasta kirjoituksesta, johon linkki tässä.\nSeuraavaksi laitetaan muistikortti koneeseen ja käynnistetään kone. Odotellaan hetki ja tarkistetaan vaikka modeemin kautta, että mikä on tullut laitteelle IP-osoitteeksi. Tämän jälkeen kirjaudutaan SSH:n avulla laitteelle sisään eli annetaan komento\nssh pi@x.x.x.x Tässä tapauksessa käyttäjänä on pi ja x.x.x.x on koneen IP-osoite. Seuraavaksi asennetaan mahdolliset päivitykset koneelle eli annetaan komento\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade Päivityksien jälkeen asennetaan Xserver, jotta Chromium saadaan käynnistymään eli annetaan komento\nsudo apt-get install --no-install-recommends xserver-xorg x11-xserver-utils xinit openbox Seuraavaksi asennetaan paketit chromium ja unclutter komennolla\nsudo apt-get install --no-install-recommends chromium-browser unclutter Eli chromium asennetaan minimi paketeilla ja unclutter on taas sovellus, jolla saadaan piilotettua hiiren kuvake näytöltä.\nTässä vaiheessa voitaisiin asentaa myös esim. lightdm tms. ja asettaa järjestelmä kirjautumaan automaattisesti työpöydälle, mutta tehdään asia hiukan toisella tavalla.\nSeuraavaksi ajetaan komento sudo raspi-config ja asetetaan jäjestelmän kirjautumaan automaattisesti konsoliin eli aluksi valitaan kohta 1. System Options\nKuva: raspi-config - system options\nSeuraavaksi valitaan kohta S5. Boot / Auto Login\nKuva: raspi-config - boot / auto login\nJa lopuksi valitaan vielä kohta B2. Console Autologin\nKuva: raspi-config - console autologin\nTämän jälkeen poistutaan sovelluksesta ja käynnistetään kone uudestaan (tätä tarjotaan automaattisesti vaihtoehdoksi).\nKäynnistyksen jälkeen otetaan taas uusi yhteys SSH:n kautta ja annetaan komento nano /home/pi/.bash_profile ja lisätään tiedostoon seuraavat rivit eli tarkoittaen sitä, kun kone tunnistaa käynnistyksen yhteydessä näytön, niin sen jälkeen käynnistetään graafinen työpöytä komennolla startx.\nif [ -z $DISPLAY ] \u0026amp;\u0026amp; [ $(tty) = /dev/tty1 ] then startx fi Tämän jälkeen suljetaan ja tallennetaan tiedosto sekä annetaan komento nano /home/pi/.xinitrc ja lisätään tänne seuraavat rivit\n!/usr/bin/env sh xset -dpms xset s off xset s noblank unclutter \u0026amp; chromium-browser https://fasted.dy.fi --window-size=1920,1080 --window-position=0,0 --start-fullscreen --kiosk --incognito --noerrdialogs --disable-translate --no-first-run --fast --fast-start --disable-infobars --disable-features=TranslateUI --disk-cache-dir=/dev/null --overscroll- history-navigation=0 --disable-pinch Näillä xset komennoilla estetään näytönsäästäjän meneminen päälle ja järjestelmän meneminen automaattisesti standby -tilaan ja annetaan chromiumille komennot\nTämän jälkeen voidaan käynnistää kone uudestaan, jolloin se käynnistyy kiosk -tilassa ja em. mukaisesti se avaa tämän sivuston eli osoitteen https://fasted.dy.fi.\nLaitteen muut asetukset kuten USB-porttien poistaminen käytöstä Link to heading Lopuksi vielä poistetaan USB-portit käytöstä eli se saadaan tehty komennolla\necho \u0026#39;1-1\u0026#39; | sudo tee /sys/bus/usb/drivers/usb/unbind Portit saadaan palautettua käyttöön komennolla\necho \u0026#39;1-1\u0026#39; | sudo tee /sys/bus/usb/drivers/usb/bind Mikäli halutaan poistaa myös verkkoliitäntä pois käytöstä, niin tällöin voidaan antaa komento\nsudo ifconfig eth0 down Verkkoliitäntä saadaan palautettua käyttöön komennolla\nsudo ifconfig eth0 up Nämä edelle mainitut toimenpiteet komoutuvat siinä vaiheessa, kun kone käynnistetään uudelleen eli meidän tarvitsee muokata tiedostoa /etc/rc.local eli annetaan komento\nsudo nano /etc/rc.local Ja lisätään tiedoston loppuun ennen riviä exit 0 rivit\necho \u0026#39;1-1\u0026#39; | sudo tee /sys/bus/usb/drivers/usb/unbind #sudo ifconfig eth0 down HUOM! Mikäli verkkoliitäntä poistetaan käytöstä, niin tulee muistaa asettaa WI-Fi -yhteys päälle mikäli verkkoyhteyttä tarvitaan. Nyt verkkoliitäntää ei oteta pois käytöstä, joten rivin alkuun on laitettu # -merkki.\nMikäli myös bluetooth halutaan poistaa käytöstä, niin muokataan tiedostoa /boot/config.txt komennolla\nsudo nano /boot/config.txt Ja lisätään tiedoston loppuun rivi\ndtoverlay=disable-bt Näiden muutoksien jälkeen yhteys voidaan ottaa enää SSH:n kautta eli nyt laite on suojattu mahdolliselta muokkaukselta eli laitteelle ei pääse käsiksi esim. kytkemällä siihen erillien näppäimistö tai hiiri.\n","tags":["dns","dy.fi","hotspot","kiosk","openvpn","raspberrypios","ssh","vpn"], "section": "posts"},{"date":"1677628800", "url":"https://eddyshomepages.github.io/posts/sahkon-kulutuksen-seurantaa-esp8266-esphomen-ja-home-assistantin-avulla/", "title":"Sähkön kulutuksen seurantaa ESP8266:n, ESPHomen ja Home Assistantin avulla", "summary":"Tämä tarina on oikeastaan jatkoa aikaisemmalle jutuille ja liittyy hyvin paljon Home Assistantiin, sähkön kulutuksen seurantaan ja myös edellisessä kirjoituksessa olleeseen ESPHome -firmikseen.\nMinä en ole tullut hankkineeksi mitään valmista mittausanturia, jolla voisin seurata kotini sähkönkulutusta. Olen ratkaissut tämän siten, että olen itse tehnyt tällaisen pulssianturin käyttäen ESP8266 -pohjaista mikrokontrolleria, LM393 Light Sensor -valoanturia (ei ole maksettu mainos) sekä firmiksenä ESPHomea. HUOM! Valoanturin tulee olla malliltaan nimen omaan fotodiodi, eikä LDR -moduuli.", "content":"Tämä tarina on oikeastaan jatkoa aikaisemmalle jutuille ja liittyy hyvin paljon Home Assistantiin, sähkön kulutuksen seurantaan ja myös edellisessä kirjoituksessa olleeseen ESPHome -firmikseen.\nMinä en ole tullut hankkineeksi mitään valmista mittausanturia, jolla voisin seurata kotini sähkönkulutusta. Olen ratkaissut tämän siten, että olen itse tehnyt tällaisen pulssianturin käyttäen ESP8266 -pohjaista mikrokontrolleria, LM393 Light Sensor -valoanturia (ei ole maksettu mainos) sekä firmiksenä ESPHomea. HUOM! Valoanturin tulee olla malliltaan nimen omaan fotodiodi, eikä LDR -moduuli. Alla olevassa kytkentäkuvassa on LDR -moduuli.\nTämä kombinaatio lukee sähkömittarin pulssia ja muuntaa sen sitten hetkelliseksi- ja vuorokautiseksi kulutukseksi eli ESPHomessa on käytössä pulse_meter- ja total_daily_energy -komponentit, joiden avulla laskenta tapahtuu. Lisäksi tarvitaan tarvitaan myös tieto omasta sähkömittarista, että kuinka paljon yksi pulssi on watteina, minulla yksi pulssi = yksi watti.\nMuut kulutukset kuten tunti-, vuorokausi-, kuukausi- ja vuosikulutukset lasketaan käyttäen Home Assistantin omaa energia -laskentaa. Toki näissä kulutusseurannoissa voisi käyttää myös Home Assistantin utility_meter -ominaisuutta, mutta tämä on kuitenkin aika lailla turhaa, koska Home Assistantin oma energia -laskenta hoitaa nämä hyvin ja säilyttää myös historiatiedot pidemmältä ajalta.\nValoanturin kytkentä mikrokontrolleri -korttiin Link to heading Aluksi siis kytkentään valoanturi mikrokontrolleriin seuraavasti :\nKuva: valoanturin kytkentä\nEli pinnien kytkentä tapahtuu seuraavasti:\nGND \u0026mdash; GND\n3V3 \u0026mdash; VCC\nD4 \u0026mdash; D0\nFirmwaren kääntäminen Link to heading Seuraavaksi palataan edellisen tarinan asiaan eli käännetään mikrokontrollerille uusi firmware käyttäen ESPHomea. Tätä varten meidän tarvitsee tehdä asetustiedosto firmistä varten.\nAluksi mennään ESPHomen hakemistoon, joka oli luotu home -hakemistoon eli annetaan komento\ncd esphome Seuraavaksi tehdään firmiksen asetustiedosto seuraavalla komennolla\nnano nodemcu-powerconsumption.yaml Tämän jälkeen kopioidaan tiedostoon seuraavat rivit\nesphome: name: nodemcu-powerconsumption platform: ESP8266 board: nodemcuv2 wifi: ssid: \u0026#34;wifi-verkon ssid\u0026#34; password: \u0026#34;wifi-verkon salasana\u0026#34; # Enable fallback hotspot (captive portal) in case wifi connection fails ap: ssid: \u0026#34;el-sensor Fallback Hotspot\u0026#34; password: \u0026#34;tähän jokin salasana\u0026#34; captive_portal: # Enable logging logger: # Enable Home Assistant API api: # Enable OTA updates ota: # Enable web-server web_server: port: 80 # Sensorit sensor: - platform: total_daily_energy name: \u0026#34;Total Daily Energy\u0026#34; # Vuorokauden kokonaiskulutus power_id: power1 - platform: pulse_meter pin: D6 unit_of_measurement: \u0026#39;kW\u0026#39; name: \u0026#39;Power Consumption Momentary\u0026#39; # Hetkellinen kulutus per kW filters: - multiply: 0.06 id: power1 total: unit_of_measurement: \u0026#39;kWh\u0026#39; name: \u0026#39;Total Consumption\u0026#39; # Kokonaiskulutus accuracy_decimals: 3 filters: - multiply: 0.001 # (1/1000 pulses per kWh) - platform: wifi_signal name: \u0026#34;WiFi Signal strenght\u0026#34; # Wifi-verkon signaalin vahvuus update_interval: 60s # Mikrokontrollerin kellonaika, jotta mm. vrk-kulutuksen laskenta onnistuu time: - platform: sntp id: sntp_time binary_sensor: - platform: gpio pin: D4 device_class: light name: \u0026#39;Pulse Measurement\u0026#39; # Tämä kertoo, että pulssimittaus on päällä id: light_detect filters: - delayed_off: 60ms text_sensor: - platform: wifi_info ip_address: name: \u0026#39;IP-address\u0026#39; # Mikrokontrollerin IP-osoite ssid: name: \u0026#39;SSID\u0026#39; # Mikrokontrollerin wifi-verkko, johon se on yhdistetty Osa näistä sensoreista, kuten wifi-verkon signaalin vahvuus, mikrokontrollerin IP-osoite tai wifi-verkko, ovat sellaisia, että niitä ei välttämättä tarvitse, mutta minulle ne ovat vähän kuin \u0026ldquo;nice to know\u0026rdquo; -tietoa.\nTämän jälkeen, kun asetukset ovat kunnossa, pitää mikrokontrolleri -kortti yhdistää tietokoneeseen USB-kaapelilla. Seuraavaksi voidaan sitten antaa komento esphome run nodemcu-powerconsumption.yaml, joka aluksi kääntää firmiksen ja sen jälkeen lataa sen mikrokontrolleri -kortille. Annetaan kuitenkin aluksi nämä käskyt erillisenä, jolloin ne ovat seuraavat\nesphome compile nodemcu-powerconsumption.yaml esphome upload nodemcu-powerconsumption.yaml Eli ensimmäisenä käännetään firmis compile -käskyllä ja tässä menee hetki aikaa riippuen tietokoneen nopeudesta. Kun kääntäminen on valmis, niin seuraavaksi annetaan käsky upload, joka lataa käännetyn firmiksen mikrokontrollerille. Minulla tuli tässä yhteydessä alla oleva näkymä\nKuva: firmwaren lataus mikrokontrollerille\nEli tässä vaiheessa, kun käännetään firmistä ensimmäisen kerran, ladataan se USB-väylän kautta, eli valitaan nro 1. Tämän jälkeen, kun firmis on ladattu kortille, voidaan kortti irrottaa USB-väylästä ja laittaa se sähkömittarin yhteyteen pulssia lukemaan.\nLaitteen yhdistäminen Home Assistantiin Link to heading Lopuksi mennään vielä Home Assistantin puolelle, joka yleensä löytää nämä ESPHome -laitteet automaattisesti, kuten minulla\nKuva: Home Assistant löytää ESPHome-laitteen\nViimeisenä vielä yhdistetään Total Daily Energy -sensori Home Assistantin energia -osioon, kuten alla\nKuva: Home Assistantin energia -osio\n","tags":["energia","energiankulutus","esp8266","esphome","homeassistant","kotiautomaatio","pulse_meter","total_daily_energy"], "section": "posts"},{"date":"1676160000", "url":"https://eddyshomepages.github.io/posts/esphomen-asennus-paatteen-kautta-linux-kayttojarjestelmaan/", "title":"ESPHomen asennus päätteen kautta Linux käyttöjärjestelmään", "summary":"Minulla on Home Assistantin yhteydessä erilaisia antureita, joita olen tehnyt käyttäen ESP32, ESP8266 ja Wemos D1 -mikrokontrollereita. Näitä minulla on mm. lukemassa sähkömittarin pulssia, erilaisina sensoreina kuten lämpötila, ilmankosteus, ilmanpaine, valoisuus tai mittaamassa auringon UV-säteilyä. Yhteistä näissä on se, että olen käyttänyt niissä ESPHome -firmwarea.\nESPHome on monipuolinen firmware ja se on myös tehty hyvin yhteensopivaksi Home Assistantin kanssa. ESPHomen asetukset tehdään yaml -tiedostoon samaan tapaa kuin voidaan tehdä myös Home Assistantissa.", "content":"Minulla on Home Assistantin yhteydessä erilaisia antureita, joita olen tehnyt käyttäen ESP32, ESP8266 ja Wemos D1 -mikrokontrollereita. Näitä minulla on mm. lukemassa sähkömittarin pulssia, erilaisina sensoreina kuten lämpötila, ilmankosteus, ilmanpaine, valoisuus tai mittaamassa auringon UV-säteilyä. Yhteistä näissä on se, että olen käyttänyt niissä ESPHome -firmwarea.\nESPHome on monipuolinen firmware ja se on myös tehty hyvin yhteensopivaksi Home Assistantin kanssa. ESPHomen asetukset tehdään yaml -tiedostoon samaan tapaa kuin voidaan tehdä myös Home Assistantissa. Lisäksi Home Assistant löytää automaattisesti ESPHome -laitteet ja vaihtoehtoisesti näissä voidaan myös käyttää MQTT -protokollaa. ESPHomelle on olemassa myös muitakin firmware -vaihtoehtoja kuten Tasmota ja ESPEasy, OpenMQTTGateway sekä myös muita, mutta tässä ei käydä niitä läpi vaikka niitäkin olen näissä mikrokontrollereissa kokeillut.\nESPHomen asennus Link to heading Seuraavaksi mennään asiaan eli käydäään läpi ESPHomen asennus päätteen kautta Linux -käyttöjärjestelmälle sekä se, miten firmwarea voidaan muokata ja miten se asennetaan mikrokontrolleri -kortille.\nMinulla Home Assistant on asennettuna Docker-Composen avulla, joten en voi käyttää tätä lisäosaa, joka olisi normaalisti käytössä Home Assistantin omassa käyttöjärjestelmässä. Ja nyt kun ESPHome asennetaan päätteen kautta, niin sen voi asentaa myös muillekin koneille kuin tälle koneelle, johon Home Assistant on asennettu.\nESPHomen voi asentaa myös Windowsille, mutta minä asennan sen kannettavaan tietokoneeseen, jonka käyttöjärjestelmänä on Devuan Linux. ESPHome voidaan asentaa myös Docker-Composen avulla, mutta minä teen asennuksen perinteisesti päätteessä.\nAluksi täytyy kuitenkin tarkistaa, että mikä versio Pythonista asennettu, koska ESPHome vaatii tällä hetkellä versiota 3.9. Eli tarkistetaan asennettu versio komennolla\npython3 --version Mikäli versio on jotain muuta kuin 3.9.x alkuinen, niin tällöin Python täytyy päivittää tai jos se puuttuu, niin tällöin se tulee asentaa. Minulla versio oli 3.9.2 eli asennus onnistuu. Seuraavaksi luodaan virtuaaliympäristö ESPHomea varten antamalla seuraavat käskyt\npython3 -m venv venv source venv/bin/activate Tämän jälkeen vielä varmistetaan, että python3-pip on asennettu eli annetaan komento\nsudo apt install python3-pip Seuraavaksi voidaankin sitten asentaa ESPHome antamalla seuraava käsky\npip3 install esphome HUOM! Tässä on tärkeää, että komento annetaan normaalina käyttäjänä, koska pääkäyttäjänä annettuna (sudo -komennolla) asennus voi rikkoa käyttöjärjestelmän. Seuraavaksi tarkistaan, että ESPHome on asennettu eli annetaan komento\nesphome version Mikäli järjestelmä antaa virheilmoituksen \u0026quot;Command not found\u0026quot;, johtuu se todennäköisesti siitä, että ESPHomen tietoja ei PATH -tiedostossa. Tämä voidaan tehdä komennolla `echo 'export PATH=$PATH:$HOME/.local/bin' \u0026gt;\u0026gt; $HOME/.bashrc`, jonka jälkeen pitää vielä kirjautua ulos ja takaisin sisään.\nFirmwaren kääntäminen Link to heading Seuraavaksi luodaan oma hakemisto esphome -tiedostoille esim. kotikansioon komennolla mkdir esphome, jonka jälkeen siirrytään ko. kansioon komennolla cd esphome.\nTämän jälkeen voidaan sitten kääntää ensimmäinen firmware antamalla komento esphome wizard testi.yaml, joka ohjaa sinua tekemään firmwaren alkuasetukset neljässä eri vaiheessa.\nVaiheessa yksi ESPHome pyytää antamaan nimen\nKuva: ESPHome vaihe 1\nVaiheessa kaksi valitaan mikrokontrollerin tyyppi eli ESP32 tai ESP8266\nKuva: ESPHome vaihe 2\nVaiheessa kolme annetaan WIFI-verkon tiedot eli SSID ja salasana\nKuva: ESPHome vaihe 3\nLopuksi vaiheessa neljä annetaan OTA -päivityksien salasana\nKuva: ESPHome vaihe 4\nTämän jälkeen tehtyä tiedostoa voidaan muokata eli päätteessä annetaan komento\nnano testi.yaml Eli muodostettu tiedosto näyttää alla olevan mukaiselta\nKuva: ESPHome testi.yaml -tiedosto\nSeuraavaksi tiedostoa voidaan vielä muokata sen mukaiseksi, mitä mikrokontrollerilla on tarkoitus tehdä ja kun asetukset ovat valmiina, niin tämän jälkeen annetaan komento\nesphome run testi.yaml Tämä komento kääntää firmawaren ja asentaa sen mikrokontrolleri -kortille. Vaihtoehtoisesti voidaan myös antaa alla olevat komennot, jolloin ensimmäisellä komennolla ESPHome kääntää koodin ja toisella komennolla lataa sen mikrokontrolleri -kortille\nesphome compile testi.yaml esphome upload testi.yaml Ensimmäinen asennus täytyy kuitenkin tehdä USB -yhteydellä, mutta sen jälkeen päivitykset voidaan ajaa verkon yli suoraan laitteelle.\nSeuraavissa tarinoissa voidaan sitten käydä läpi esim. RFID-tagin lukijan tekeminen ja sen yhdistäminen Home Assistantin hälytysjärjestelmän kanssa.\n","tags":["docker","docker-compose","esp32","esp8266","espeasy","esphome","homeassistant","kotiautomaatio","openmqttgateway","python","tasmota","wemos-d1"], "section": "posts"},{"date":"1675209600", "url":"https://eddyshomepages.github.io/posts/nain-rakennat-oman-kotiautomaatiojarjestelman-raspberrypin-ja-home-assistantin-avulla/", "title":"Näin rakennat oman kotiautomaatiojärjestelmän RaspberryPi:n ja Home Assistantin avulla", "summary":"Seuraavaksi ajattelin vetää yhteen aikaisempia kirjoituksia ja tehdä yhteenvedon siitä, miten kuka tahansa voi rakentaa oman kotiautomaatiojärjestelmän RaspberryPi:n ja Home Assistantin avulla.\nAsennuksessa käyn läpi kaksi eri vaihtoehtoa eli vaihtoehto 1, joka on helppo asennus tai vaihtoehto 2, joka on haastavampi tapa. Tässä kirjoituksessä keskitytään enemmän vaihtoehtoon 2.\nMikäli Home Assistantin pystyttää vaihtoehdon 1 mukaisesti, niin tällöin ei juurikaan tarvitse Linux -tuntemusta, mutta jos haluaa tehdä asioita pääte -tasolla, niin tällöin on kuitenkin hyvä tietää jotakin yaml -kielestä.", "content":"Seuraavaksi ajattelin vetää yhteen aikaisempia kirjoituksia ja tehdä yhteenvedon siitä, miten kuka tahansa voi rakentaa oman kotiautomaatiojärjestelmän RaspberryPi:n ja Home Assistantin avulla.\nAsennuksessa käyn läpi kaksi eri vaihtoehtoa eli vaihtoehto 1, joka on helppo asennus tai vaihtoehto 2, joka on haastavampi tapa. Tässä kirjoituksessä keskitytään enemmän vaihtoehtoon 2.\nMikäli Home Assistantin pystyttää vaihtoehdon 1 mukaisesti, niin tällöin ei juurikaan tarvitse Linux -tuntemusta, mutta jos haluaa tehdä asioita pääte -tasolla, niin tällöin on kuitenkin hyvä tietää jotakin yaml -kielestä. Tosin minullakaan ei ollut tästä sen enempää tietämystä, kun ensimmäisen kerran asensin Home Assistantin, mutta aikaa myöden tässä on sitä oppinut.\nJos taas on tietämystä Linuxin perusteista tai on ainakin halu oppia niitä, niin Home Assistantin voi pystyttää helposti vaihtoehdon 2 mukaan eli tässä kirjoituksessa keskitytään enemmän tähän.\nTarvikkeet, joilla pääsee alkuun, ovat seuraavat:\nRaspberryPi -tietokone, versio 3, 3+ tai 4\nRaspiin sopiva virtalähde\nHUOM! tavallinen kännykkälaturi ei ole suositeltava SD -muistikortti 32 Gb\nHUOM! versiot 3+ ja 4 voivat buutata suoraan myös ulkoiselta SSD-levyltä verkkokaapeli, mutta yhteys toimii myös WLAN:in kautta\nHUOM! WLAN asetukset täytyy tehdä jo RaspberryPi Imager -sovelluksessa toinen tietokone, jos yhteys otetaan SSH:n kautta\nNäppäimistö, hiiri ja näyttö, mikäli ei oteta yhteyttä SSH:n kautta\nLisäksi myös jokin Zigbee- tai Zwave -mokkula, mikäli haluaa liittää järjestelmään näitä laitteita\nVaihtoehto 1, helppo tapa Link to heading Ensimmäinen ja helpompi vaihtoehto pystyttää Home Assistant, on käyttää valmista käyttöjärjestelmää. Home Assistantin käyttöjärjestelmän tarkempia asennusohjeita ja levykuvan voi noutaa täältä. Home Assistantin voi asentaa myös suoraan RaspberryPi Imagerin avulla, johon linkki tässä. Eli yhteenvetona on, että aluksi kirjoitetaan muistikortille käyttöjärjestelmän levykuva ja sen kortti kiinni Raspiin. Tämän jälkeen virrat päälle ja odottamaan, että käyttöjärjestelmä käynnistyy.\nKäynnistymisen jälkeen mennään nettiselaimella ko. koneelle eli http://x.x.x.x:8123, jossa x.x.x.x on tämän koneen IP-osoite, jolle Home Assistant on asennettu.\nVaihtoehto 2, hiukan haastavampi tapa Link to heading Toisessa vaihtoehdossa käyn läpi sen toteutustavan, miten itse olen ottanut Home Assistantin käyttöön eli asennetaan se RaspberryPiOS -käyttäjärjestelmään Docker-Composen avulla. Tämän asennustavan olen valinnut puhtaasti siitä syystä, että voin käyttää Raspia myös muuhun tarkoitukseen, kuin pelkästään Home Assistantin pyörittämiseen.\n1. RaspberryPiOS -käyttöjärjestelmän asennus Link to heading Ensimmäisenä asennamme RaspberryPiOS -käyttöjärjestelmän muistikortille ja tähän olen tehnyt ohjeen, joka löytyy tämän linkin takaa. Asennuksen jälkeen laitetaan muistikortti Raspiin ja käynnistetään kone. Käynnistämisen jälkeen otetaan yhteys koneeseen SSH:n avulla tai vaihtoehtoisesti jos käytetään näyttöä, näppäimistöä ja hiirtä, niin yhteys on tällöin valmiina.\nKoneen käynnistymisen jälkeen ajetaan seuraavat komennot, jotka tarkistavat ja asentavat järjestelmän uusimmat päivitykset eli\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y\n2. Dockerin ja Docker-Composen asennus Link to heading Minulla Home Assistant on asennettu Docker-Composen avulla eli seuraavaksi asennetaan RasperryPiOS -käyttöjärjestelmään Docker ja Docker-Compose. Tähän löytyvät ohjeet täältä.\n3. Home Assistantin asennus Docker-Composen avulla Link to heading Sen jälkeen, kun Docker ja Docker-Compose on asennettu, niin seuraavaksi asennetaan Home Assistant Docker-Composen avulla. Tähän olen tehnyt ohjeen, joka löytyy tämän linkin takaa.\nKun Home Assistant on asentunut ja otettu käyttöön, seuraavaksi otetaan yhteys selaimen kautta samalla tavalla kuin vaihtoehto 1:ssä kirjoitettiin.\n4. MariaDB:n käyttöön ottaminen SQLiten sijaan (ei pakollista) Link to heading Home Assistant käyttää oletuksena SQLite -tietokantaa ja pienissä kokonaisuuksissa se toimii hyvin. Mikäli järjestelmään tulee vähänkään enemmän laitteita, niin tällöin suosittelen ottamaan käyttöön SQL -tietokannan kuten esim. MariaDB. Tämä siksi, että järjestelmän vikaherkkyys kasvaa SQLite -tietokannan kanssa ja myöhemmin alkaa tulla sitten ongelmia. Ohjeet MariaDB:n käyttöönottamiseksi löytyvät tämän linkin takaa.\n5. Home Assistantin varmuuskopiointi (ei pakollista) Link to heading Home Assistantista kannattaa myös ottaa varmuuskopiot aika ajoin ja tämä on ehkä yksi miinuspuoli, että varmuuskopiointi ja sen palautus ei toimi Dockerin tai Docker-Composen asennuksen kanssa kunnolla. Varmuuskopion voi tehdä Home Assistantin kautta, mutta sen palauttaminen ei suoraan onnistu tätä kautta, vaan se täytyy tehdä esim. päätteen avulla.\nItse olen hoitanut varmuuskopioinnin asentamalla tälle samalle Raspille Duplicati -serverin, joka hoitaa Home Assistantin varmuuskopioinnin. Tähän löytyy kirjoitus tämän linkin takaa.\n6. Muita asennuksia, joita olen tehnyt Home Assistantin yhteyteen Link to heading Muita asennuksia, joita olen tehnyt Home Assistantin yhteyteen, ovat esim. Mosquitto -brokerin -asennus, jonka avulla yhdistän mm. kaikki Zigbee-, Zwave- ja RuuviTag -anturit järjestelmään käyttäen MQTT -protokollaa. Mosquitto -brokerin asennuksen ohjeet löytyvät täältä.\nRuuviTag -antureiden lisäämisen järjestelmään olen hoitanut ruuvitag-discovery -ohjelmistoa käyttäen eli myös RuuviTagit lisätään järjestelmään MQTT -protokollaa käyttäen. Ohjeet tähän löytyvät täältä.\nZigbee -laitteet olen lisännyt järjestelmään Zigbee2MQTT:n avulla eli myös nämä laitteeet yhdistyvät MQTT -protokollan avulla Home Assistantiin. Ohjeet tähän löytyvät täältä.\nLisäksi blogeista löytyy kirjoituksia liittyen mm. sähkön hinnan seuraamiseen, autolämmityksen tekemiseen ja avoimen lähdekoodin virtuaaliavustimen käyttöön ottamiseen eli näitä voi halutessaan lukea sivustolta.\nTervetuloa lukemaan ja toivottavasti näistä olisi teille lukijoille apua. Mikäli koet niin sivuston linkkiä saa jakaa eteenpäin.\n","tags":["docker","docker-compose","duplicati","homeassistant","kotiautomaatio","mariadb","mqtt","raspberrypi","raspberrypios","ruuvitag","ruuvitag-discovery","sqlite","zigbee","zigbee2mqtt","zwave"], "section": "posts"},{"date":"1674432000", "url":"https://eddyshomepages.github.io/posts/home-assistantin-kaytto-halytysjarjestelmana-osa-1/", "title":"Home Assistantin käyttö hälytysjärjestelmänä, osa 1", "summary":"Seuraavaksi ajattelin kirjoittaa Home Assistantin käyttämisestä hälytysjärjestelmänä ja haluan myös heti jo tässä vaiheessa huomauttaa, että minä en kuitenkaan ota vastuuta siitä, jos joku henkilö tulee ja pääsee murtautumaan sisälle sen perusteella, että on järjestelmää rakentanut näiden minun ohjeiden mukaisesti.\nHome Assistant ei tietenkään ole kaupallisten versioiden veroinen lähinnä ehkä siksi, että laiteyhteydet voivat tekniikasta riippuen pätkiä, jolloin ne putoavat pois järjestelmästä. Mutta esim. laadukkaat Zigbee- tai Zwave -laitteet pitävät kyllä hyvin yhteydet yllä.", "content":"Seuraavaksi ajattelin kirjoittaa Home Assistantin käyttämisestä hälytysjärjestelmänä ja haluan myös heti jo tässä vaiheessa huomauttaa, että minä en kuitenkaan ota vastuuta siitä, jos joku henkilö tulee ja pääsee murtautumaan sisälle sen perusteella, että on järjestelmää rakentanut näiden minun ohjeiden mukaisesti.\nHome Assistant ei tietenkään ole kaupallisten versioiden veroinen lähinnä ehkä siksi, että laiteyhteydet voivat tekniikasta riippuen pätkiä, jolloin ne putoavat pois järjestelmästä. Mutta esim. laadukkaat Zigbee- tai Zwave -laitteet pitävät kyllä hyvin yhteydet yllä. Samoin tulee myös huolehtia siitä, että järjestelmän virransaanti on turvattu esim. UPS:in avulla siinä vaiheessa, jos ja kun sähköt mahdollisesti menevät poikki.\nNämä em. seikat kun huomioi, niin mielestäni Home Assistantia pystyy hyvinkin käyttämään hälytysjärjestelmän \u0026ldquo;keskusyksikkönä\u0026rdquo; hyväksyen kuitenkin sen tosiasian, että aivan kaupallisien versioiden toimintavarmuutta sillä ei välttämättä saada. Ja mikäli järjestelmästä haluaa saada mahdollisimman kattavan, niin se tietysti vaatii myös erilaisia antureita, liiketunnistimia, paloilmaisimia jne, mutta hyvälaatuisilla laitteilla järjestelmästä saa kuitenkin toimivan. Itse käytän Home Assistantin kanssa pääasiassa Zigbee- ja Zwave -laitteita sekä HACS:in kautta saatavaa Alarmo -lisäosaa, mutta Home Assistantiin saa myös itse koodattua tarpeelliset jutut ilman sitä.\nHUOM! HACS vaatii toimiakseen Github -tilin, mutta mikäli sinulla ei sellaista ole, niin Alarmon saa asennettua myös manuaalisesti Home Assistantin custom_components ominaisuutta hyödyntäen ja tarkemmin tietoja siitä löytyy tekijän Niels Faberin Github -sivuilta.\nMinulla itselläni Home Assistantiin on yhdistetty vuotovahteja, palovaroittimia, ovitunnistimia, kameroita, sireeni sekä myös paljon muuta, joten näistä saa hyvän kombinaation hälytysjärjestelmän pohjaksi. Olen myös tehnyt mm. NodeMCU -kehityskortin ja Joy-IT RFID -lukijan avulla lukijan, josta RFID -tagia käyttämällä saa laitettua hälyt päälle sekä myös otettua ne pois päältä. Ja lisäksi tietenkin täytyy myös ohjelmoida Home Assistantiin tarvittavat automaatiot, jotta järjestelmä tietää mitä milloinkin täytyy tehdä.\nHACS:in asennus Link to heading Minulla Home Assistant on asennettuna Docker-Composen avulla eli minun täytyy asentaa HACS sen mukaisesti. Aluksi siis kirjaudumme Raspiin, johon Home Assistant on asennettu ja menemme Dockeriin \u0026ldquo;sisälle\u0026rdquo; komennolla docker exec -it homeassistant bash. Seuraavaksi ladataan HACS:in asennus scripti komennolla wget -O - https://get.hacs.xyz | bash - ja annetaan scriptin hoitaa HACS:in asennus. Ennen kuin mennään eteenpäin, käynnistetään Home Assistant vielä uudestaan, jonka jälkeen HACS asennetaan Home Assistantin integraatioiden kautta.\nAlarmon asennus ja konfigurointi Link to heading Asennuksen jälkeen etsitään HACSin ohjelmalähteistä Alarmo ja asennetaan se. Asennuksen jälkeen Home Assistant tulee käynnistää uudestaan, jotta Alarmo aktivoituu. Tämän jälkeen Alarmo voidaan asentaa integraatioiden kautta eli haetaan sieltä käsin Alarmo ja asennetaan se. Asennuksen jälkeen Alarmo pitäisi tulla näkyviin vasemmalle sivupalkkiin eli valitaan se seuraavaksi. Tämän jälkeen tulee näkyviin neljä erilaista välilehteä, jotka ovat General, Sensors, Codes ja Actions (kuva alla).\nGeneral kohdasta voidaan asettaa erilaisia tiloja hälytysjärjestelmälle kuten esim. Poissa- ja Kotona-tila. Poissa -tilassa voidaan asettaa aktivoitumaan esim. kaikki ovi- ja liiketunnistimet, vuotovahdit, palovaroittimet jne, kun taas Kotona -tilassa voidaan aktivoida pelkästään ovitunnistimet, vuotovahdit ja palovaroittimet. Eli miten vain haluaa tehdä.\nSensors -kohdasta voidaan lisätä järjestelmään halutut anturit ja valita, että mitkä niistä aktivoituvat aina ja mitkä esim. vain silloin kun ollaan kotona.\nCodes -kohdassa annetaan järjestelmän käyttäjät ja heille omat pin -koodit tai salasanat, joilla järjestelmän saadaan kytkettyä päälle ja pois. Samoin tässä voidaan määrittää, että hälytykset voidaan ottaa pois käytöstä vain koodilla ja että ne voidaan esim. ilman koodia laittaa päälle.\nActions -kohdassa määritetään toimenpiteet, joita järjestelmä tekee, kun esim. hälytysjärjestelmä on lauennut tai se ei mene jostain syystä päälle. Minulla esim. hälytysten mennessä päälle alkaa sireeni soimaan, ulkovalot välkkymään ja lisäksi tulee vielä puhelimeen ilmoitus asiasta. Tässä kohdassa voidaan myös määrittää muut ilmoitukset, joita järjestelmä lähettää esim. silloin kuin hälytysjärjestelmä on kytkeytymässä päälle.\nLisäksi myös Home Assistantin automaatioissa voidaan Alarmon lisäksi määrittää erilaisia toimenpiteitä sen mukaan miten järjestelmä reagoi tietyissä tilanteissa kuten silloin, kun hälytysjärjestelmä on lauennut.\nEli tämä tällä kertaa ja käydään sitten seuraavissa kirjoituksissa läpi muita juttuja, joita Alarmon avulla voidaan tehdä samoin kuin mm. tätä RFID -lukijan rakentamista ja yhdistämistä Home Assistantiin.\n","tags":["alarmo","docker","docker-compose","github","homeassistant","nodemcu","rfid","ups","zigbee","zwave"], "section": "posts"},{"date":"1673568000", "url":"https://eddyshomepages.github.io/posts/raspberrypiosn-asentaminen-ja-kayttoonotto/", "title":"RaspberryPiOS:n asentaminen ja käyttöönotto", "summary":"Minulla on käytössä RaspberryPi -tietokoneita monessa eri tarkoituksessa ja yleensä niissä on käyttöjärjestelmänä RaspberryPiOS. Tähän liittyen ajattelinkin käydä läpi sen asentamista ja käyttöönottoa.\nAikaisemmin RaspberryPiOS ja sen edeltäjän Raspbianin sai asennettua image -tiedostosta esim. Balena Etcher -sovelluksella, mutta nykyisin se on ainakin hankalampaa, koska asetuksien teko käyttöjärjestelmälle on muuttunut vanhaan verrattuna. Nykyisin asennus onkin helpoin tehdä käyttäen RaspberryPi Imager -sovellusta, josta on tehty omat versiot Linuxille, Windowsille ja macOS-käyttikselle.\nRaspberryPi Imagerin avulla pystyy asentamaan RaspberryPiOS -käyttöjärjestelmän myös ulkoiselle kiintolevylle, kuten SSD -levylle.", "content":"Minulla on käytössä RaspberryPi -tietokoneita monessa eri tarkoituksessa ja yleensä niissä on käyttöjärjestelmänä RaspberryPiOS. Tähän liittyen ajattelinkin käydä läpi sen asentamista ja käyttöönottoa.\nAikaisemmin RaspberryPiOS ja sen edeltäjän Raspbianin sai asennettua image -tiedostosta esim. Balena Etcher -sovelluksella, mutta nykyisin se on ainakin hankalampaa, koska asetuksien teko käyttöjärjestelmälle on muuttunut vanhaan verrattuna. Nykyisin asennus onkin helpoin tehdä käyttäen RaspberryPi Imager -sovellusta, josta on tehty omat versiot Linuxille, Windowsille ja macOS-käyttikselle.\nRaspberryPi Imagerin avulla pystyy asentamaan RaspberryPiOS -käyttöjärjestelmän myös ulkoiselle kiintolevylle, kuten SSD -levylle. Tämän jälkeen, kun kytkee ulkoisen SSD -levyn Raspin USB -porttiin, niin Raspi käynnistyy suoraan käyttöjärjestelmään ilman, että tarvitaan muistikorttia. Tämä siis Raspberry Pi 3+ ja 4 versioissa. Versiossa 3 pystyy myös ottamaan käynnistyksen käyttöön, mutta se vaatii vähän työtä, koska järjestelmän /boot/config.txt -tiedostoon täytyy tehdä muutoksia. Näitä vanhemmat Raspit eivät tue käynnistystä ulkoiselta kiintolevyltä tai massamuistilta.\nRaspberryPiOS:n asennus muistikortille Link to heading Asennuksen jälkeen käynnistetään RaspberryPi Imager, jolloin avautuu alla oleva ikkuna\nKuva: RaspberryPi Imager aloitusvalikko\nOperating System -kohdasta voidaan valita monipuolisesti erilaisia käyttöjärjestelmiä, joita RaspberryPiOS:n lisäksi ovat Ubuntu, Manjaro Arm Linux, Apertis sekä Risc OS Pi. Nämä muut käyttöjärjestelmät löytyvät Other general-purpose OS -kohdasta.\nSovelluksesta voidaan valita myös erilaisia media player -käyttöjärjestelmiä kuten LibreElec, OSMC tai Volumio ja nämä löytyvät kohdasta Media Player OS.\nMikäli pitää vanhoista Emulaattoreista, löytyy näihinkin valmiita käyttöjärjestelmiä kuten Lakka.tv, Recalbox tai Retropie, tosin Batocera puuttuu, mutta eiköhän sekin kohta valikosta löydy. Nämä löytyvät valikosta Emulation and Game OS.\nLisäksi löytyy vielä paljon muitakin distroja, kuten 3D -tulostukseen OktoKlipperPi, SimplyPi, Mainsail OS ja OctoPi sekä kotiautomaatiojärjestelmiä kuten kuten mm. Home Bridge, Gladys Assistant, openHAB, Home Assistant, RaspberryMatic ja nymea.\nMinulla on kyseessä RaspberryPi 3 -tietokone, jota on tarkoitus käyttää palvelimena eli minulle riittää Raspberry Pi OS (other) -kohdasta löytyvä RaspberryPiOS Lite (64-bit) -versio.\nKäyttöjärjestelmän version valinnan jälkeen valitaan kohdasta Storage tallennuspaikka eli minulla Transcend USB Device\nEnnen kuin tallennetaan levykuva muistikortille, niin avataan kuitenkin Ratas -kohdasta asetukset\nAsetukset -kohdasta voidaan asettaa koneelle hostname, ottaa käyttöön SSH -palvelin (erittäin suositeltavaa), asettaa käyttäjätunnus ja -salasana, tehdä langattamon WIFI -verkon asetukset ja tehdä lokaatio -asetukset. Sen jälkeen, kun nämä asetukset on tehty, tallennetaan muutokset ja kirjoitetaan levykuva muistikortille painamalla Write -nappia. Kun tallennus on tehty ja tulee alla olevan kaltainen ilmoitus, voidaan muistikortti ottaa pois koneesta ja laittaa se Raspiin.\nRaspberryPi:n käynnistys ja asetuksien teko Link to heading Seuraavaksi laitetaan muistikortti kiinni Raspiin ja annetaan koneen käynnistyä rauhassa. Seuraavaksi voidaan tarkistaa esim. modeemista, että mikä on koneen IP-osoite. Linuxin puolella yhteys saadaan otettua päätteen (terminal) kautta, mutta myös Windowsin komentokehote tukee SSH:n käyttöä. Eli yhteys Raspiin saadaan antamalla esim. komentokehotteessa käsky ssh pi@x.x.x.x. Tämän jälkeen Raspi kysyy halutaanko muodostaa yhteys, johon tulee vastata yes (ensimmäinen kirjautuminen) ja antaa sen jälkeen asetuksissa määritetty salasana.\nItse olen huomannut, että jostakin syystä RaspberryPiOS ei osaa alussa päivittää kellonaikaa oikeaksi, jonka vuoksi myöskään päivityksien asennus ei onnistu. Koneen päivämäärä ja aika saa tarkastettua komennolla timedatectl ja mikäli kellonaika/päiväys näyttää mitä sattuu sekä rivillä System clock synchronized: lukee no, niin tällöin kellonaika asetuksia täytyy korjata. Itse olen nykyisin tehnyt sen siten, että olen korvannut oletus ntp -palvelimen chrony -nimisellä ntp -palvelimella.\nTämän asennus onnistuu komennolla sudo apt install chrony, jonka jälkeen järjestelmä haluaa asentaa/poistaa paketteja ja tähän voidaan vastata yes. Seuraavaksi tarkistetaan chronyn asetukset komennolla sudo nano /etc/chrony/chrony.conf. Asetustiedostoon laitetaan alla olevat rivit, jotka tarkoittavat sitä, että järjestelmä käyttää Suomen NTP pool -palvelimia.\nserver 0.fi.pool.ntp.org iburst server 1.fi.pool.ntp.org iburst server 2.fi.pool.ntp.org iburst server 3.fi.pool.ntp.org iburst Lopuksi vielä tallennetaan muutokset, käynnistetään chrony uudestaan sekä tehdään siitä automaattisesti käynnistyvä eli annetaan komennot\nsudo systemctl restart chrony sudo systemctl enable chrony Tämän jälkeen voidaan vielä tarkistaa komennolla timedatectl, että onko kellonaika asetukset kunnossa eli rivillä System clock synchronized: pitäisi olla yes sekä päivämäärän ja kellonajan pitäisivät olla nyt synkronoitu oikeaksi.\nLopuksi tarkistetaan ja asennetaan vielä järjestelmään viimeisimmät päivitykset ajamalla komento sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y.\nNyt meillä on RaspberryPiOS -käyttis asennettu ja käyttöönotettu. Seuraavaksi voidaan vaikka selata aikaisemmin kirjoittamiani blogeja ja miettiä, että mitä koneelle seuraavaksi asentaisi.\n","tags":["apertis","balena-etcher","batocera","chrony","gladysassistant","homeassistant","homebridge","lakka","libreelec","mainsailos","manjaro","noobs","nymea","octopi","oktoklipperpi","openhab","osmc","raspberrymatic","raspberrypi","raspberrypi-imager","raspberrypios","recalbox","retropie","risc-os-pi","simplypi","ssh","ubuntu","volumio"], "section": "posts"},{"date":"1672617600", "url":"https://eddyshomepages.github.io/posts/alytelevision-aanenvoimakkuuden-rajoittaminen-home-assistantin-avulla/", "title":"Älytelevision äänenvoimakkuuden rajoittaminen Home Assistantin avulla", "summary":"Home Assistant on monikäyttöinen kotiautomaatiojärjestelmä, jonka tulin huomanneeksi, kun mietin, että miten voisin rajoittaa Samsungin älytelevision äänen voimakkuutta. Meillä kotona tuppasi käymään siten, että kiusalla äänen voimakkuutta nostettiin välillä lähes maksimiin, jonka vuoksi kyllästyin ja aloin miettimään ratkaisua tähän ongelmaan.\nValmistajan sovelluskaupasta ei apuja löytynyt, joten päätin kokeilla, että miten Home Assistant tässa onnistuu. Ja onnistuuhan se, vieläpä oikein hyvin.\nAluksi meidän täytyy lisätä älytelevio Home Assistantiin media playerinä, jonka Home Assistant yleensä tekee automaattisesti, mikäli TV on samassa verkossa.", "content":"Home Assistant on monikäyttöinen kotiautomaatiojärjestelmä, jonka tulin huomanneeksi, kun mietin, että miten voisin rajoittaa Samsungin älytelevision äänen voimakkuutta. Meillä kotona tuppasi käymään siten, että kiusalla äänen voimakkuutta nostettiin välillä lähes maksimiin, jonka vuoksi kyllästyin ja aloin miettimään ratkaisua tähän ongelmaan.\nValmistajan sovelluskaupasta ei apuja löytynyt, joten päätin kokeilla, että miten Home Assistant tässa onnistuu. Ja onnistuuhan se, vieläpä oikein hyvin.\nAluksi meidän täytyy lisätä älytelevio Home Assistantiin media playerinä, jonka Home Assistant yleensä tekee automaattisesti, mikäli TV on samassa verkossa. Minulla TV näkyy integraatiossa seuraavasti:\nKuva: Integraatiot, TV\nSeuraavaksi luodaan muuttuja, jolla määritetään äänen voimakkuuden yläraja. Tämä muuttuja luodaan input_number -muuttujana eli lisätään configuration.yaml -tiedostoon seuraavat rivit:\n# configuration.yaml input_number: tv_volume_max: name: \u0026#39;Maksimi äänenvoimakkuus\u0026#39; initial: 20 min: 0 max: 40 step: 1 icon: mdi:cog mode: box Alarajalle voidaan myös tehdä oma muuttuja, mutta itse olen määrittänyt automaatiossa tähän arvoksi 10. Eli tämä tarkoittaa sitä, että kun TV:n äänen voimakkuus nostetaan yli muuttujan määrittämän arvon, eli tässä tapauksessa 20, niin automaatio laskee äänen voimakuuden automaattisesti takaisin tasolle 10. HUOM! Home Assistant määrittää automaatiossa äänen voimakkuuden desimaalilukuna eli tässä tapauksessa lukuna 0,1.\nTämä Home Assistantin avulla tehty ratkaisu ei ole kuitenkaan aivan \u0026ldquo;idiootti\u0026rdquo;-varma, koska äänen voimakkuutta \u0026ldquo;renkuttamalla\u0026rdquo; automaatio voi joskus pudota kyydistä, jolloin rajoitus ei hetkeen toimi. Normaalissa käytössä se toimii kuitenkin hyvin.\nSeuraavaksi määritetään TV:n äänen voimakkuudesta oma sensori lisäämällä sensor: -kohtaan seuraavat rivit\nsensor: - platform: template sensors: tv_volume: friendly_name: \u0026#39;TVn äänen voimakkuus\u0026#39; value_template: \u0026#34;{{ (state_attr(\u0026#39;media_player.tv\u0026#39;,\u0026#39;volume_level\u0026#39;) *100 |float) | round(0) }}\u0026#34; Lopuksi tehdään vielä tarvittava automaatio, joka sitten laskee äänen voimakkuutta tarvittaessa alas päin. Käyttöliittymän kautta tehtynä se näyttää seuraavalta:\nLaukaisuehdot:\nKuva: Laukaisuehdot\nToiminnot:\nKuva: Toiminnot\nMikäli haluaa tehdä muutokset automations.yaml -tiedostoon, niin tällöin lisätään sinne rivit:\n# automations.yaml - id: \u0026#39;1650139109230\u0026#39; alias: TVn äänenvoimakkuuden rajoitus description: \u0026#39;\u0026#39; trigger: - platform: template value_template: \u0026#39;{{states.sensor.tv_volume.state \u0026gt;= states.input_number.tv_volume_max.state}}\u0026#39; condition: [] action: - service: media_player.volume_set data: volume_level: 0.1 target: entity_id: - media_player.tv mode: single Home Assistantin työpöydällä TV:n tiedot näkyvät seuraavasti:\nKuva: Älytelevision äänen voimakkuuden rajoitus\n","tags":["alytelevisio","homeassistant","kotiautomaatio","mediaplayer"], "section": "posts"},{"date":"1672272000", "url":"https://eddyshomepages.github.io/posts/auton-lammityspistorasian-kaynnistys-automaattisesti-haluttuun-aikaan/", "title":"Auton lohkolämmittimen käynnistys automaattisesti haluttuun aikaan", "summary":"Seuraavaksi ajattelin kirjoittaa tällä hetkellä melko ajankohtaisesta asiasta kuin auton lohkolämmittimen ajastuksen automatisointi. Tähän on löytyy erilaisia toteutuksia netistä vaikka kuinka paljon, mutta itselleni on riittänyt se, että olen voinut asettaa auton lämmitys- ja lähtöajan, jonka jälkeen Home Assistant on hoitanut lopun automaattisesti.\nMinulla on käytössä myös erillinen autolämmitysrasia, jossa on kaksi erillistä pistorasiaa. Näistä toinen on kellon takana ja toinen on sellainen, johon tulee jatkuva virta. Varsinkin kellon käyttö on mielestäni tosi hankalaa ja kömpelöä, jonka vuoksi olen päätynyt tähän ohjattavaan pistorasiaan.", "content":"Seuraavaksi ajattelin kirjoittaa tällä hetkellä melko ajankohtaisesta asiasta kuin auton lohkolämmittimen ajastuksen automatisointi. Tähän on löytyy erilaisia toteutuksia netistä vaikka kuinka paljon, mutta itselleni on riittänyt se, että olen voinut asettaa auton lämmitys- ja lähtöajan, jonka jälkeen Home Assistant on hoitanut lopun automaattisesti.\nMinulla on käytössä myös erillinen autolämmitysrasia, jossa on kaksi erillistä pistorasiaa. Näistä toinen on kellon takana ja toinen on sellainen, johon tulee jatkuva virta. Varsinkin kellon käyttö on mielestäni tosi hankalaa ja kömpelöä, jonka vuoksi olen päätynyt tähän ohjattavaan pistorasiaan. Jo pelkästään mahdollisuus ohjata pistorasiaa helpotti paljon, kun ei enää tarvinnut lähteä erikseen laittamaan lämmittimen johtoa seinään tai muuttamaan kellon asetusta.\nPistorasiana minulla on tällainen Ledvance Smart+ Outdoor Plug -ulkopistorasia, jossa on erillinen johto. Tämä on siitä hyvä, että sen voi kytkeä autolämmitysrasian (jatkuva virta) pistorasiaan siten, että kansikin mahtuu vielä kiinni ja lukkoon. Lisäksi ulkopistorasiassa on myös kunnon kansi, jolloin se on suojassa kosteudelta. Tällä kokoonpanolla on menty jo muutama talvi läpi ja hyvin on toiminut.\nMuuttujien ja automaation teko Link to heading Automaattista ohjausta varten Home Assistantiin tarvitsee luoda muuttujat lähtö- ja lämmitysajalle sekä myös tehdä valitsin, jolla voidaan määrittää toiminta siten, että autolämmitysrasia toimii joko automaattisesti tai manuaalisesti.\nMuuttujat määritetään configuration.yaml -tiedostoon seuraavasti:\n# configuration.yaml # eli tähän tiedostoon tehdään muuttujat # lähtöaika input_datetime: lahtoaika: name: \u0026#39;Lähtöaika\u0026#39; has_date: false has_time: true initial: \u0026#39;08:00\u0026#39; icon: \u0026#39;mdi:clock-time-four\u0026#39; # lämmitysaika input_number: lammitysaika: name: \u0026#39;Lämmitysaika\u0026#39; initial: 60 min: 0 max: 240 step: 5 icon: \u0026#39;mdi:timer-outline\u0026#39; unit_of_measurement: \u0026#39;min\u0026#39; # lämmitysjan asetus manuaalisesti/automaattisesti input_select: autonlammitysasetus: name: \u0026#39;Auton lämmityksen asetus\u0026#39; options: - Automaattinen - Manuaalinen initial: Manuaalinen icon: \u0026#39;mdi:cog\u0026#39; Edit 16.11.2023\nNyt täytyy nostaa käsi ylös virheen merkiksi. Eli tekstistä on jäänyt puuttumaan sensoritieto, joka tarvitaan ja jota ilman automaatio ei toimi. Tämä sensoritieto on jäänyt minulta puuttumaan alkuperäisestä tekstistä. Kiitos tästä huomiosta kuuluu kommentin jättäneelle lukijalle nimimerkiltään jumalanruoska. Mutta alla tämä sensori, joka luodaan input_datetime.lahtoaika -muuttujasta eli sensor.yaml -tiedostoon täytyy lisätä rivit:\n#sensor.yaml - platform: template sensors: autonlammitysaloitusaika: value_template: \u0026#34;{{(state_attr(\u0026#39;input_datetime.lahtoaika\u0026#39;, \u0026#39;timestamp\u0026#39;) - (states(\u0026#39;input_number.lammitysaika\u0026#39;)|int *60))|timestamp_custom(\u0026#39;%H:%M\u0026#39;, false) }}\u0026#34; friendly_name: \u0026#39;Lämmityksen aloitusaika\u0026#39; icon_template: \u0026#39;mdi:clock-time-four\u0026#39; Myös ulkopistorasia tulee liittää Home Assistantiin ja minulla se on nimeltään switch.pistorasia_autopaikka. Lisäksi olen automaatiossa määrittänyt, että autolämmitysrasia pysyy päällä vielä 10 min sen jälkeen, kun lähtöaika on ollut käsillä. Tämä siksi, että mikäli lähtöaika hiukan venyy, niin auton lämmitys on kuitenkin vielä hetken päällä.\nEnnen automaation määrityksiä, täytyy Home Assistant kuitenkin käynnistää uudestaan, jotta muuttujat tulevat näkyviin. Automaation osalta määritykset voidaan tehdä joko käyttöliittymän kautta, jolloin ne ovat seuraavat:\nAuton lämmitys päälle: Link to heading Kuva: Laukaisuehdot\nKuva: Ehdot\nKuva: Toiminnot\nAuton lämmitys pois päältä: Link to heading Kuva: Laukaisuehdot\nKuva: Ehdot\nKuva: Toiminnot\nTai vaihtoehtoisesti muutokset voidaan tehdä myös automations.yaml -tiedostoon, jolloin ne ovat alla olevan kaltaiset:\n# automations.yaml - id: e1897cef08d440cfa52696008714b83e alias: Auton lämmitys päälle trigger: - platform: template value_template: \u0026#39;{{states.sensor.time.state == states.sensor.autonlammitysaloitusaika.state}}\u0026#39; condition: - condition: and conditions: - condition: device type: is_off device_id: 4bee6cbb7dff9ba9ac9ee503b5b554f8 entity_id: switch.pistorasia_autopaikka domain: switch - condition: state entity_id: input_select.autonlammitysasetus state: Automaattinen action: - type: turn_on device_id: 4bee6cbb7dff9ba9ac9ee503b5b554f8 entity_id: switch.pistorasia_autopaikka domain: switch - service: notify.notify data: message: Auton lämmitys on käynnistynyt! mode: single - id: 5af07494ae784eb79ecf7d0da8a2c444 alias: Auton lämmitys pois trigger: - platform: template value_template: \u0026#39;{{states.sensor.time.state == states.input_datetime.lahtoaika.state[0:5]}}\u0026#39; condition: - condition: and conditions: - condition: device type: is_on device_id: 4bee6cbb7dff9ba9ac9ee503b5b554f8 entity_id: switch.pistorasia_autopaikka domain: switch - condition: state entity_id: input_select.autonlammitysasetus state: Automaattinen action: - delay: hours: 0 minutes: 10 seconds: 0 milliseconds: 0 - type: turn_off device_id: 4bee6cbb7dff9ba9ac9ee503b5b554f8 entity_id: switch.pistorasia_autopaikka domain: switch - service: notify.notify data: message: Auton lämmityspistorasia on nyt pois päältä! mode: single Automaatiossa olen myös ottanut ilmoitukset käyttöön, jolloin Home Assistant ilmoittaa aina, kun autolämmitysrasia on mennyt päälle tai pois päältä. Nämä näkyvät automaation lopussa.\nLopuksi tehdään vielä Home Assistantin työpöydälle tarvittavat muutokset eli tehdään näistä muuttujista ja kytkimestä oma kortti, joka minulla on alla olevan mukainen:\nKuva: Autolämmityksen ohjaus\nJa sama vielä muokkausmuodossa koodieditorissa:\nKuva: Autolämmityksen ohjaus koodieditorissa\nJa nyt vain autoa lämmittämään aina sen mukaan, mitä säät vaativat ja mitä on tarpeen.\n","tags":["autolammitys","energia","energiankulutus","homeassistant","input_datetime","input_number","input_select","kotiautomaatio"], "section": "posts"},{"date":"1672012800", "url":"https://eddyshomepages.github.io/posts/mycroft-virtuaaliavustimen-asennus-ja-kayttoonotto/", "title":"Mycroft -virtuaaliavustimen asennus ja käyttöönotto", "summary":"Kirjoitin taannoin Genie -virtuaaliavustimen sekä ääniohjauksen käyttöönotosta Home Assistantin kanssa, mutta yrityksistä huolimatta en ole kuitenkaan saanut ratkaistua sijaintiongelmaa, joten päätin kokeilla myös toista avoimen lähdekoodin järjestelmää nimeltään Mycroft.\nMycroft vaikuttaa lupaavalta siinäkin mielessä, että sillä pystyy Home Assistantin lisäksi komentamaan mm. Emby-media -serveriä, jonka pystyttämisestä myös kirjoittelin aikaisemmin. Mycroftin avulla pystyy myös mm. kuuntelemaan Yle Areenan kautta tuoreimmat kotimaan uutiset ja lisäksi siihen on saatavilla paljon muitakin lisätaitoja eli ns.", "content":"Kirjoitin taannoin Genie -virtuaaliavustimen sekä ääniohjauksen käyttöönotosta Home Assistantin kanssa, mutta yrityksistä huolimatta en ole kuitenkaan saanut ratkaistua sijaintiongelmaa, joten päätin kokeilla myös toista avoimen lähdekoodin järjestelmää nimeltään Mycroft.\nMycroft vaikuttaa lupaavalta siinäkin mielessä, että sillä pystyy Home Assistantin lisäksi komentamaan mm. Emby-media -serveriä, jonka pystyttämisestä myös kirjoittelin aikaisemmin. Mycroftin avulla pystyy myös mm. kuuntelemaan Yle Areenan kautta tuoreimmat kotimaan uutiset ja lisäksi siihen on saatavilla paljon muitakin lisätaitoja eli ns. Skills:ejä, joista löytyy enemmän tietoa Mycroftin sivustolta.\nMycroftin pystyy asentamaan siten, että se toimii ainoastaan omassa kotiverkossa, mutta tällöin avustimen puhesyntetisaattorina (TTS, Text to Speech engines) toimii Mimic1, joka on ääneltään aika robottimainen. Tosin se on nopea ja kevyt, kun taas uudempi Mimic2, joka on oletuksena ja joka toimii täysin pilven kautta. Lisäksi on saatavilla myös uusin versio Mimic3, joka toimii niin ikään Mimic1:n lailla omassa kotiverkossa, mutta se taas vaatii asennusalustalta enemmän tehoa, mutta esim. RaspberryPi 4:n kanssa sen pitäisi toimia hyvin. Lisää tietoa näistä löytyy tämän linkin takaa.\nMycroftin asennus käyttäen Picroft -levykuvaa Link to heading Minulla oli käyttämättömänä yksi kpl RaspberryPi 3 -tietokoneita, joten päätin kokeilla valmista Picroft -levykuvaa, joka perustuu RasberryPiOS:n Buster -versioon. Asennus oli hyvin suoraviivainen eli aluksi ladataan Picroftin levykuva ja tallennetaan se muistikortille esim. Balena Etcher -sovelluksella. Tämän jälkeen laitetaan muistikortti Raspiin ja virrat päälle, jonka jälkeen käyttöjärjestelmä käynnistyy ja meillä pitäisi olla Mycroftin asennus valmiina. Yleensä Picroft löytää laitteet automaattisesti, kuten minulla, mutta joskus niiden kanssa voi tulla ongelmia.\nMycroftin asennuksen lisäksi tarvitaan myös mikrofoni sekä kaiuttimet ja minulle on käytössä Audio Technica ATR4697-USB -mikrofoni sekä kaiuttimena tällainen pieni Trustin valmistama soundbar, jotka molemmat sopivat olohuoneen tasolle ihan kivasti. Musiikin kuuntelua varten olen yhdistänyt Picroftin stereoihin, jollon musiikit saa kuunneltua myös stereoiden kautta.\nMycroftin käyttöön ottaminen Link to heading Ennen Mycroftin käyttöönottoa luodaan pilvipalveluun käyttäjätunnus, jonka voi luoda esim. olemassa olevan Google-tilin avulla. Tilin luomisen jälkeen kirjaudutaan sisään, jolloin vasemmalla näkyy valikko My Mycroft, jonka alta valitaan kohta Devices (kuva alla)\nKuva: My Mycroft -valikko\nKuva: Laitteen lisääminen\nSeuraavaksi painetaan kohdasta Add Device, jonka jälkeen avautuu alla olevan mukainen ikkuna\nKuva: Laitteen lisäämisen ikkuna\nTässä ikkunassa annetaan tarvittavat tiedot kuten oman kodin sijainti, laitteen nimi, laitteen sijainti, aikavyöhyke sekä myös kaikkein tärkein eli Pairing Code. Pairing Code saadaan laitteelta, johon asensimme Picroft -käyttöjärjestelmän ja koodi saadaan siten, että sanotaan Mycroftille \u0026quot;Hey Mycroft, pair my device\u0026quot;. Tämän jälkeen ääniavustin kertoo koodin (6 merkkiä) englanninkielisinä ja se sisältää numeroita ja kirjaimia.\nHUOM. Vinkkinä, että mikäli koodin kuuleminen ei kunnolla onnistu, niin kirjaudu Picroftille SSH:n (SSH toimii myös Windowsin komentokehotteessa antamalla komento ssh pi@x.x.x.x, oletussalasana on mycroft) avulla ennen koodin pyytämistä, jolloin saat koodin näkyviin päättee kohdan History alapuolella.\nKuva: Picroftiin kirjautuminen SSH:n avulla\nPicroftin parittamisen jälkeen laite näkyy My Mycroft -sivulla kohdan Devices alla seuraavasti:\nKuva: Laitehallinta, jossa liitetyt laitteet näkyvät\nTaitojen eli Skillsien asentaminen Link to heading Mycroftilla on jo valmiiksi asennettuja erilaisia taitoja eli Skills:ejä (jatkossa taito) ja niitä saa asennettua lisää antamalla Mycroftille äänikomento install \u0026lt;taidon nimi\u0026gt; tai vaihtoehtoisesti SSH:n kautta komennolla mycroft-msm install \u0026lt;taidon nimi\u0026gt;. Esimerkiksi Home Assistant -taito saadaan lisättyä Mycroftiin antamalla äänikomento install home assistant tai SSH:n kautta komennolla mycroft-msm install home assistant.\nHome Assistant -taidon asetukset Link to heading Home Assistant -taidon asentamisen jälkeen täytyy vielä tehdä Home Assistantin osalta tarvittavat asetukset, jotka löytyvät vasemmalta valikosta kohdasta Skills (kuva alla), johon asennetut taidot tulevat näkyviin\nKuva: Skills -valikko\nTämän jälkeen valitaan asennetuista taidoista Home Assistant, jolloin avautuu alla olevan mukainen ikkuna\nKuva: Home Assistant skills -asetukset\nTäällä annetaan Home Assistantin IP-osoite sekä Long Lived Access Token, joka pitää luoda Home Assistantin käyttäjä profiili -kohdan kohdassa Pitkäaikaiset käyttötunnussanomat\nKuva: Home Assistant - käyttäjäprofiili\nKuva: Home Assistant - Pitkäaikaiset käyttötunnussanomat\nSeuraavaksi valitaan kohta Luo token ja annetaan sille jokin nimi ja painetaan OK. Tämän jälkeen ikkunaan tulee koodi, joka kopioidaan ja lisätään My Mycroftin Home Assistant -taidon kohtaan Long Lived Access Token.\nTämän jälkeen voidaan kokeilla esimerkiksi sammuttaa valot antamalla Mycroftille komento Turn off \u0026lt;valaisimen nimi\u0026gt;. Tässä täytyy taas huomioida, että Home Assistantissa kannattaa nimetä valaisimet yms. englannin kielisenä, jolloin Mycroft ymmärtää käskyt paremmin.\nLisää taidoista kuten myös muistakin asetuksista löytyy enemmän Mycroftin sivulta https://mycroft-ai.gitbook.io/docs/skill-development/mycroft-skills-manager.\n","tags":["almond","emby","genie","homeassistant","kotiautomaatio","mycroft","picroft","raspberrypios","virtuaaliavustin"], "section": "posts"},{"date":"1670803200", "url":"https://eddyshomepages.github.io/posts/energian-hinnan-seurantaa-home-assistantilla-osa-2/", "title":"Energian hinnan seurantaa Home Assistantilla, osa 2", "summary":"Kirjoitin taannoin energian hinnan seurannasta Home Assistantilla ja käytössä minulla oli HACS:in kautta ladattava Nordpool -integraatio. Tämä konfiguraatio antoi spottisähkön hinnan arvonlisäverollisena, mutta nyt joulukuun -22 alusta alkaen arvonlisävero on laskenut käyttösähkön osalta 10%. Tätä muutosta Nordpool -integraatio ei osaa automaattisesti laskea, jolloin myöskin Home Assistantin laskema kustannustieto on liian suuri. Ja mikäli haluat lukea myös vanhan kirjoituksen, niin linkki on tässä.\nTämän vuoksi tein muutoksia aikaisempaan laskentaan siten, että Nordpool -integraatio antaa jatkossa spottihinnan arvonlisäverottomana ja arvonlisäveron laskenta tapahtuu Home Assistantin kautta.", "content":"Kirjoitin taannoin energian hinnan seurannasta Home Assistantilla ja käytössä minulla oli HACS:in kautta ladattava Nordpool -integraatio. Tämä konfiguraatio antoi spottisähkön hinnan arvonlisäverollisena, mutta nyt joulukuun -22 alusta alkaen arvonlisävero on laskenut käyttösähkön osalta 10%. Tätä muutosta Nordpool -integraatio ei osaa automaattisesti laskea, jolloin myöskin Home Assistantin laskema kustannustieto on liian suuri. Ja mikäli haluat lukea myös vanhan kirjoituksen, niin linkki on tässä.\nTämän vuoksi tein muutoksia aikaisempaan laskentaan siten, että Nordpool -integraatio antaa jatkossa spottihinnan arvonlisäverottomana ja arvonlisäveron laskenta tapahtuu Home Assistantin kautta. Selkeyden vuoksi olen laittanut tähän kaikki muuttujat ja sensorit kokonaisuudessaan uudestaan, koska muutoin voi käydä helposti niin, että nämä tehtävät muutokset menevät vanhojen kanssa sekaisin.\nAluksi meidän täytyy tehdä vanhojen muuttujien lisäksi uusi input_number -muuttuja, jonka avulla annetaan voimassa olevan arvonlisäveron suuruus eli lisätään vanhat rivit mukaan lukien configuration.yaml -tiedostoon alla olevat rivit:\n#configuration.yaml input_number: # nämä muuttujat samoja kuin aikaisemmin tehdyt sahkon_hinta_siirto: name: \u0026#39;Siirtohinta\u0026#39; min: 0 max: 150 step: 0.01 initial: 2.15 icon: \u0026#39;mdi:currency-eur\u0026#39; unit_of_measurement: \u0026#39;cnt/kWh\u0026#39; mode: box sahkon_hinta_marginaali: name: \u0026#39;Sähköyhtiön marginaali\u0026#39; min: 0 max: 150 step: 0.01 initial: 0.31 icon: \u0026#39;mdi:currency-eur\u0026#39; unit_of_measurement: \u0026#39;cnt/kWh\u0026#39; mode: box sahkon_hinta_kipuraja: name: \u0026#39;Sähkön hinnan kipuraja\u0026#39; min: 0 max: 25 step: 0.5 initial: 6.0 icon: \u0026#39;mdi:currency-eur\u0026#39; unit_of_measurement: \u0026#39;cnt/kWh\u0026#39; mode: box #tämä on uusi lisättävä muuttuja sahkon_arvonlisavero: name: \u0026#39;Käyttösähköstä perittävä arvonlisävero\u0026#39; min: 0 max: 30 step: 0.5 initial: 10 icon: \u0026#39;mdi:percent\u0026#39; unit_of_measurement: \u0026#39;%\u0026#39; mode: box Nordpool -integraatioon täytyy myös tehdä muutoksia ja sen voi tehdä joko antamalla tiedot manuaalisesti sensor -kohdan kautta tai vaihtoehtoisesti Home Assistantista käsin. Minä olen lisännyt tiedot sensor -kohdan alle seuraavasti:\nsensor: - platform: nordpool # Should the prices include vat? Default True VAT: False # What currency the api fetches the prices in # this is only need if you want a sensor in a non local currecy currency: \u0026#34;EUR\u0026#34; # Helper so you can set your \u0026#34;low\u0026#34; price # low_price = hour_price \u0026lt; average * low_price_cutoff low_price_cutoff: 0.25 # What power regions your are interested in. # Possible values: \u0026#34;DK1\u0026#34;, \u0026#34;DK2\u0026#34;, \u0026#34;FI\u0026#34;, \u0026#34;LT\u0026#34;, \u0026#34;LV\u0026#34;, \u0026#34;Oslo\u0026#34;, \u0026#34;Kr.sand\u0026#34;, \u0026#34;Bergen\u0026#34;, \u0026#34;Molde\u0026#34;, \u0026#34;Tr.heim\u0026#34;, \u0026#34;Tromsø\u0026#34;, \u0026#34;SE1\u0026#34;, \u0026#34;SE2\u0026#34;, \u0026#34;SE3\u0026#34;,\u0026#34;SE4\u0026#34;, \u0026#34;SYS\u0026#34;, \u0026#34;EE\u0026#34; region: \u0026#34;FI\u0026#34; # How many decimals to use in the display of the price precision: 4 # What the price should be displayed in default # Possible values: MWh, kWh and Wh # default: kWh price_type: kWh Nordpool -integraatiossa on myös mahdollista asettaa oma \u0026ldquo;low\u0026rdquo; price -tieto kohdassa low_price_cutoff, mutta itse olen tehnyt siitä yksinkertaisen binary_sensor -sensorin. Tämä sensori kertoo suoraan kyllä/ei tiedolla, että onko hinta alle itse määritettävän \u0026ldquo;kipu\u0026rdquo;-rajan.\nSeuraavaksi lisätään vielä vanhat muuttumattomat sensorit, uusi sensori sekä sensorit, joihin on tehty muutoksia eli lisätään kohdan sensors -alle seuraavat rivit:\n- platform: template sensors: # nämä vanhoja sensoreita, joihin ei ole tehty muutoksia sahkon_hinta_siirto: friendly_name: \u0026#39;Sähkön hinta siirto\u0026#39; unit_of_measurement: \u0026#39;EUR/kWh\u0026#39; icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_siirto\u0026#39;) | float / 100 | round(4) }}\u0026#34; sahkon_hinta_marginaali: friendly_name: \u0026#39;Sähköyhtiön marginaali\u0026#39; unit_of_measurement: \u0026#39;EUR/kWh\u0026#39; icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_marginaali\u0026#39;) | float / 100 | round(4) }}\u0026#34; sahkon_hinta_kipuraja: friendly_name: \u0026#39;Sähkön hinta kipuraja\u0026#39; unit_of_measurement: \u0026#39;EUR/kWh\u0026#39; icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_kipuraja\u0026#39;) | float / 100 | round(4) }}\u0026#34; # nämä vanhoja sensoreita, joihin on tehty muutoksia sahkonhinta_spotti_nyt: friendly_name: \u0026#39;Pörssisähkön kok.hinta tällä hetkellä\u0026#39; unit_of_measurement: \u0026#39;EUR/kWh\u0026#39; icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ ((states(\u0026#39;sensor.nordpool_kwh_fi_eur_4_025_0\u0026#39;) |float * (states(\u0026#39;sensor.sahkon_arvonlisavero_desimaalilukuna\u0026#39;)) |float) + states(\u0026#39;sensor.sahkon_hinta_siirto\u0026#39;) | float + states(\u0026#39;sensor.sahkon_hinta_marginaali\u0026#39;) | float ) | round(4)}}\u0026#34; # tästä eteen päin uusia lisättyjä sensoreita sahkonhinta_spotti_arvonlisaverollisena: friendly_name: \u0026#39;Pörssisähkön hinta tällä hetkellä sis. alv.\u0026#39; unit_of_measurement: \u0026#39;EUR/kWh\u0026#39; icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ ((states(\u0026#39;sensor.nordpool_kwh_fi_eur_4_025_0\u0026#39;) |float) * (states(\u0026#39;sensor.sahkon_arvonlisavero_desimaalilukuna\u0026#39;)) |float) | round(4) }}\u0026#34; sahkon_arvonlisavero: friendly_name: \u0026#39;Sähköstä perittävä arvonlisävero\u0026#39; unit_of_measurement: \u0026#39;%\u0026#39; icon_template: \u0026#39;mdi:percent\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_arvonlisavero\u0026#39;) | float | round(0) }}\u0026#34; # tämä on apusensori, jonka avulla lasketaan arvonlisäverollinen hinta spottisähkölle sahkon_arvonlisavero_desimaalilukuna: friendly_name: \u0026#39;Sähköstä perittävä arvonlisävero desimaalilukuna\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_arvonlisavero\u0026#39;) | float / 100 + 1| round(4) }}\u0026#34; # tämä on vanha sensori, jolla ilmaistaan, että onko sähkön hinta alle halutun \u0026#34;kipu\u0026#34;-rajan binary_sensor: - platform: template sensors: sahko_kipuraja_hinta: friendly_name: \u0026#39;Sähkön hinta alle kipurajan\u0026#39; value_template: \u0026gt;- {{ states(\u0026#39;sensor.sahkonhinta_spotti_nyt\u0026#39;) \u0026lt; states(\u0026#39;sensor.sahkon_hinta_kipuraja\u0026#39;) }} Lopuksi käynnisteään Home Assistant uudestaan sekä lisätään työpöydälle tarvittavat sensorit ja muuttujat\nKuva: Home Assistant muuttujat\nKuva: Home Assistant sensorit\n","tags":["binary_sensor","energia","energiankulutus","hacs","homeassistant","input_number","kotiautomaatio","nordpool","sensor"], "section": "posts"},{"date":"1670544000", "url":"https://eddyshomepages.github.io/posts/aaniohjauksen-lisaaminen-almond-genie-virtuaaliavustimeen/", "title":"Ääniohjauksen lisääminen Almond-/Genie -virtuaaliavustimeen", "summary":"Edellisessä kirjoituksessa kävimme läpi Almond-/Genie -virtuaaliavustimen asentamista Home Assistantin yhteyteen. Seuraavaksi olisi tarkoitus kokeilla, että miten myös ääniohjauksen saisi toimimaan Almond-/Genie -virtuaaliavustimen kanssa. Ääniohjausta varten meidän tarvitsee asentaa Genie-client -paketti, josta löytyy valmis .deb -paketti Debian pohjaisille käyttöjärjestelmille. Muille käyttöjärjetelmille Genie-client täytyy asentaa lähdekoodin kautta.\nMinulla on alustana RaspberryPi -tietokoneen 1. Model B -versio, joten Genie-client -paketti asennetaan RaspberryPi:lle tehdyn ohjeen mukaisesti. Genie-client on myös sen verran kevyt, että sen pystyy asentamaan Raspberry Pi 1 Model B -koneelle ja näin minulla on myös tarkoitus tehdä.", "content":"Edellisessä kirjoituksessa kävimme läpi Almond-/Genie -virtuaaliavustimen asentamista Home Assistantin yhteyteen. Seuraavaksi olisi tarkoitus kokeilla, että miten myös ääniohjauksen saisi toimimaan Almond-/Genie -virtuaaliavustimen kanssa. Ääniohjausta varten meidän tarvitsee asentaa Genie-client -paketti, josta löytyy valmis .deb -paketti Debian pohjaisille käyttöjärjestelmille. Muille käyttöjärjetelmille Genie-client täytyy asentaa lähdekoodin kautta.\nMinulla on alustana RaspberryPi -tietokoneen 1. Model B -versio, joten Genie-client -paketti asennetaan RaspberryPi:lle tehdyn ohjeen mukaisesti. Genie-client on myös sen verran kevyt, että sen pystyy asentamaan Raspberry Pi 1 Model B -koneelle ja näin minulla on myös tarkoitus tehdä. Käyttöjärjestelmänä Raspille on asennettuna RaspberryPiOS -käyttöjärjestelmä. Lisäksi minulla on käytössä USB-väyläinen mikrofoni sekä kaiuttimet, jotka on yhdistetty Raspin 3,5 mm jack -liittimeen. Vaihtoehtoisesti Raspiin voisi liittää myös USB-väyläisen äänikortin, johon saisi kytkettyä sekä mikrofonin että äänen ulostulon kaiuttimille 3,5 mm jack -liittimillä.\nGenie-clientin asennus ja konfigurointi Link to heading Asennus aloitetaan aluksi valitsemalla oikea asennuspaketti ja meillä kyseessä on Raspberry Pi 1 Model B, niin haetaan asennuspaketti komennolla wget https://almond-static.stanford.edu/releases/raspios/bullseye/genie-client_0.1.0_armhf.deb. Seuraavaksi asennetaan tarvittavat muut paketit komennolla sudo apt install gstreamer1.0-alsa , jonka jälkeen asennetaan Genie-client komennolla sudo apt install ./genie-client_0.1.0_armhf.deb. Mikäli järjestelmä tarjoaa muita paketteja asennettavaksi, niin ne voi myös asentaa.\nNyt meillä asennettuna tarvittavat paketit, jonka jälkeen voidaan tehdä tarvittavat asetukset järjestelmään. Aluksi ajetaan komento sudo nano /etc/pulse/default.pa ja lisätään tietoston loppuun alla olevat rivit\nload-module module-echo-cancel source_name=echosrc sink_name=echosink aec_method=speex load-module module-role-ducking trigger_roles=voice-assistant ducking_roles=music volume=20% global=true Lopuksi käynnistetään vielä kone uudestaan, jonka jälkeen voimme kokeilla, että miten Genie-client toimii eli annetaan komento genie-client, jolloin Genie-Clientin pitäisi käynnistyä. Kun Genie-client on käynnistynyt, voidaan se yhdistää Genie-serveriin seuraavasti eli aluksi kirjaudutaan Genie-serverille ja valitaan oikeasta yläreunasta kohta Configuration (kuva alla).\nKuva: Genie-server\nConfiguration -sivulla selataan loppuun kohtaan External Clients, josta saamme tarvittavat tiedot Genie-clientille\nKuva: Genie-server asetukset\nSeuraavaksi avataan Genie-clientin konffausikkuna eli mennään selaimella osoitteeseen http://x.x.x.x:8000, jolloin meillä avautuu alla olevan mukainen näkymä (ja x.x.x.x on taas sen koneen IP-soite, jolle Genie-client on asennettu)\nKuva: Genie-client asetukset\nTällä sivulla annamme kohtaan URL Genie-serveriltä saatu URL-tieto, valitaan Authentication Mode -kohdan alasvetovalikosta Genie Server (standalone), kopioidaan kohtaan Access Token serveriltä vastaava merkkisarja ja lopuksi annetaan vielä Genie-clientille Conversation ID kohtaan nimi, jonka tulee olla eri clienteille oma. Ja lopuksi tallennetaan tiedot, jonka jälkeen Genie-clientin asetukset ovat valmiit.\nLopuksi tehdään vielä tehdä Genie-clientista automaattisesti käynnistyvä palvelu, joka tulee ajaa käyttäjänä eli aluksi annetaan komento nano ~/.config/systemd/user/genie-client.service, kopiodaan tiedostoon alla olevat rivit sekä lopuksi tallennetaan tiedot\n[Unit] Description=GenieClient After=network.target [Service] ExecStart=/usr/bin/genie-client Restart=always [Install] WantedBy=default.target Seuraavaksi luodaan vielä tyhjä tiedosto `genie-client.timer` komennolla touch ~/.config/systemd/user/genie-client.timer ja ajetaan komennot\nsystemctl --user enable genie-client.service systemctl --user start genie-client.service Nyt meillä on virtuaaliavustimen yhteyteen luotu ääniohjaus eli seuraavaksi sitten vain opettelemaan ääniohjauskomentojen antamista. Virtuaaliavustimen saa herätettyä komennolla Hey Genie, jonka perään annetaan haluttu komento. Komennoista löytyy kattava yhteenveto Genie-serverin Cheatsheet -kohdasta, kuva alla\nKuva: Genie-server Cheatsheet\nGenie -virtuaaliavustin on mielestäni muutoin oikein hyvä, mutta ainakaan itse en ole vielä keksinyt, että miten saisin annettua sille sijaintitiedot sellaisessa muodossa, että järjestelmä sen ymmärtäisi. Olen itse ymmärtänyt, että tiedot pitäisi antaa englannin kielisenä, jotta se osaisi hakea sijainnin oikein. Mikäli sinulla on tästä tietoa, niin laita ihmeessä viestiä vaikka kommentilla, jolloin saadaan se myös muillekin tiedoksi.\n","tags":["almond","genie","genie-client","genie-server","homeassistant","kotiautomaatio","raspberrypi","raspberrypios","virtuaaliavustin"], "section": "posts"},{"date":"1669420800", "url":"https://eddyshomepages.github.io/posts/almond-genie-virtuaaliavustimen-lisaaminen-home-assistantiin/", "title":"Almond-/Genie -virtuaaliavustimen lisääminen Home Assistantiin", "summary":"Seuraavaksi ajattelin kirjoittaa virtuaaliavustimen käyttöön ottamisesta Home Assistantissa. Home Assistantin saa konffattua käyttämään Google Assistantin tai Alexan kautta suoritettavia äänikomentoja, mutta ajattelin kokeilla, miten avoin vaihtoehto Almond/Genie toimii. Käytän jatkossa virtuaaliavustimesta nimeä Genie vaikka Home Assistantissa puhutaankin yleisesti Almondista.\nGenie -virtuaaliavustin on Stanford Open Virtual Assistant Labin kehittämä avoin ja yksityisyyttä suojeleva virtuaaliassistentti. Genietä on mahdollista käyttää myös pilvipohjaisena, mutta minä ajattelin kokeilla standalone -versiota, jonka voi asentaa omalle palvelimelle.", "content":"Seuraavaksi ajattelin kirjoittaa virtuaaliavustimen käyttöön ottamisesta Home Assistantissa. Home Assistantin saa konffattua käyttämään Google Assistantin tai Alexan kautta suoritettavia äänikomentoja, mutta ajattelin kokeilla, miten avoin vaihtoehto Almond/Genie toimii. Käytän jatkossa virtuaaliavustimesta nimeä Genie vaikka Home Assistantissa puhutaankin yleisesti Almondista.\nGenie -virtuaaliavustin on Stanford Open Virtual Assistant Labin kehittämä avoin ja yksityisyyttä suojeleva virtuaaliassistentti. Genietä on mahdollista käyttää myös pilvipohjaisena, mutta minä ajattelin kokeilla standalone -versiota, jonka voi asentaa omalle palvelimelle.\nGeniestä löytyy suoraan valmis lisäosa Home Assistantin lisäosakaupasta, josta sen asennus onnistuisi helposti. Minulla Home Assistant on kuitenkin asennettuna Docker Composen avulla, joten lisäosakauppa ei ole käytössä eli tämä tietää hiukan haasteellisempaa asennusta. Tarkemmin Genien asentamisesta löytyy tietoa Stanford University Open Virtual Assistant Lab:in Github sivulta, johon linkki tässä.\nSuositeltava tapa asentaa Genie olisi käyttää Dockerin vaihtoehtoista Podman -containeria. Ongelmaksi tulee se, että Genie -serveristä ei löydy vaihtoehtoa Raspberry Pi:lle eli jäljelle jää vaihtoehto asentaa Genie kehittäjä-versiosta. Minulla on jo valmiiksi asennettuna nodejs, jota käytettiin RuuviTagien asennuksen yhteydessä, joten sen asennusta ei tarvitse nyt erikseen suorittaa.\nAsennus aloitetaan asentamalla tarvittavat paketit komennolla sudo apt install nodejs gettext build-essential make g++ graphicsmagick zip unzip libpulse-dev.\nSeuraavaksi luodaan kopio GitHub -hakemistosta komennolla git clone https://github.com/stanford-oval/genie-server ja siirrytään ko. hakemistoon komennolla cd genie-server.\nLopuksi ajetaan komento npm ci, joka asentaa Genie -serverin. Asentamisen jälkeen annetaan vielä komento npm start, joka käynnistää palvelimen.\nSeuraavaksi kokeillaan, että palvelin toimii eli mennään selaimella osoitteeseen http://x.x.x.x:3000, jossa x.x.x.x on sen koneen IP-osoite, johon Genie -server on asennettu. Aluksi luodaan palvelimelle salasana, jonka jälkeen kirjaudutaan palvelimelle sisään. Kirjautumisen jälkeen avautuu alla olevan mukainen ikkuna, josta nähdään myös muutama Genielle annettu käsky.\nKuva: Almond eli Genie -server\nNyt meillä on siis Genie -server käynnissä ja seuraavaksi tehdään siitä automaattisesti käynnistyvä palvelu. Aluksi annetaan komento sudo nano /etc/systemd/system/almond.service ja lisätään sinne alla olevat rivit\n[Unit] Description=Almond-standalone server [Service] Type=simple Restart=always User=pi WorkingDirectory=/home/pi/genie-server ExecStart=/usr/bin/npm start [Install] WantedBy=multi-user.target Seuraavaksi annetaan vielä komennot\nsudo systemctl enable almond sudo systemctl start almond Genie -serverin asetukset Home Assistantissa Link to heading Seuraavaksi tehdään Home Assistantiin tarvittavat muutokset eli lisätään configuration.yaml -tiedostoon seuraavat rivit ja käynnisteään Home Assistant uudestaan\n#configuration.yaml almond: type: local host: http://127.0.0.1:3000 Käynnistämisen jälkeen voidaan kokeilla Genien (Home Assistantissa Almond) toimintaa painamalla Home Assistantin oikeasta ylälaidasta mikrofonikuvaketta\n_Kuva: Home Assistant virtuaaliavusti_men käynnistyskuvake\nTämän jälkeen meille avautuu virtuaaliavustajan ikkuna eli alalaidasta nähdään, että avustimena toimii Almond\nKuva: Home Assistant virtuaaliavustin\nHuomiona Geniestä, että se toimii englannin kielisenä samoin kuin Google Assistant tai Alexa. Genien sanavarasto ei tietenkään ole niin laaja kuin näissä kaupallisissa versioissa, mutta laitteiden komentaminen onnistuu myös tällä oikein mainiosti. Käytössä tulee huomoida, että mm. kytkimet ja sensorit on nimetty selkeästi, jotta virtuaaliavustin osaa niitä komentaa. Genien komennoista löytyy tarkempi listaus palvelimen yläreunan Cheatsheets -kohdasta.\nSeuraavassa kirjoituksessa kerron tarkemmin ääniohjauksen käyttöönotosta Genien kanssa, mutta palataan tähän sitten myöhemmin.\n","tags":["almond","amazon-alexa","genie","genie-server","google-assistant","homeassistant","kotiautomaatio","virtuaaliavustin"], "section": "posts"},{"date":"1668211200", "url":"https://eddyshomepages.github.io/posts/sahkon-hinnan-maarittaminen-kvartaaleittain-home-assistantilla/", "title":"Sähkön hinnan määrittäminen kvartaaleittain Home Assistantilla", "summary":"Edellisessä kirjoituksessa kirjoitin sensorien ja muuttujien luomisesta pörssisähkölle. Nyt ajattelin laittaa vielä jakoon myös vanhan konfiguraation, jossa voidaan antaa sähkön hinta kvartaaleittain sekä määrittää kvartaalit oman sähkösopimuksen mukaiseksi. Tässäkin tapauksessa voidaan sähkön kokonaishintasensori myös yhdistää Home Assistantin Energia-seurantaosioon.\nAluksi luomme tarvittavat muuttujat hinta- ja päivämäärätiedoille eli lisätään configration.yaml-tiedostoon seuraavat rivit\n#configuration.yaml input_number: sahkon_hinta_q1: name: Hinta Q1 min: 0 max: 150 step: 0.01 initial: 0 icon: mdi:currency-eur unit_of_measurement: cnt/kWh mode: box sahkon_hinta_q2: name: Hinta Q2 min: 0 max: 150 step: 0.", "content":"Edellisessä kirjoituksessa kirjoitin sensorien ja muuttujien luomisesta pörssisähkölle. Nyt ajattelin laittaa vielä jakoon myös vanhan konfiguraation, jossa voidaan antaa sähkön hinta kvartaaleittain sekä määrittää kvartaalit oman sähkösopimuksen mukaiseksi. Tässäkin tapauksessa voidaan sähkön kokonaishintasensori myös yhdistää Home Assistantin Energia-seurantaosioon.\nAluksi luomme tarvittavat muuttujat hinta- ja päivämäärätiedoille eli lisätään configration.yaml-tiedostoon seuraavat rivit\n#configuration.yaml input_number: sahkon_hinta_q1: name: Hinta Q1 min: 0 max: 150 step: 0.01 initial: 0 icon: mdi:currency-eur unit_of_measurement: cnt/kWh mode: box sahkon_hinta_q2: name: Hinta Q2 min: 0 max: 150 step: 0.01 initial: 0 icon: mdi:currency-eur unit_of_measurement: cnt/kWh mode: box sahkon_hinta_q3: name: Hinta Q3 min: 0 max: 150 step: 0.01 initial: 0 icon: mdi:currency-eur unit_of_measurement: cnt/kWh mode: box sahkon_hinta_q4: name: Hinta Q4 min: 0 max: 150 step: 0.01 initial: 0 icon: mdi:currency-eur unit_of_measurement: cnt/kWh mode: box sahkon_hinta_siirto: name: Siirtohinta min: 0 max: 150 step: 0.01 initial: 2.15 icon: mdi:currency-eur unit_of_measurement: cnt/kWh mode: box input_datetime: q1: name: \u0026#39;Q1 alkaa\u0026#39; has_date: true has_time: false icon: mdi:clock-time-four q2: name: \u0026#39;Q2 alkaa\u0026#39; has_date: true has_time: false icon: mdi:clock-time-four q3: name: \u0026#39;Q3 alkaa\u0026#39; has_date: true has_time: false icon: mdi:clock-time-four q4: name: \u0026#39;Q4 alkaa\u0026#39; has_date: true has_time: false icon: mdi:clock-time-four Seuraavaksi luodaan em. tiedoille vielä hintasensorit sähkön hinta per q1, q2, q3 ja q4, sähkön siirtohinta sekä kokonaishinta meneillään olevan kvartaalin mukaisesti\nsensor: - platform: template sensors: sahkon_hinta_q1: friendly_name: Sähkön hinta Q1 unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_q1\u0026#39;) | float / 100 | round(4) }}\u0026#34; sahkon_hinta_q2: friendly_name: Sähkön hinta Q2 unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_q2\u0026#39;) | float / 100 | round(4) }}\u0026#34; sahkon_hinta_q3: friendly_name: Sähkön hinta Q3 unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_q3\u0026#39;) | float /100 | round(4) }}\u0026#34; sahkon_hinta_q4: friendly_name: Sähkön hinta Q4 unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_q4\u0026#39;) | float / 100 | round(4) }}\u0026#34; sahkon_hinta_siirto: friendly_name: Sähkön hinta siirto unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_siirto\u0026#39;) | float / 100 | round(4) }}\u0026#34; sahkonhinta_nyt: friendly_name: Sähkön hinta tällä hetkellä unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026gt;- {% if states(\u0026#39;input_datetime.q1\u0026#39;) \u0026lt;= states(\u0026#39;sensor.date_time\u0026#39;) %} {{ (states(\u0026#39;sensor.sahkon_hinta_siirto\u0026#39;)|float + states(\u0026#39;sensor.sahkon_hinta_q2\u0026#39;)|float |round(4)) }} {% elif states(\u0026#39;input_datetime.q2\u0026#39;) \u0026lt;= states(\u0026#39;sensor.date_time\u0026#39;) %} {{ (states(\u0026#39;sensor.sahkon_hinta_siirto\u0026#39;)|float + states(\u0026#39;sensor.sahkon_hinta_q3\u0026#39;)|float |round(4)) }} {% elif states(\u0026#39;input_datetime.q3\u0026#39;) \u0026lt;= states(\u0026#39;sensor.date_time\u0026#39;) %} {{ (states(\u0026#39;sensor.sahkon_hinta_siirto\u0026#39;)|float + states(\u0026#39;sensor.sahkon_hinta_q4\u0026#39;)|float |round(4)) }} {% elif states(\u0026#39;input_datetime.q4\u0026#39;) \u0026lt;= states(\u0026#39;sensor.date_time\u0026#39;) %} {{ (states(\u0026#39;sensor.sahkon_hinta_siirto\u0026#39;)|float + states(\u0026#39;sensor.sahkon_hinta_q1\u0026#39;)|float |round(4)) }} {% endif%} Käynnistetään vielä Home Assistant uudelleen ja luodaan työpöydälle tarvittavat muuttujat ja sensorit, joihin sitten annetaan tarvittavat tiedot.\nKuva: Muuttujat ja sensorit\nLopuksi vielä liitetään sähkön kokonaishinnan sensori Home Assistantin energia-osioon, jolloin saadaan kerättyä tietoa sähkön kulutuksen lisäksi myös käytetyn sähkön hinnasta.\n","tags":["energia","energiankulutus","homeassistant","input_datetime","input_number","kotiautomaatio"], "section": "posts"},{"date":"1667779200", "url":"https://eddyshomepages.github.io/posts/energian-hinnan-seurantaa-home-assistantilla/", "title":"Energian hinnan seurantaa Home Assistantilla, osa 1", "summary":"Edit: 12.12.2022 Energian laskenta päivitetty, uusi päivitetty kirjoitus löytyy linkin takaa.\nSeuraavaksi ajattelin kirjoittaa päivän polttavasta aiheesta eli sähkön hinnasta. Minulla oli aikaisemmin kvartaaleittain vaihtuva sähkön hinta, mutta koska vanhan sähkösopimuksen hinta oli jo yli 50 cnt/kWh, tulin siihen tulokseen, että nyt olisi ehkä hyvä kuitenkin vaihtaa sopimus pörssisähköön, jolloin pystyn vaikuttamaan sähkön hintaan sentään jollakin tavalla. Nyt siis mennään pörssisähköllä ja käytössä on HACS:in kautta saatava Nordpool -integraatio, jonka kautta haetaan pörssisähkölle hinta.", "content":"Edit: 12.12.2022 Energian laskenta päivitetty, uusi päivitetty kirjoitus löytyy linkin takaa.\nSeuraavaksi ajattelin kirjoittaa päivän polttavasta aiheesta eli sähkön hinnasta. Minulla oli aikaisemmin kvartaaleittain vaihtuva sähkön hinta, mutta koska vanhan sähkösopimuksen hinta oli jo yli 50 cnt/kWh, tulin siihen tulokseen, että nyt olisi ehkä hyvä kuitenkin vaihtaa sopimus pörssisähköön, jolloin pystyn vaikuttamaan sähkön hintaan sentään jollakin tavalla. Nyt siis mennään pörssisähköllä ja käytössä on HACS:in kautta saatava Nordpool -integraatio, jonka kautta haetaan pörssisähkölle hinta.\nHome Assistantin avulla pystytään tekemään hyvinkin erilaisia sähkön hinnan mukaan muuttuvia ohjauksia. Tähän liittyen tehdään erilliset muuttujat sähköyhtiön pörssisähkön marginaalille, siirtohinnalle sekä lisäksi muuttuja, jossa on mahdollisuus asettaa sähkön hinnalle ns. \u0026ldquo;kipuraja\u0026rdquo;-hinta eli kun ollaan tämän hinnan alapuolella, niin tällöin voidaan ohjata esim. koristevalaistusta tms. päälle. \u0026ldquo;Kipuraja\u0026rdquo;-hinnasta tehdään vielä erillinen binääri-sensori (binary_sensor) eli tästä saadaan kyllä / ei -tieto siitä, että onko hinta yli vai alle asetetun \u0026ldquo;kipurajan\u0026rdquo;.\nNämä muuttujat toteutetaan Home Assistantin input_number-muuttujalla eli configuration.yaml-tiedostoon lisätään alla olevan mukaiset rivit:\n#configuration.yaml input_number: sahkon_hinta_siirto: name: Sähkön siirtohinta min: 0 max: 50 step: 0.01 initial: 2.15 icon: mdi:currency-eur unit_of_measurement: cnt/kWh mode: box sahkon_hinta_marginaali: name: Sähköyhtiön marginaali pörssisähkölle min: 0 max: 10 step: 0.01 initial: 0.31 icon: mdi:currency-eur unit_of_measurement: cnt/kWh mode: box sahkon_hinta_kipuraja: name: Sähkön hinnan kipuraja min: 0 max: 25 step: 0.5 initial: 6.0 icon: mdi:currency-eur unit_of_measurement: cnt/kWh mode: box Seuraavaksi tehdään muuttujista sekä sähkön kokonaishinnasta sensorit sekä \u0026ldquo;kipuraja\u0026rdquo;-hinnasta binääri-sensori eli lisätään alla olevat tiedot configuration.yaml-tiedostoon\nsensor: - platform: template sensors: sahkon_hinta_siirto: friendly_name: Sähkön hinta siirto unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_siirto\u0026#39;) | float / 100 | round(4) }}\u0026#34; sahkon_hinta_marginaali: friendly_name: Sähköyhtiön marginaali unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_marginaali\u0026#39;) | float / 100| round(4) }}\u0026#34; sahkon_hinta_kipuraja: friendly_name: Sähkön hinta kipuraja unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ states(\u0026#39;input_number.sahkon_hinta_kipuraja\u0026#39;) | float / 100 | round(4) }}\u0026#34; sahkonhinta_spotti_nyt: friendly_name: Sähkön kok.hinta tällä hetkellä unit_of_measurement: EUR/kWh icon_template: \u0026#39;mdi:currency-eur\u0026#39; value_template: \u0026#34;{{ (states(\u0026#39;sensor.nordpool_kwh_fi_eur_4_025_024\u0026#39;) |float + states(\u0026#39;sensor.sahkon_hinta_siirto\u0026#39;) | float + states(\u0026#39;sensor.sahkon_hinta_marginaali\u0026#39;) | float ) | round(4)}}\u0026#34; binary_sensor: - platform: template sensors: sahko_kipuraja_hinta: friendly_name: \u0026#39;Sähkön hinta alle kipurajan\u0026#39; value_template: \u0026gt;- {{ states(\u0026#39;sensor.sahkonhinta_spotti_nyt\u0026#39;) \u0026lt; states(\u0026#39;sensor.sahkon_hinta_kipuraja\u0026#39;) }} Nyt voidaan vielä käynnistää Home Assistant uudestaan ja lisätä muuttujat ja sensorit työpöydälle, joista kuvat alla\nKuva: Muuttujien tiedot\nKuva: Sensorien tiedot\nNyt meillä on saatavilla sähkölle kokonaishintatieto (pois lukien mahdolliset kiinteät kuukausinnat) sensorin muodossa eli tämä tieto voidaan liittää suoraan Home Assistantin Energia -osioon, jolloin saadaan energian kulutuksen lisäksi myös hinta kulutetulle sähkölle.\n","tags":["binary_sensor","energia","energiankulutus","hacs","homeassistant","input_number","kotiautomaatio","nordpool","sensor"], "section": "posts"},{"date":"1667260800", "url":"https://eddyshomepages.github.io/posts/oman-streemauspalvelun-rakentaminen/", "title":"Oman streemauspalvelun rakentaminen", "summary":"Minulla on ollut jo vuosia mielessä, että pitäisi tehdä omalle musiikille striimaus-palvelu, koska minullekin on kertynyt vuosien varrella paljonkin CD:tä, joita on tullut muutettua MP3 ja MP4 -musiikkimuotoon eli .m4a muotoon. Voisihan sitä kuunnella musiikkia myös maksullisista palveluista, mutta ajattelin nyt kertoa tämmöisestäkin vaihtoehdosta eli tässä kirjoituksessa käydään läpi Emby -mediaserverin asennus- ja käyttöön ottaminen, joka on mielestäni suoraviivainen ja helppo tehdä.\nEmby on tarkoitettu oman median hallitsemiseen omalla palvelimella ja toimii esimerkiksi mainiosti omassa sisäverkossa ja ulkoverkossa palvelun saa toimimaan Emby Premiere -tilin avulla.", "content":"Minulla on ollut jo vuosia mielessä, että pitäisi tehdä omalle musiikille striimaus-palvelu, koska minullekin on kertynyt vuosien varrella paljonkin CD:tä, joita on tullut muutettua MP3 ja MP4 -musiikkimuotoon eli .m4a muotoon. Voisihan sitä kuunnella musiikkia myös maksullisista palveluista, mutta ajattelin nyt kertoa tämmöisestäkin vaihtoehdosta eli tässä kirjoituksessa käydään läpi Emby -mediaserverin asennus- ja käyttöön ottaminen, joka on mielestäni suoraviivainen ja helppo tehdä.\nEmby on tarkoitettu oman median hallitsemiseen omalla palvelimella ja toimii esimerkiksi mainiosti omassa sisäverkossa ja ulkoverkossa palvelun saa toimimaan Emby Premiere -tilin avulla. Vaihtoehtoisesti yhteyden ulkopuolelta saa myös toimimaan Caddy -webserverin reverse proxy:n avulla tai sitten ottamalla sisäverkkoon VPN -yhteys eli pienellä säätämisellä yhteys kodin ulkopuolelta onnistuu myös ilman Emby Premiere -tiliä.\nEmbyllä voi hallita musiikin lisäksi myös videoita sekä Live TV lähetyksiä, joka tosin vaatii maksullisen Emby Premiere -tilin. Minun on tarkoitus hallita toistaiseksi ainoastaan musiikki -kokoelmaani, johon ilmainen vaihtoehto riittää siis mainiosti.\nMinä asennan Embyn RaspberryPi 3 -tietokoneelle siten, että kone boottaa ulkoiselta SSD -levyltä ilman muistikortteja. Käyttöjärjestelmänä Raspissa on RaspberryPiOS. Varmuuskopioinnin teen verkkolevyasemalla käyttäen NFS (Network File System) -protokollaa.\nEmbyn asentaminen Link to heading Embyn asentaminen aloitetaan ajamalla ensin tarvittavat käyttöjärjestelmän päivitykset eli ajetaan komennot\nsudo apt update sudo apt upgrade Mikäli tarjolla on päivityksiä, niin asennetaan ne aluksi ennen kuin jatketaan.\nSeuraavaksi tarkistetaan vielä järjestelmän tiedot, jotta voidaan hakea oikea versio eli ajetaan käsky\nuname -a Käskyllä saadaan seuraavat tiedot eli\nYmpyröidystä kohdasta nähdään, että meillä on kyseessä tavallinen 32-bit käyttöjärjestelmä. Seuraavaksi haetaan oikea Embyn paketti, joka löytyy Embyn sivustolta eli meillä käyttöjärjestelmänä on RaspberryPiOS, jolloin valitaan alasvetovalikosta vaihtoehdoksi Debian. Jotta asennus saadaan suoritettua, ajetaan seuraavat käskyt\nwget https://github.com/MediaBrowser/Emby.Releases/releases/download/4.7.8.0/emby-server-deb_4.7.8.0_armhf.deb sudo dpkg -i emby-server-deb_4.7.8.0_armhf.deb Tämän jälkeen voimmekin avata selaimessa osoitteet http://x.x.x.x:8096, jossa x.x.x.x on taas sen koneen IP-osoite, jolle Emby on asennettu. Eli meille avautuu alla olevan näköinen näkymä\nKuva: Embyn konffausikkuna\nAluksi valitaan haluttu kieli, jonka jälkeen annetaan ensimmäinen käyttäjätunnus ja tunnukselle salasana. Käyttäjätunnuksia voidaan luoda lisää palvelimella kirjautumisen jälkeen.\nKuva: Embyn käyttäjän luonti\nSeuraavaksi valitaan hakemisto, johon on musiikki yms. mediat ovat tallennettu\nKuva: Embyn mediakirjaston hakemiston asetus\nSeuraavaksi valitaan oletuskieli meta-datalle\nKuva: Embyn meta-datan oletuskieli\nSeuraavaksi konfiguroidaan etäyhteyttä eli mennään oletusasetuksella eteenpäin\nKuva: Embyn etäyhteyden konfigurointi\nLopuksi vielä luetaan tiedot yksityisyysasetuksista ja käyttöehdoista ennen hyväksymistä\nKuva: Embyn yksityisyysasetukset ja käyttöehdot\nTämän jälkeen ollaankin sitten valmiita\nKuva: Embyn konfigurointi on nyt valmis\nLopuksi painetaan vielä Finish -näppäintä. Ikkunasta löytyvät myös linkit asiakas-sovelluksiin, jotka voidaan asentaa ja yhdistää palvelimeen.\nSeuraavaksi päästään kirjautumaan sovellukseen ja aloittamaan sen käyttö\nKuva: Embyn kirjautumisikkuna\nNyt ei muuta kuin kuuntelemaan musiikkia sovelluksen kautta.\n","tags":["caddy","debian","emby","raspberrypios"], "section": "posts"},{"date":"1665878400", "url":"https://eddyshomepages.github.io/posts/sivuston-rss-syote-saatavilla/", "title":"Sivuston RSS -syöte saatavilla", "summary":"Tähän väliin pieni ilmoitus niille, jotka haluavat fiilistellä RSS -syötteen kanssa. Eli sivuston yläpalkin some-kuvakkeiden yhteydestä löytyy linkki sivuston RSS -syötteeseen. RSS -syöte on jo yli 20 vuotta vanha, mutta mielestäni edelleenkin toimiva tapa pysyä perillä eri nettisivujen päivityksistä tai uutisista.\nHomma toimii siten, että aluksi kopioidaan linkki hiiren oikealla näppäimellä RSS -syötteen kuvakkeen kohdalta, kuva alla\nLinkin saa tämän jälkeen helposti lisättyä esimerkiksi Thunderbird -sähköpostiohjelmaan tilien hallinnan kautta, jolloin sähköpostitilien yhteyteen tulee oma kohta sivuston RSS -syötteestä.", "content":"Tähän väliin pieni ilmoitus niille, jotka haluavat fiilistellä RSS -syötteen kanssa. Eli sivuston yläpalkin some-kuvakkeiden yhteydestä löytyy linkki sivuston RSS -syötteeseen. RSS -syöte on jo yli 20 vuotta vanha, mutta mielestäni edelleenkin toimiva tapa pysyä perillä eri nettisivujen päivityksistä tai uutisista.\nHomma toimii siten, että aluksi kopioidaan linkki hiiren oikealla näppäimellä RSS -syötteen kuvakkeen kohdalta, kuva alla\nLinkin saa tämän jälkeen helposti lisättyä esimerkiksi Thunderbird -sähköpostiohjelmaan tilien hallinnan kautta, jolloin sähköpostitilien yhteyteen tulee oma kohta sivuston RSS -syötteestä. Linkin voi lisätä myös puhelimeen, jolloin päivitykset uusista kirjoituksista saa näppärästi puhelimeen.\nEdit 19.12.2022\nTeeman vaihduttua, yläpalkista ei ole enää saatavilla linkkiä RSS -syötteeseen. Suoralinkki sivuston RSS -syötteeseen on https://fasted.dy.fi/index.php/feed/, jonka voi halutessaan kopioida suoraan haluttuun sovellukseen.\nEdit 13.10.2023\nSivuston uudistuttua RSS -syöte löytyy jatkossa tämän linkin takaa.\n","tags":["rss"], "section": "posts"},{"date":"1664928000", "url":"https://eddyshomepages.github.io/posts/zigbee2mqtt-asentaminen-docker-composen-avulla/", "title":"Zigbee2MQTT asentaminen Docker-Composen avulla", "summary":"Jatketaan vielä Docker-Composen parissa ja seuraavaksi asennetaan Zigbee2MQTT Docker-Composen avulla. Meillä on siis Home Assistant ja Mosquitto -broker asennettuna Docker-Composen kautta, jonka vuoksi mm. Home Assistantin lisäosat eivät ole käytettävissä. Tätä kautta onnistuisi myös asentaa Zigbee2MQTT, mutta me asennamme sen toisella tapaan. Minulla on myös käytössä Conbee II zigbee -mokkula, joka toimii hyvin Zigbee2MQTT:n kanssa. Vaihtoehtoisesti voitaisiin käyttää myös deConz -ohjelmistoa, mutta itse olen tykästynyt Zigbee2MQTT:hen. Mikäli olen asentanut Home Assistantin oman käyttöjärjestelmän, löytyy deConz -lisäosa suoraan ohjelmakirjastosta.", "content":"Jatketaan vielä Docker-Composen parissa ja seuraavaksi asennetaan Zigbee2MQTT Docker-Composen avulla. Meillä on siis Home Assistant ja Mosquitto -broker asennettuna Docker-Composen kautta, jonka vuoksi mm. Home Assistantin lisäosat eivät ole käytettävissä. Tätä kautta onnistuisi myös asentaa Zigbee2MQTT, mutta me asennamme sen toisella tapaan. Minulla on myös käytössä Conbee II zigbee -mokkula, joka toimii hyvin Zigbee2MQTT:n kanssa. Vaihtoehtoisesti voitaisiin käyttää myös deConz -ohjelmistoa, mutta itse olen tykästynyt Zigbee2MQTT:hen. Mikäli olen asentanut Home Assistantin oman käyttöjärjestelmän, löytyy deConz -lisäosa suoraan ohjelmakirjastosta.\nAsennus aloitetaan samaan tapaan kuin aikaisemmissa Docker-Compose asennuksissa eli aluksi luodaan zigbee2mqtt -hakemisto Docker-Composen asennushakemistoon eli annetaan käskyt\ncd /home/pi/docker-data mkdir zigbee2mqtt cd zigbee2mqtt Seuraavaksi avataan / luodaan tiedosto docker-compose.yaml komennolla nano docker-compose.yaml ja kopioidaan sinne alla olevat tiedot\nversion: \u0026#39;3.8\u0026#39; services: zigbee2mqtt: container_name: zigbee2mqtt image: koenkk/zigbee2mqtt restart: unless-stopped volumes: - /home/pi/docker-data/zigbee2mqtt/data:/app/data - /run/udev:/run/udev:ro ports: # Frontend port - 8080:8080 environment: - TZ=Europe/Helsinki devices: # Make sure this matched your adapter location - /dev/ttyACM0:/dev/ttyACM0 Rivi devices on tärkeä, koska siihen laitetaan oikeat tiedot zigbee -adapterin portista. Yleensä adapterin osoite on /dev/ttyACM0, mutta se saattaa myös vaihdella. Oikean osoitteen saa hyvin tarkastettua komennolla ls -l /dev/serial/by-id. Minulla komento antaa alla olevan mukaisen näkymän\nTämä kertoo, että zigbee-adabteri on portissa /dev/ttyACM0, joka on myös täten adapterin osoite.\nTämän jälkeen voimme sitten asentaa tarvittavat tiedostot ja käynnistää Zigbee2MQTT:n komennolla\ndocker-compose up -d Kun asennus on valmis, niin tämän jälkeen meillä on Zigbee2MQTT asennettuna ja seuraavaksi voimmekin mennä selaimen kautta konffaamaan zigbee -laitteita. Zigbee2MQTT:n käyttöliittymä löytyy osoitteesta http://x.x.x.x:8080, jossa x.x.x.x on sen koneen IP-osoite, jolle Zigbee2MQTT on asennettu.\n","tags":["conbee ii","deconz","docker","docker-compose","homeassistant","kotiautomaatio","zigbee2mqtt"], "section": "posts"},{"date":"1663718400", "url":"https://eddyshomepages.github.io/posts/ruuvitag-antureiden-lisaaminen-home-assistantiin-ruuvitag-discoveryn-avulla-mqtt-protokollaa-kayttaen/", "title":"RuuviTag -antureiden lisääminen Home Assistantiin Ruuvitag Discoveryn avulla MQTT-protokollaa käyttäen", "summary":"Lähtökohtaisesti meillä on Docker-Composen avulla asennettuna Home Assistant sekä Mosquitto -broker. Seuraavaksi lisäämme Home Assistanttin RuuviTag -antureita käyttäen MQTT -protokollaa ja siinä käytämme apuna Ruuvitag Discovery -ohjelmistoa.\nRuuviTag on kotimainen tuote, joka toimii lämpötila-, kosteus-, ilmanpaine ja liike -anturina. RuuviTag toimii Bluetooth -yhteydellä ja se voidaan yhdistää esim. puhelimeen tai kuten tässä tapauksessa, myös Home Assistantiin tai muihin kotiautomaatiojärjestelmiin.\nRuuviTagit voisi lisätä Home Assistanttiin myös erilaisilla lisäosilla, mutta me teemme sen Ruuvitag Discoveryn ja MQTT:n avulla.", "content":"Lähtökohtaisesti meillä on Docker-Composen avulla asennettuna Home Assistant sekä Mosquitto -broker. Seuraavaksi lisäämme Home Assistanttin RuuviTag -antureita käyttäen MQTT -protokollaa ja siinä käytämme apuna Ruuvitag Discovery -ohjelmistoa.\nRuuviTag on kotimainen tuote, joka toimii lämpötila-, kosteus-, ilmanpaine ja liike -anturina. RuuviTag toimii Bluetooth -yhteydellä ja se voidaan yhdistää esim. puhelimeen tai kuten tässä tapauksessa, myös Home Assistantiin tai muihin kotiautomaatiojärjestelmiin.\nRuuviTagit voisi lisätä Home Assistanttiin myös erilaisilla lisäosilla, mutta me teemme sen Ruuvitag Discoveryn ja MQTT:n avulla. Tämä siksi, että meillä Home Assistant on asennettu Docker-Composen avulla, jolloin tämä lisäosat eivät toimi sellaisenaan. Jatkossa tarkoituksena on asentaa myös zigbee- ja z-wave -antureita MQTT:tä hyödyntäen, jolloin RuuviTagit menevät siinä samalla mukana.\nNode.js asennus Link to heading Aluksi meidän täytyy kuitenkin asentaa node.js, jotta saamme Ruuvitag Discoveryn asennettua. RaspberryPiOS on Debian -pohjainen käyttöjärjestelmä eli saamme asennettua node.js:n ohjelmistolähteistä, joihin löytyvät ohjeet linkin takaa.\nAluksi asennamme node.js:n ohjelmistolähteet ja myös node.js:n komennoilla\n#HUOM! asennus tehdään root-käyttäjänä sudo su curl -fsSL https://deb.nodesource.com/setup_current.x | bash - apt-get install -y nodejs exit Ruuvitag Discoveryn asennus Link to heading Seuraavaksi haetaan Ruuvitag Discovery -tiedostot komennolla\ngit clone https://github.com/balda/ruuvitag-discovery Seuraavaksi suoritetaan asennus\ncd ruuvitag-discovery/ npm install Asennukseen jälkeen voimme käynnistää Ruuvitag-Discoveryn komennolla\nnpm start Voi olla, että järjestelmä ei vielä suoraan löydä RuuviTag -antureita, jolloin pitää varmistaa, että järjestelmään on asennettu tarvittavat bluetooth -paketit sekä ajaa komento, jolloin Ruuvitag Discovery ei tarvitse root/sudo -oikeuksia\nsudo apt-get install bluetooth bluez sudo setcap cap_net_raw+eip $(eval readlink -f `which node`) Mikäli asennus onnistui, niin meillä pitäisi näkyä päätteessä alla olevan kaltaiset rivit, josta alimpana nähdään, että Ruuvitag Discovery on löytänyt kaksi erillistä RuuviTagia\nPalvelun ruuvitag-discovery.service luominen Link to heading Ennen kuin jatketaan asetuksien tekemistä, niin tehdään kuitenkin Ruuvitag Discoverystä palvelu, joka käynnistyy automaattisesti tietokoneen käynnistyessä. Aluksi luodaan tiedosto ruuvitag-discovery.service komennolla sudo nano /etc/systemd/system/ruuvitag-discovery.service ja lisätään tiedostoon alla olevat rivit\n[Unit] Description=RuuviTag Discovery [Service] Type=simple Restart=always User=pi WorkingDirectory=/home/pi/ruuvitag-discovery ExecStart=/usr/bin/npm start [Install] WantedBy=multi-user.target Seuraavaksi käynnistetään palvelu ja tehdään siitä automaattisesti käynnistyvä komennoilla\nsudo systemctl start ruuvitag-discovery sudo systemctl enable ruuvitag-discovery Ruuvitag Discoveryn asetus web-selaimen kautta Link to heading Tämän jälkeen avataan selaimella osoite http://x.x.x.x:8099, jota kautta pääsemme avaamaan web-pohjaisen konfigurointi -ikkunan. IP-osoite x.x.x.x on sen tietokoneen IP-osoite, jolle Ruuvitag Discovery on asennettu.\nEtusivulla näkyvät löydetyt anturit ja kohdasta \u0026ldquo;Targets\u0026rdquo; päästään antamaan MQTT:n asetukset. Lisätään asetukset painamalla napista \u0026ldquo;+Home Assistant (MQTT)\u0026rdquo; , jolloin avautuu alla olevan kaltainen ikkuna\nAluksi annetaan tarvittavat tiedot eli\nkohtaan name jokin nimi esim. mosquitto\nkohtaan host mosquitto -brokerin IP-osoite\nkohtaan port mosquitto -brokerin portti\nkohtaan topic otsikoksi homeassistant\nkohtaan username käyttäjätunnus\nkohtaan password salasana\nKohdasta \u0026ldquo;Tags\u0026rdquo; voidaan ottaa käyttöön halutut anturit sekä tiedot, joita lähetetään Home Assistantille eli esim. ainakin humidity, temperature ja pressure. Lisäksi valittavana on myös muitakin tietoja, joita voidaan lähetään Home Assistantille.\nLopuksi otetaan vielä \u0026ldquo;Home Assistant (MQTT)\u0026rdquo; käyttöön valitsemalla \u0026ldquo;enable\u0026rdquo; ja tallennetaan asetukset, jonka jälkeen pitäisi alkaa tulla anturi-dataa Home Assistantille.\n","tags":["bluetooth","debian","homeassistant","kotiautomaatio","mqtt","node.js","raspberrypios","ruuvitag","ruuvitag-discovery"], "section": "posts"},{"date":"1663027200", "url":"https://eddyshomepages.github.io/posts/mosquitto-brokerin-asennus-kayttaen-docker-composea/", "title":"Mosquitto-brokerin asennus käyttäen Docker-Composea", "summary":"Seuraavaksi asennamme mosquitto-brokerin Docker-Composen avulla. Mosquitto-brokeria tarvitaan hoitamaan ns. \u0026ldquo;keskustelu\u0026rdquo; -yhteyttä, jotta voimme lisätä Home Assistanttiin zigbee-, z-wave- ja ruuviTag -laitteita käyttäen Zigbee2MQTT-, Zwavejs2Mqtt- ja RuuviTag Discovery -ohjelmistoja, jotka kommunikoivat käyttäen MQTT -protokollaa.\nMosquitto-brokerin asennus Link to heading Mosquitto-brokerin asennus menee aika lailla samaan tapaan kuin aikaisemmat Docker-Composen avulla tehdyt asennukset eli aluksi luodaan mosquittoa varten hakemisto Docker-Composen asennushakemistoon eli ajetaan seuraavat komennot\ncd /home/pi/docker-data mkdir mosquitto cd mosquitto Seuraavaksi luodaan docker-compose.", "content":"Seuraavaksi asennamme mosquitto-brokerin Docker-Composen avulla. Mosquitto-brokeria tarvitaan hoitamaan ns. \u0026ldquo;keskustelu\u0026rdquo; -yhteyttä, jotta voimme lisätä Home Assistanttiin zigbee-, z-wave- ja ruuviTag -laitteita käyttäen Zigbee2MQTT-, Zwavejs2Mqtt- ja RuuviTag Discovery -ohjelmistoja, jotka kommunikoivat käyttäen MQTT -protokollaa.\nMosquitto-brokerin asennus Link to heading Mosquitto-brokerin asennus menee aika lailla samaan tapaan kuin aikaisemmat Docker-Composen avulla tehdyt asennukset eli aluksi luodaan mosquittoa varten hakemisto Docker-Composen asennushakemistoon eli ajetaan seuraavat komennot\ncd /home/pi/docker-data mkdir mosquitto cd mosquitto Seuraavaksi luodaan docker-compose.yaml -tiedosto komennolla nano docker-compose.yaml ja kopioidaan tiedostoon seuraavat tiedot:\nversion: \u0026#34;3\u0026#34; services: mosquitto: image: eclipse-mosquitto network_mode: host volumes: - /home/pi/docker-data/mosquitto/config:/mosquitto/config - /home/pi/docker-data/mosquitto/data:/mosquitto/data - /home/pi/docker-data/mosquitto/log:/mosquitto/log Seuraavaksi meidän täytyy vielä luoda hakemistoon /home/pi/docker-data/mosquitto/config tiedosto nimeltään mosquitto.conf ja luodaan se komennolla nano /home/pi/docker-data/mosquitto/config/mosquitto.conf ja kopioidaan tiedostoon tiedot:\npersistence true persistence_location /mosquitto/data/ log_dest file /mosquitto/log/mosquitto.log listener 1883 ## Authentication ## # allow_anonymous false password_file /mosquitto/config/password.txt Seuraavaksi luodaan vielä käyttäjä mosquitto komennolla\ndocker-compose exec mosquitto mosquitto_passwd -c /mosquitto/config/password.txt mosquitto Tämän mosquitto-broker jälkeen voidaan käynnistää komennolla\ndocker-compose up -d Nyt meillä pitäisi olla mosquitto-broker käynnissä ja seuraavaksi voidaan Home Assistantissa ottaa käyttöön mosquitto -integraatio.\nSeuraavissa kirjoituksissa käydään läpi tarkemmin Zigbee2MQTT, Zwavejs2Mqtt ja Ruuvitag Discoveryn asennuksia, joilla saamme lisättyä Home Assistanttiin zigbee-, z-wave- ja ruuviTag -sensorit yms. laitteet.\n","tags":["homeassistant","mosquitto","mosquitto-broker","ruuvitag","ruuvitag-discovery","zigbee","zigbee2mqtt","zwave","zwavejs2mqtt"], "section": "posts"},{"date":"1662768000", "url":"https://eddyshomepages.github.io/posts/mariadb-tietokannan-kayttoonotto-home-assistantissa/", "title":"MariaDB-tietokannan käyttöönotto Home Assistantissa", "summary":"Seuraavaksi meillä olisi tarkoituksena käydä läpi hieman Home Assistantin tietokantaa, joka on oletuksena SQLite -tietokanta. Tämä tietokanta toimii hyvin pienissä järjestelmissä, mutta kun sensoreita ja muuta systeemiä alkaa olla enemmän käytössä, niin siinä vaiheessa voi tulla ongelmia vastaan. MariaDB -tietokanta on järkevää ottaa käyttöön jo heti alussa, niin siihen ei sitten tarvitse palata enää myöhemmin.\nMariaDB:n asennusta käytiin läpi myös aikaisemmassa kirjoituksessa, jossa käsiteltiin WordPress.org:n asennusta. Asennus etenee samaan tapaan, kuin WordPress.", "content":"Seuraavaksi meillä olisi tarkoituksena käydä läpi hieman Home Assistantin tietokantaa, joka on oletuksena SQLite -tietokanta. Tämä tietokanta toimii hyvin pienissä järjestelmissä, mutta kun sensoreita ja muuta systeemiä alkaa olla enemmän käytössä, niin siinä vaiheessa voi tulla ongelmia vastaan. MariaDB -tietokanta on järkevää ottaa käyttöön jo heti alussa, niin siihen ei sitten tarvitse palata enää myöhemmin.\nMariaDB:n asennusta käytiin läpi myös aikaisemmassa kirjoituksessa, jossa käsiteltiin WordPress.org:n asennusta. Asennus etenee samaan tapaan, kuin WordPress.org:n asennuksen yhteydessä eli lähtökohtana meillä on, että olemme siis jo asentaneet MariaDB ja ottaneet sen käyttöön.\nTämä asennus on tehty Home Assistantin Docker-Compose -version kanssa, mutta se toiminee myös muussakin asennuksessa. Mikäli Home Assistant on asennettu valmiin levykuvan kautta, niin tällöin lisäosista löytyy valmiina lisäosa MariaDB -tietokannan käyttöönottoa varten.\nAluksi luomme Home Assistanttia varten tietokannan ja käyttäjän eli aluksi aluksi ajamme komennon\nmysql -u root -p Seuraavaksi luomme tietokannan homeassistant, käyttäjän hauser sekä päivitämme tietokannan oikeudet eli annetaan alla olevat komennot\nCREATE DATABASE homeassistant; CREATE USER ‘hauser’ IDENTIFIED BY ‘salasana’; GRANT ALL PRIVILEGES on homeassistant.* TO \u0026#39;hauser\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;salasana\u0026#39;; FLUSH PRIVILEGES; exit; Salasanaksi tulee tietysti valita jokin parempi salasana kuin esimerkissä käytetty salasana.\nSeuraavaksi teemme tarvittavat muutokset Home Assistantin puolelle eli lisäämme configuration.yaml -tiedostoon alla olevat rivit\nrecorder: db_url: mysql+pymysql://hauser:salasana@localhost/homeassistant?charset=utf8mb4 purge_keep_days: 10 Edellä purge_keep_days: 10 tarkoittaa sitä, että tallennamme tietokantaan tiedot viimeiseltä 10 vuorokaudelta. Tätä voi halutessaan muuttaa ja tarkempia asetusvaihtoehtoja, kuten esimerkiksi joidenkin tiettyjen sensorien pois jättäminen historiatiedoista, löytyy tämän seuraavan linkin takaa.\nVoimme myös tehdä tietokannasta sensorin, joka kertoo tietokannan koon, lisäämällä sensor: -kohtaan alla olevat rivit\n- platform: sql db_url: mysql+pymysql://hauser:salasana@localhost/homeassistant queries: - name: DB size query: \u0026#39;SELECT table_schema \u0026#34;database\u0026#34;, Round(Sum(data_length + index_length) / 1024 / 1024, 1) \u0026#34;value\u0026#34; FROM information_schema.tables WHERE table_schema=\u0026#34;home_assistant\u0026#34; GROUP BY table_schema;\u0026#39; column: \u0026#39;value\u0026#39; unit_of_measurement: MB Seuraavan kerran, kun päivitämme Docker-Composen avulla asennetun Home Assistantin, niin meille tulee käynnistyksen jälkeen todennäköisesti virheilmoitus The recorder could not start, joka johtuu siitä, että [Home Assistantin] [Docker] -versiossa ei ole asennettuna pymysql -tiedostoa. Tämä tilanne saadaan korjattua seuraavasti eli aluksi menemme Home Assistantin dockeriin sisälle komennolla\ndocker exec -it homeassistant bash Asennetaan pymysql -tiedosto komennolla\npip3 install pymysql Lopuksi käynnistetään vielä Home Assistant uudestaan, jonka jälkeen MariaDB -tietokannan pitäisi taas toimia normaalisti.\n","tags":["docker","docker-compose","homeassistant","kotiautomaatio","mariadb","pymysql","sqlite","wordpress.org"], "section": "posts"},{"date":"1662336000", "url":"https://eddyshomepages.github.io/posts/docker-composen-avulla-asennetun-home-assistantin-varmuuskopiointi-duplicatin-avulla/", "title":"Docker-Composen avulla asennetun Home Assistantin varmuuskopiointi Duplicatin avulla", "summary":"Tässä kirjoituksessa minulla on tarkoitus käydä läpi Docker-Composen avulla asennetun Home Assistantin varmuuskopiointia erillisen Duplicati -sovelluksen avulla. Home Assistantin omakin varmuuskopiointi kyllä toimii, mutta esim. varmuuskopioinnin palautus ei toimi Docker-Compose asennuksessa, vaan vaihtoehtona on ainoastaan poistaa- tai ladata varmuuskopio.\nDuplicati asennetaan samalle tietokoneelle kuin Home Assistant ja sen voi asentaa Docker-Composen avulla tai vaihtoehtoisesti myös suoraan käyttöjärjestelmään, joista tarkemmin seuraavaksi.\nDuplicatin asennus Docker-Composen avulla Link to heading Duplicatin asennus Docker-Composen avulla onnistuu samaan tapaan, kuin teimme aikaisemmin Home Assistantin ja Baïkalin kanssa.", "content":"Tässä kirjoituksessa minulla on tarkoitus käydä läpi Docker-Composen avulla asennetun Home Assistantin varmuuskopiointia erillisen Duplicati -sovelluksen avulla. Home Assistantin omakin varmuuskopiointi kyllä toimii, mutta esim. varmuuskopioinnin palautus ei toimi Docker-Compose asennuksessa, vaan vaihtoehtona on ainoastaan poistaa- tai ladata varmuuskopio.\nDuplicati asennetaan samalle tietokoneelle kuin Home Assistant ja sen voi asentaa Docker-Composen avulla tai vaihtoehtoisesti myös suoraan käyttöjärjestelmään, joista tarkemmin seuraavaksi.\nDuplicatin asennus Docker-Composen avulla Link to heading Duplicatin asennus Docker-Composen avulla onnistuu samaan tapaan, kuin teimme aikaisemmin Home Assistantin ja Baïkalin kanssa. Aluksi luodaan Docker-Composen asetustiedostoon Duplicatille oma hakemisto, jonka jälkeen siirrytään luotuun hakemistoon eli\ncd docker-data mkdir duplicati cd duplicati Seuraavaksi avataan editorilla docker-compose.yaml -tiedosto eli annetaan komento nano docker-compose.yaml ja tallennetaan tiedostoon alla olevat tiedot\nversion: \u0026#34;2.1\u0026#34; services: duplicati: image: ghcr.io/linuxserver/duplicati container_name: duplicati environment: - PUID=0 - PGID=0 - TZ=Europe/Helsinki volumes: - /home/pi/docker-data/duplicati/config:/config - /home/pi/docker-data/duplicati/backups/:/backups - /home/pi/docker-data/:/source:ro restart: always ports: - \u0026#34;8200:8200\u0026#34; Tässä \u0026ldquo;volumes\u0026rdquo; -osiossa \u0026ldquo;/config\u0026rdquo; on hakemisto, johon tallentuvat konfigurointiin liittyvät tiedostot. Hakemisto \u0026ldquo;/backups\u0026rdquo; on hakemisto, johon tallentuvat paikallisesti tehdyt varmuuskopiot ja hakemisto \u0026ldquo;/source\u0026rdquo; on ns. lähdehakemisto, joka näkyy Duplicatin lähdetiedosto -ikkunassa kohdassa nimeltään \u0026ldquo;Lähdetiedostot\u0026rdquo;. Tässä tapauksessa olen antanut lähdetiedostoksi sen hakemiston, johon on tallennettu kaikki Docker-Composella asennetut sovellukset.\nTämän jälkeen suljetaan tiedosto ja tallennetaan muutokset. Seuraavaksi käynnistetään Duplicati komennolla docker-compose up -d.\nKun Docker-Compose on hakenut tarvittavat tiedot ja Duplicati on käynnistynyt, niin seuraavaksi voidaan käynnistää Duplicatin web-käyttöliittymä eli menemme selaimella osoitteeseen http://x.x.x.x:8200, jossa x.x.x.x on taas sen tietokoneen sisäverkon IP-osoite, johon Duplicati on asennettu.\nDuplicatin asennus suoraan käyttöjärjestelmään Link to heading Toisena vaihtoehtona on asentaa Duplicati suoraan käyttöjärjestelmään ja sekin onnistuu helposti. Aluksi haetaan asennuspaketti komennolla\nwget https://updates.duplicati.com/beta/duplicati_2.0.6.3-1_all.deb Seuraavaksi asennetaan haettu paketti komennolla\nsudo dpkg -i duplicati_2.0.6.3-1_all.deb Tämä antaa todennäköisesti virheilmoituksen puuttuvista paketeista\n....... E: Unmet dependencies. Try \u0026#39;apt --fix-broken install\u0026#39; with no packages (or specify a solution). Asia korjaantuu ajamalla komento sudo apt --fix-broken install, joka asentaa puuttuvat tiedostot.\nTämän jälkeen ajetaan uudestaan komento sudo dpkg -i duplicati_2.0.6.3-1_all.deb, jonka jälkeen meillä on Duplicati asennettuna.\nDuplicati ei ole vielä käynnissä, joten se täytyy käynnistää ja asettaa käynnistymään automaattisesti. Ennen sitä tehdään kuitenkin muutos tiedostoon /etc/default/duplicati eli avataan tiedosto editorilla\nsudo nano /etc/default/duplicati\nTähän tiedostoon täytyy tehdä seuraava muutos, jotta web-käyttöliittymä käynnistyy eli muutetaan alla oleva rivi\nDAEMON_OPTS=\u0026#34;\u0026#34; muotoon\nDAEMON_OPTS=\u0026#34;--webservice-interface=any\u0026#34; Tämän jälkeen laitetaan vielä Duplicati käynnistymään automaattisesti sekä käynnistetään palvelu\nsudo systemctl enable duplicati sudo systemctl start duplicati Nyt meillä on Duplicati asennettuna suoraan käyttöjärjestelmään ja seuraavaksi voidaan avata selaimella Duplicatin web-käyttöliittymä eli avataan osoite http://x.x.x.x:8200.\nTarkemmin Duplicatin asetuksista voi lukea sivustolta https://duplicati.readthedocs.io/en/latest/, jossa on tarkemmin tietoa sovelluksen asetuksista.\nKohdassa \u0026ldquo;Storage Providers\u0026rdquo; on tietoja eri tallennusmahdollisuuksista kuten varmuuskopiointi paikallisesti tai sitten pilveen esim. WebDAV, Dropbox, Google Drive tai Microsoft OneDrive. Näitä mahdollisuuksia on monia ja niistä löytyy varmasti se hyvä vaihtoehto omaan käyttöön.\n","tags":["baikal","docker-compose","dropbox","duplicati","googledrive","homeassistant","onedrive","webdav"], "section": "posts"},{"date":"1661990400", "url":"https://eddyshomepages.github.io/posts/baikal-kalenteripalvelimen-asennus-docker-composen-avulla-ja-suojatun-yhteyden-muodostus-caddyn-reverse-proxy-asetuksilla/", "title":"Baïkal -kalenteripalvelimen asennus Docker-Composen avulla ja suojatun yhteyden muodostus Caddyn reverse proxy asetuksilla", "summary":"Tässä kirjoituksessa on tarkoituksena käydä läpi Baïkal -kalenteripalvelimen asennus Docker-Composelle ja määrittää Caddy-webserverille reverse proxy asetukset siten, että myös kalenteripalvelimella on käytössä sama sertifikaatti kuin Caddy -webserverillä.\nOma kalenteripalvelin on näppärä, jos ei halua käyttää Googlen omaa kalenteria, vaan haluaa kalenterin, jonka tiedot on tallennettu omalle palvelimelle eikä esim. Googlen palvelimelle. Omalle palvelimelle asennettaessa täytyy tietysti muistaa tarvittavat varmuuskopiot, jotta tiedot eivät katoa, jos kone esim. hajoaa. Itselläni on käytössä oma sekä myös perheelle yhteinen kalenteri, johon tallennetaan yhteiset menot yms.", "content":"Tässä kirjoituksessa on tarkoituksena käydä läpi Baïkal -kalenteripalvelimen asennus Docker-Composelle ja määrittää Caddy-webserverille reverse proxy asetukset siten, että myös kalenteripalvelimella on käytössä sama sertifikaatti kuin Caddy -webserverillä.\nOma kalenteripalvelin on näppärä, jos ei halua käyttää Googlen omaa kalenteria, vaan haluaa kalenterin, jonka tiedot on tallennettu omalle palvelimelle eikä esim. Googlen palvelimelle. Omalle palvelimelle asennettaessa täytyy tietysti muistaa tarvittavat varmuuskopiot, jotta tiedot eivät katoa, jos kone esim. hajoaa. Itselläni on käytössä oma sekä myös perheelle yhteinen kalenteri, johon tallennetaan yhteiset menot yms. jolloin ne ovat kaikkien katseltavissa.\nBaïkal -kalenteripalvelin käyttää CalDAV -protokollaa, joka on WebDAV -protokollan laajennus. Myös suosituissa OwnCloud / Nextcloud -pilvipalveluissa, jotka käyttävät WebDAV -protokollaa, on valmiiksi integroituna kalenteripalvelin. Myös nämä kalenteripalvelut toimivat samalla periaatteella kuin Baïkal sillä erotuksella, että Baïkalissa ei ole webbikalenterimahdollisuutta.\nItse hallinnoitavia kalenteri -palvelimia on myös muitakin kuten esim. Radicale, jota olen myös käyttänyt ja asentanut omaan käyttöön, mutta nykyisellään Baïkal on vakiintunut käyttöön.\nBaïkalin asennus Link to heading Baïkalin asennus Docker-Compose ympäristöön alkaa sillä, että luodaan Baïkalille oma hakemisto samaan tapaan kuin Home Assistantin asennuksen kanssa, johon tallennetaan docker-compose.yaml -tiedosto sekä muut tarvittavat asetustiedostot. Minun tapauksessa tämä tiedosto on nimeltään docker-data ja sijaitsee kotihakemistossa eli aluksi siirrymme hakemistoon docker-data ja luomme sinne baikal -nimisen hakemiston.\ncd docker-data mkdir baikal Seuraavaksi avataan docker-compose.yaml editorilla (minulla nano) ajamalla komento nano docker-compose.yaml ja tallennetaan sinne alla olevat tiedot.\n# Docker Compose file for a Baikal server version: \u0026#34;2\u0026#34; services: baikal: image: ckulka/baikal:nginx restart: always ports: - \u0026#34;5232:80\u0026#34; volumes: - /home/pi/docker-data/baikal/config:/var/www/baikal/config - /home/pi/docker-data/baikal/data:/var/www/baikal/Specific volumes: config: data: Kun muutokset on tehty poistutaan editorista ja tallennetaan muutokset. Riviltä \u0026ldquo;image: chulka/baikal:nginx\u0026rdquo; nähdään, että tämä versio Baïkalista on asennettu nginx -webserverin päälle ja valitsin sen sen vuoksi, että se on kooltaan pienempi kuin apache -versio. Mikäli kuitenkin haluaa käyttää apache -versiota, niin myös tämä on valittavissa, tällöin nginx tilalle muutetaan apache. Lisää tietoa eri versioista saa github-sivulta https://github.com/ckulka/baikal-docker.\nToinen huomio on, että olen ohjannut portin 5232 dockerin porttiin 80. Olen tehnyt tämän sen vuoksi, että minulla tämä portti 80 on jo varattuna muuhun käyttöön. Tällöin täytyy vain muistaa ohjata myös modeemista käsin portti 5232 tälle koneelle, johon Caddy -webserveri on asennettu. Mutta portti voisi olla myös esim. tämä portti 80.\nOlen myös merkinnyt rivin 443:443 pois käytöstä juuri sen vuoksi, että käytämme suojatun yhteyden muodostamiseen Caddy -webserverin reverse proxy -toimintoa, jolla saamme määritettyä suojatun yhteyden kalenteri -palvelimeen.\nAsennuksen valmistuttua Baïkal käynnistetään komennolla docker-compose up -d. Mikäli käynnistyksen yhteydessä tulee alla olevan mukainen virheilmoitus, niin kannatta aluksi käynnistää docker uudestaan komennolla sudo systemctl restart docker ja kokeilla sen jälkeen käynnistää Baïkal uudestaan komennolla docker-compose up -d.\nError while fetching server API version: UnixHTTPConnectionPool(host=\u0026#39;localhost\u0026#39;, port=None): Read timed out. (read timeout=60) Tässä vaiheessa voidaan tarkastaa, että käynnistyykö Baïkal, jotta saadaan tehtyä tarvittavat käyttäjäasetukset Baïkaliin. Eli mennään selaimella sivustolle x.x.x.x:5232 ja mikäli sivustolla näkyy alla olevan mukainen virheilmoitus, tarkoittaa se sitä, että näiden hakemistojen käyttöoikeudet eivät ole kunnossa ja ne pitää korjata.\nEli seuraavaksi meidän täytyy mennä Dockeriin \u0026ldquo;sisälle\u0026rdquo; antamalla komento\ndocker exec -it baikal_baikal_1 bash Komennon jälkeen olemme Dockerissa Baïkalin \u0026ldquo;kontin\u0026rdquo; sisällä ja seuraavaksi mennään hakemistoon `/var/www/baikal/` sekä tarkistetaan hakemistojen käyttöoikeus komennolla ls -l. Tällä komennolla saamme näkyviin käyttöoikeudet, jotka minulla ovat alla olevan mukaiset eli config -hakemistossa on root -käyttöoikeudet, jotka pitää muuttaa\nKäyttöoikeudet saadaan muutettua oikeaksi komennolla\nchmod -R nginx:nginx config\nNyt meillä pitäisi olla käyttöoikeudet asetettuna oikein kuten alla näkyy\nSeuraavaksi poistutaan \u0026ldquo;kontista\u0026rdquo; komennolla exit ja käynnistetään Baïkal uudestaan komennolla docker-compose up -d.\nBaïkalin asetusvelho Link to heading Tämän jälkeen, kun avaamme uudestaan selaimella sivuston x.x.x.x:5232, niin meille pitäisi avautua alla olevan mukainen ikkuna\nSeuraavaksi asetetaan aikavyöhyke oikeaksi, asetetaan admin -käyttäjän salasana ja tallennetaan muutokset. Tämän jälkeen avautuu uusi ikkuna\nMikäli näkyviin tulee alla olevan näköinen virheilmoitus, niin Specific -hakemistosta puuttuu db -hakemisto, joka meidän tulee vielä luoda\nEli palaamme takaisin \u0026ldquo;konttiin\u0026rdquo; komennolla docker exec -it baikal_baikal_1 bash, jossa luodaan hakemistoon /var/www/baikal/Specific uusi hakemisto db sekä annetaan hakemistolle oikeat käyttöoikeudet eli\ncd /var/www/baikal/Specific mkdir db chown -R nginx:nginx db Lopuksi poistutaan \u0026ldquo;kontista\u0026rdquo; komennolla exit ja päivitetään selaimen ikkuna. Nyt kaikki pitäisi olla kunnossa ja pääsemme jatkamaan eteenpäin\nEli seuraavaksi painetaan nappia \u0026ldquo;Start using Baïkal\u0026rdquo; ja kirjaudutaan admin -tunnuksilla sisään\nKirjautumisen jälkeen avautuu näkymä\nKohdassa \u0026ldquo;Users and resources\u0026rdquo; luodaan käyttäjät\nKäyttäjän luomisen jälkeen meille on luotuna oletus -kalenteri ja -osoitekirja. Huom! myös sähköpostiosoite tarvitsee antaa käyttäjätietoja luodessa.\nNyt meillä on Baïkal -kalenteripalvelin käytössä ja viimeiseksi tehdään vielä muutokset Caddy -webserverille, jotta saadaan suojattu yhteys kalenteripalvelimeen.\nCaddyn reverse proxy asetukset Link to heading Caddyn asetukset tehdään asetustiedostoon /etc/caddy/Caddyfile ja lisätään sinne alla olevat rivit, joilla ohjataan liikenne kalenteripalvelimelle. Tämä IP-osoite x.x.x.x on sen tietokoneen sisäverkon IP-osoite, jolle Baïkal -kalenteripalvelin on asennettu ja esimerkki.fi on se web-sivuston osoite, joka luotiin Caddyn asennuksen yhteydessä.\n#Baikal kalenteri esimerkki.fi:5232 { reverse_proxy x.x.x.x:5232 } Seuraavaksi käynnistetään vielä Caddy uudestaan eli ajetaan komento\nsudo systemctl restart caddy Eli nyt kun avaamme nettiselaimessa osoitteen https://esimerkki.fi:5232, niin meille avautuu suojattu https -yhteys Baïkal -kalenteripalvelimen kirjautumisikkunaan. Kalenterin ja osoitekirjan osoitteen saan näkymään \u0026ldquo;info\u0026rdquo; -näppäimesta, kun avaa käyttäjän tiedot. Yleensä osoite on muotoa https://esimerkki.fi:5232/dav.php/calendars/\u0026lt;kalenterin nimi\u0026gt;/default.\n","tags":["baikal","caddy","caldav","cardav","debian","docker-compose","linux","webdav"], "section": "posts"},{"date":"1661040000", "url":"https://eddyshomepages.github.io/posts/home-assistantin-asennus-docker-composen-avulla/", "title":"Home Assistantin asennus Docker-Composen avulla", "summary":"Seuraavaksi päästään käsiksi yhteen lempiaiheistani eli kotiautomaatiojärjestelmät ja Home Assistant. Minulla itselläni on Home Assistant asennettuna Raspberry Pi 4 -tietokoneelle siten, että tietokoneessa on käyttöjärjestelmänä RaspberryPiOS ja Home Assistant on asennettu Docker-Composen avulla.\nDocker -asennuksessa on mm. se haittapuoli, että nämä lisäosat eivät ole käytössä samalla tavalla kuin Home Assistantin omassa käyttöjärjestelmässä. Samoin myös varmuuskopiointi ei toimi samalla tavalla, mutta näihinkin löytyy kyllä kuitenkin ratkaisut. Mielestäni etuna Docker-asennuksessa on kuitenkin se, että tietokoneen resursseja voi helpommin käyttää myös muuhunkin.", "content":"Seuraavaksi päästään käsiksi yhteen lempiaiheistani eli kotiautomaatiojärjestelmät ja Home Assistant. Minulla itselläni on Home Assistant asennettuna Raspberry Pi 4 -tietokoneelle siten, että tietokoneessa on käyttöjärjestelmänä RaspberryPiOS ja Home Assistant on asennettu Docker-Composen avulla.\nDocker -asennuksessa on mm. se haittapuoli, että nämä lisäosat eivät ole käytössä samalla tavalla kuin Home Assistantin omassa käyttöjärjestelmässä. Samoin myös varmuuskopiointi ei toimi samalla tavalla, mutta näihinkin löytyy kyllä kuitenkin ratkaisut. Mielestäni etuna Docker-asennuksessa on kuitenkin se, että tietokoneen resursseja voi helpommin käyttää myös muuhunkin.\nTässä kirjoituksessa käydään siis läpi Home Assistantin asennus Docker-Composen avulla. Itselläni ei ollut oikeastaan juurikaan kokemusta Dockerista tai Docker-Composesta ennen tätä asennusta, mutta sen jälkeen olen asentanut Docker-Composen avulla mm. Baikal -kalenteripalvelimen, Matrix -pikaviestipalvelimen, Dublicati -varmuuskopiointi -palvelimen sekä Home Assistantille Z-Wave lisäosan ZWavejs2Mqtt:n avulla.\nNykyään pyrin asentamaan ohjelmistot Docker-Composen avulla, mikäli se vain on mahdollista. Vanhoja asennuksia kuten Mosquitto -palvelin tai MariaDB -palvelin, jotka ovat asennettu ohjelmistolähteistä, en ole lähtenyt muuttamaan, mutta nämäkin pystyy asentamaan myös Docker-Composen avulla. Käydään läpi näitä muita asennuksia sitten erikseen seuraavissa kirjoituksessa.\nHome Assistantin asennus Link to heading Ennen Home Assistantin asennusta meillä pitäisi olla asennettuna Docker ja Docker-Compose. Näiden asennuksesta kirjoitin jokin aika sitten kirjoituksessa \u0026ldquo;Dockerin ja Docker-Composen asennus RaspberryPiOS -käyttöjärjestelmään\u0026rdquo;, josta voi tarvittaessa kerrata asennusta.\nAsennus on aika selkeä, aluksi täytyy luoda hakemisto, johon nämä Docker-Composen asetus- ym. tiedostot tallennetaan. Tämä voi sijaita esim. kotihakemistossa ja tässä asennuksessa luodaan hakemisto nimeltään docker-data kotihakemistoon eli komento menee\nmkdir docker-data\nSeuraavaksi luodaan docker-data -hakemistoon kansio homeassistant, jonne Docker-Compose tallentaa tarvittavat tiedostot eli\ncd docker-data\nmkdir homeassistant\nSitten siirrytään kansioon\ncd homeassistant\nTämän jälkeen luodaan homeassistant -kansioon Docker-Composen asetustiedosto eli\nnano docker-compose.yaml\nTähän tiedostoon kopioidaan alla olevat tiedot eli\nversion: \u0026#39;3\u0026#39; services: homeassistant: container_name: homeassistant image: \u0026#34;ghcr.io/home-assistant/home-assistant:stable\u0026#34; volumes: - /home/pi/docker-data/homeassistant/:/config - /etc/localtime:/etc/localtime:ro restart: unless-stopped privileged: true network_mode: host Tämän jälkeen ajetaan vielä komento\ndocker-compose up -d\nKun Docker-Compose on hakenut tarvittavat paketit ja on käynnistynyt, niin sen jälkeen meillä on asennus valmiina. Tämän jälkeen jatketaan asennusta nettiselaimen kautta eli mennään osoitteeseen http://x.x.x.x:8123, jossa x.x.x.x on oman tietokoneesi IP-osoite, johon Home Assistant on asennettu.\nMikäli sinulla on käytössä Z-Wave tai Zigbee -mokkula, täytyy docker-compose.yaml -tiedostoon lisätä vielä seuraavat rivit eli\nversion: \u0026#39;3\u0026#39; services: homeassistant: ... devices: - /dev/ttyUSB0:/dev/ttyUSB0 Home Assistantin päivitys hoituu jatkossa ajamalla komento docker-compose pull ja docker-compose up -d tässä samassa hakemistossa, jossa sijaitsee docker-compose.yaml -tiedosto.\n","tags":["docker","docker-compose","homeassistant","kotiautomaatio","zwave","zigbee2mqtt","zwavejs2mqtt"], "section": "posts"},{"date":"1660608000", "url":"https://eddyshomepages.github.io/posts/wordpress-org-php-ja-mariadb-asennus-caddy-web-serverille/", "title":"WordPress.org, PHP ja MariaDB asennus Caddy web-serverille", "summary":"Edellisessä kirjoituksessa asensimme Caddy web-serveriä RaspberryPiOS -käyttöjärjestelmälle ja nyt olisi tarkoitus jatkaa asennusta asentamalla ja konffaamalla seuraavaksi WordPress.org sekä siihen liittyen asentaa myös PHP ja MariaDB -palvelin.\nPHP:n asennus Link to heading Aluksi asennetaan PHP ja me asennamme siitä version 8.1. Ensimmäiseksi päivitetään ohjelmistolähteet ja asennetaan tarvittaessa päivitykset komennolla\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade PHP:n voisi asentaa myös suoraan ohjelmistolähteistä, mutta tämä on vanhempi versio 7.4. Me käytämme kuitenkin DEB.", "content":"Edellisessä kirjoituksessa asensimme Caddy web-serveriä RaspberryPiOS -käyttöjärjestelmälle ja nyt olisi tarkoitus jatkaa asennusta asentamalla ja konffaamalla seuraavaksi WordPress.org sekä siihen liittyen asentaa myös PHP ja MariaDB -palvelin.\nPHP:n asennus Link to heading Aluksi asennetaan PHP ja me asennamme siitä version 8.1. Ensimmäiseksi päivitetään ohjelmistolähteet ja asennetaan tarvittaessa päivitykset komennolla\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade PHP:n voisi asentaa myös suoraan ohjelmistolähteistä, mutta tämä on vanhempi versio 7.4. Me käytämme kuitenkin DEB.SURY.ORG -sivuston ohjelmalähteitä, josta saamme asennettua uudemman version PHP:stä.\nOhjelmistolähteiden päivityksen jälkeen asennetaan tarvittavat lisäpaketit ennen PHP:n asennusta eli ajetaan komento\nsudo apt install lsb-release ca-certificates apt-transport-https software-properties-common gnupg2 Tämän jälkeen lisätään DEB.SURY.ORG -sivuston ohjelmalähteet\necho \u0026#34;deb https://packages.sury.org/php/ $(lsb_release -sc) main\u0026#34; | sudo tee /etc/apt/sources.list.d/sury-php.list Seuraavaksi haetaan pakettien PGP -allekirjoitusavain ja lisätään se järjestelmään\nwget -qO - https://packages.sury.org/php/apt.gpg | sudo apt-key add - Ennen asennusta päivitetään vielä pakettilähteet ajamalla komento sudo apt update, josta myös näemme, että ohjelmistolähteet ovat asentuneet kunnolla.\nSeuraavaksi asennamme PHP:n version 8.1. ja WordPress.org:in tarvitsemat lisäpaketit komennolla\nsudo apt install php8.1 php8.1-cli php8.1-fpm php8.1-mysql php8.1-zip php8.1-dev php8.1-gd php8.1-mcrypt php8.1-mbstring php8.1-curl php8.1-xml php8.1-bcmath php8.1-intl php8.1-imagick php-pear Mikäli järjestelmä tarjoaa vielä muita paketteja, niin ne voi myös asentaa. PHP:n asennetun version voi tarkistaa komennolla\nphp -v MariaDB:n asennus Link to heading MariaDB-palvelimen asennus suoritetaan komennolla\nsudo apt install mariadb-server` Seuraavaksi käynnistämme MariaDB-palvelimen ja asetamme sen käynnistymään myös koneen käynnistyksen yhteydessä\nsudo systemctl start mariadb sudo systemctl enable mariadb Seuraavaksi ajamme komennon sudo mysql_secure_installation ja asetamme root -käyttäjälle salasanan.\nSeuraaviin kysymyksiin voimme vastata kyllä eli\npoistetaanko anonyymit käyttäjät\nestetäänkö root -käyttäjän etäkirjautuminen\npoistetaanko testi-tietokanta sekä oikeudet tietokantaan\nladataanko käyttöoikeus-taulukko uudestaan\nTämän jälkeen meillä on MariaDB asennettu ja otettu käyttöön.\nMariaDB tietokantojen luonti ja WordPressin asennus Link to heading Seuraavaksi jatkamme WordPress.org:in asennukseen, joka aloitetaan luomalla MariaDB-serverille tarvittavat käyttäjät ja tietokannat eli ajamme komennon\nmysql -u root -p Aluksi luomme tietokannan, jonka voi nimetä kuten haluat\nCREATE DATABASE wordpress; Seuraavaksi luodaan käyttäjä ja annetaan tarvittavat käyttöoikeudet eli kohtiin 'kayttäja' ja 'salasana\u0026rsquo; voit antaa haluamasi käyttäjätunnuksen ja salasanan, mutta ilman skandinaavisia kirjaimia.\nGRANT ALL PRIVILEGES on wordpress.* TO \u0026#39;kayttajä\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;salasana\u0026#39;; Seuraavaksi päivitetään tietokannan käyttöoikeudet\nFLUSH PRIVILEGES; Ja poistutaan MariaDB-serveriltä komennolla\nexit; Seuraavaksi mennään hakemistoon /tmp komennolla cd /tmp ja ladataan WordPress.org:in uusin versio eli\nwget https://wordpress.org/latest.zip Puretaan paketti komennolla\nunzip latest.zip Siirretään purettu kansio Caddy web-serverin asennuksen yhteydessä luotuun hakemistoon /var/www/html/esimerkki.fi komennolla\nsudo mv wordpress/ /var/www/html/esimerkki.fi/ Asetetaan vielä kansion käyttäjäoikeudet kuntoon\nsudo chown -R www-data:www-data /var/www/html/esimerkki.fi/wordpress/ sudo chmod 0755 /var/www/html/esimerkki.fi/wordpress/ Siirrytään WordPressin hakemistoon\ncd /var/www/html/esimerkki.fi/wordpress/ Seuraavaksi konfiguroidaan tietokannan tiedot\nmv wp-config-sample.php wp-config.php sudo nano wp-config.php Tehdään tiedostoon seuraavat muutokset\ndefine( \u0026#39;DB_NAME\u0026#39;, \u0026#39;wordpress\u0026#39; ); define( \u0026#39;DB_USER\u0026#39;, \u0026#39;kayttäja\u0026#39; ); define( \u0026#39;DB_PASSWORD\u0026#39;, \u0026#39;salasana\u0026#39; ); define( \u0026#39;DB_HOST\u0026#39;, \u0026#39;localhost\u0026#39; ); define( \u0026#39;DB_CHARSET\u0026#39;, \u0026#39;utf8\u0026#39; ); define( \u0026#39;DB_COLLATE\u0026#39;, \u0026#39;\u0026#39; ); Seuraavaksi käydään sivustolla [https://api.wordpress.org/secret-key/1.1/salt/](https://api.wordpress.org/secret-key/1.1/salt/) , josta saadaan satunnaisesti luodut tiedot kohtiin\ndefine( \u0026#39;AUTH_KEY\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;SECURE_AUTH_KEY\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;LOGGED_IN_KEY\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;NONCE_KEY\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;AUTH_SALT\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;SECURE_AUTH_SALT\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;LOGGED_IN_SALT\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;NONCE_SALT\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); Viimeisenä tehdään vielä muutokset Caddy web-serverin asetustiedostoon eli avataan Caddyfile -tiedosto ja muokataan se kuvan mukaiseksi\nKuva: /etc/caddy/Caddyfile\nVielä viimeiseksi ennen WordPressin configuroimista käynnistetään Caddy uudestaan eli\nsudo systemctl restart caddy WordPress.org kielen valinta, käyttäjätunnus ja salasana Link to heading Seuraavaksi avaamme internet-sivuston, joka luotiin aikaisemmin ja suoritamme WordPressin konfiguroimisen loppuun sitä kautta eli https://esimerkki.fi/ (tai mikä sinun sivuston nimi oli).\nSivuston avaamisen jälkeen pitäisi avautua admin -ikkuna, jossa aluksi valitaan WordPressin asennuskieli ja sen jälkeen asetetaan käyttäjätunnus sekä salasana.\nNyt meillä pitäisi olla asennettuna ja konffattuna WordPress.org, PHP8.1 ja MariaDB eli seuraavaksi tuleekin sitten muokata sivusto omanlaiseksi ja asentaa tarvittavia lisäosia.\nItse otin aluksi käyttöön turvallisuuteen liittyviä lisäosia kuten kaksi-vaiheinen tunnistus, varmuuskopiointi sekä myös lisäosa, jolla voi turvautua brute-force hyökkäyksiä vastaan. Tämän jälkeen pystyykin sitten keskittymään muuhun sisältöön, asetuksiin ja lisäosiin, kun tietää, että sivusto on turvassa.\n","tags":["caddy","mariadb","php","raspberrypios","wordpress.org"], "section": "posts"},{"date":"1660003200", "url":"https://eddyshomepages.github.io/posts/caddy-web-serverin-asennus-raspberrypios-kayttojarjestelmaan/", "title":"Caddy web-serverin asennus RaspberryPiOS -käyttöjärjestelmään", "summary":"Tässä blogissa on tarkoitus käydä läpi Caddy web-serverin asennus RaspberryPiOS -käyttöjärjestelmään, josta minulla on käytössä Bullseye -versio (Debian 11).\nMyös tämän sivuston pohjana käytetään Caddy web-serveriä ja syy miksi päädyin käyttämään Caddya, on sen keveys ja helppo konfigurointi. Minulla on myös jonkin verran kokemusta Apache2:sta, joka minulla oli käytössä, kun aikoinani asentelin OwnCloud/Nextcloud -palvelimia omaan käyttööni, mutta Apache2:een verrattuna Caddy on mielestäni huomattavasti helpompi konffata.\nCaddy web-server on myös siitä vekkuli, että se tarjoaa automaattisesti sertifikaatin joko Let\u0026rsquo;s Encrypt:in tai ZeroSSL:n kautta sekä asettaa https-yhteyden oletuksena päälle ja ohjaa liikenteen automaattisesti portista 80 porttiin 443 eli suojattuun https-yhteyteen.", "content":"Tässä blogissa on tarkoitus käydä läpi Caddy web-serverin asennus RaspberryPiOS -käyttöjärjestelmään, josta minulla on käytössä Bullseye -versio (Debian 11).\nMyös tämän sivuston pohjana käytetään Caddy web-serveriä ja syy miksi päädyin käyttämään Caddya, on sen keveys ja helppo konfigurointi. Minulla on myös jonkin verran kokemusta Apache2:sta, joka minulla oli käytössä, kun aikoinani asentelin OwnCloud/Nextcloud -palvelimia omaan käyttööni, mutta Apache2:een verrattuna Caddy on mielestäni huomattavasti helpompi konffata.\nCaddy web-server on myös siitä vekkuli, että se tarjoaa automaattisesti sertifikaatin joko Let\u0026rsquo;s Encrypt:in tai ZeroSSL:n kautta sekä asettaa https-yhteyden oletuksena päälle ja ohjaa liikenteen automaattisesti portista 80 porttiin 443 eli suojattuun https-yhteyteen. Lisäksi Caddy huolehtii myös siitä, että sertifikaatti pysyy automaattisesti ajan tasalla. Toimiakseen tämä tarvitsee nettiyhteydeltä sen, että portit 80 ja 443 ovat auki eli esim. Elisan yhteydellä tämä toimii, mutta DNA:lla ovat nämä portit operaattorin toimesta suljettuna ja niitä ei saa mitenkään auki ellei sitten käytä IPv6-protokollaa.\nJotta sitten saat ohjattua liikenteen vielä oikeaan osoitteeseen, tarvitsee käyttää dynaamista DNS-palvelua, joka minulla on kotimainen dy.fi DNS-palvelu. Tämä palvelu on ilmainen ja on tarkoitettu vain suomalaisille käyttäjille.\nCaddyn asennus Link to heading Caddyn asennus onnistuu Debian 11 Bullseye -versiolle (ohje toimii myös RaspberryPiOS ja Armbian Bullseye -versioilla) tehdyn ohjeen mukaisesti seuraavasti\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https curl -1sLf \u0026#39;https://dl.cloudsmith.io/public/caddy/stable/gpg.key\u0026#39; | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg curl -1sLf \u0026#39;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt\u0026#39; | sudo tee /etc/apt/sources.list.d/caddy-stable.list sudo apt update sudo apt install caddy Tämän jälkeen meillä on Caddy asennettuna ja käynnistettynä. Caddy web-serverin tilan voi tarkistaa komennolla\nsudo systemctl status caddy Em. komennon jälkeen pitäisi tulla jotakuinkin alla olevan kuvan mukainen ilmoitus, josta näemme, että Caddy on käynnissä.\nJos avaamme selaimella sivuston http://x.x.x.x (x.x.x.x on koneen IP-osoite, johon Caddy on asennettu), niin näemme sivun\nKuva: Caddy toimii!\nTämä näkymä on selaimessa oletuksena Caddyn asennuksen jälkeen ja kertoo siitä, että asennus on onnistunut.\nPalomuurin asennus ja konffaus Link to heading Tässä vaiheessa viimeistään on myös hyvä tarkastaa ja tarvittaessa asentaa palomuuri, mikäli sitä ei ole asennettu, eli sen asennus tapahtuu komennolla\nsudo apt install ufw Ennen kuin palomuuri otetaan käyttöön, avataan siitä tarvittavat portit eli\nsudo ufw allow 22 sudo ufw allow http \u0026amp;\u0026amp; sudo ufw allow https Nämä avatut portit ovat 22 (ssh), 80 (http) ja 443 (https). Portti 22 avattiin sen vuoksi, että kun palomuuri otetaan käyttöön, niin ssh-yhteys ei katkea. Palomuuri saadaan käyttöön komennolla\nsudo ufw enable Palomuurin tila saadaan tarkastettua komemmolla\nsudo ufw status Caddyn konffaus Link to heading Seuraavaksi lähdemme luomaan omaa nettisivustoa ja aluksi luodaan hakemisto, johon web-serverin tiedostot tallennetaan eli tässä tapauksessa meillä olisi käytössä web-osoite www.esimerkki.fi. Nimen voit valita sen mukaan, mikä sinulle tulee oman sivuston osoitteeksi.\nsudo mkdir /var/www/html/esimerkki.fi Luodaan testisivusto index.html edellä luotuun hakemistoon\nsudo nano /var/www/html/esimerkki.fi/index.html Ja kirjoitetaan tiedostoon alla oleva teksti ja tallennetaan tiedosto\n\u0026lt;!doctype html\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;Caddy Test Page\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\u0026lt;h1\u0026gt;Hello, World!\u0026lt;/h1\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt; Tämän jälkeen muutetaan vielä hakemiston käyttöoikeudet oikeaksi komennolla\nsudo chown -R www-data:www-data /var/www/html/esimerkki.fi Seuraavaksi konfiguroidaan Caddyn konffitiedosto\nsudo nano /etc/caddy/Caddyfile Tiedostoa muokataan muuttamalla riviä root * /usr/share/caddy muotoon root * /var/www/html/esimerkki.fi\nTallennuksen jälkeen käynnistetään vielä Caddy uudestaan eli\nsudo systemctl restart caddy Seuraavaksi kun avaamme taas selaimessa sivuston http://x.x.x.x , niin näemme uuden aikaisemmin luodun sivuston.\nEli nyt meillä on Caddy asennettuna ja konffattuna avaamaan oman aiemmin luotu nettisivu. Seuraavaksi lähdemme asentamaan WordPress.org -blogialustaa, mutta tästä tarkemmin sitten seuraavassa kirjoituksessa.\n","tags":["apache2","bullseye","caddy","debian","dna","dy.fi","elisa","letsencrypt","nextcloud","owncloud","raspberrypios","wordpress.org","zerossl"], "section": "posts"},{"date":"1659398400", "url":"https://eddyshomepages.github.io/posts/dockerin-ja-docker-composen-asennus-raspberrypios-kayttojarjestelmaan/", "title":"Dockerin ja Docker-Composen asennus RaspberryPiOS -käyttöjärjestelmään", "summary":"Olen alkanut itse nyt enemmän ja enemmän käyttämään Dockeria ja Docker-Composea ja niiden avulla olen mm. asentanut HomeAssistantin, Matrix Synapse -palvelimen, Baikal -kalenteripalvelimen sekä Duplicati -varmuuskopiopalvelimen käyttöön, mutta palataan näihin erikseen toisessa kirjoituksessa ja käydään tässä vähän läpi Dockerin ja Docker-Composen asennusta RaspberryPiOS -käyttöjärjestelmään.\nLähtökohtaisesti meillä on siis valmiiksi asennettuna RaspberryPiOS -käyttöjärjestelmä RaspberryPi -tietokoneelle, jonka asennusta en tässä käy läpi tarkemmin, koska asentamiseen löytyvät hyvät ohjeet RaspberryPi -sivustolta.\nEnnen Dockerin asennusta kuitenkin asennetaan viimeisimmät päivitykset käyttöjärjestelmään seuraavalla komennolla", "content":"Olen alkanut itse nyt enemmän ja enemmän käyttämään Dockeria ja Docker-Composea ja niiden avulla olen mm. asentanut HomeAssistantin, Matrix Synapse -palvelimen, Baikal -kalenteripalvelimen sekä Duplicati -varmuuskopiopalvelimen käyttöön, mutta palataan näihin erikseen toisessa kirjoituksessa ja käydään tässä vähän läpi Dockerin ja Docker-Composen asennusta RaspberryPiOS -käyttöjärjestelmään.\nLähtökohtaisesti meillä on siis valmiiksi asennettuna RaspberryPiOS -käyttöjärjestelmä RaspberryPi -tietokoneelle, jonka asennusta en tässä käy läpi tarkemmin, koska asentamiseen löytyvät hyvät ohjeet RaspberryPi -sivustolta.\nEnnen Dockerin asennusta kuitenkin asennetaan viimeisimmät päivitykset käyttöjärjestelmään seuraavalla komennolla\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade Dockerin asennus aloitetaan hakemalla asennusskripti komennolla\ncurl -fsSL https://get.docker.com -o get-docker.sh Seuraavaksi asennetaan Docker suorittamalla asennusskripti\nsudo sh get-docker.sh Dockerin asennuksen jälkeen lisätään RaspberryPiOS -käyttöjärjestelmän oletuskäyttäjä pi ryhmään docker komennolla\nsudo usermod -aG docker pi Dockerin versio voidaan tarkastaa komennolla\ndocker version Sekä tarkemmat tiedot Dockerista komennolla\ndocker info Paras tapa tarkastaa, että Docker on asentunut kunnolla, on asentaa hello-world -kontti komennolla\ndocker run hello-world Mikäli hello-world -kontti asentui oikein ilman virheilmoituksia, niin tällöin meillä on kaikki valmiina Docker-Composen asennusta varten.\nDocker Composen asennus Link to heading Docker Compose voidaan asentaa eri tavoin, mutta tässä tapauksessa asennamme sen pip3 avulla. Tämä vaatii, että sinulla on asennettuna python3 sekä lisäksi myös python3-pip -paketit. Tätä varten tarvittavat paketit saadaan asennettua komennolla\nsudo apt-get install libffi-dev libssl-dev python3-dev python3 python3-pip -y Docker Compose saadaan asennettua komennolla\npip3 install docker-compose Docker-Composen asennettu versio voidaan tarkastaa komennolla\ndocker-compose --version Ja lopuksi on vielä tärkeää ajaa komento\nsudo systemctl enable docker Tämä varmistaa, että Docker käynnistyy automaattisesti myös sen jälkeen, kun kone käynnistetään uudelleen.\n","tags":["baikal","docker","docker-compose","duplicati","homeassistant","matrix-synapse","raspberrypios"], "section": "posts"},{"date":"1657929600", "url":"https://eddyshomepages.github.io/posts/uuden-upsin-kayttoonotto-ja-nutin-asennuksen-kertaus/", "title":"Uuden UPS:in käyttöönotto ja NUT:in asennuksen kertaus", "summary":"Tuli jokin aika sitten hankittua uusi GreenCell:in UPS vanhan tilalle, joka on tarkoitus viedä mökille suojaamaan Home Assistant (asennettu RaspberryPi -pikkutietokoneelle) sähkökatkojen varalta, joita siellä tuntuu vähän väliä olevan.\nEnsimmäiseksi uuden UPS:in on annettu latautua täyteen ennen käyttöön ottoa. Minulla on jo aikaisemmin asennettu palvelinkoneelle NUT-server (Network UPS Tools) hoitamaan kommunikointia UPS:in kanssa, mutta nyt täytyy päivittää sen asetukset vastaamaan uutta UPS:ia. Samalla voidaan kerrata NUT-serverin asennus ja konfigurointi alusta alkaen.", "content":"Tuli jokin aika sitten hankittua uusi GreenCell:in UPS vanhan tilalle, joka on tarkoitus viedä mökille suojaamaan Home Assistant (asennettu RaspberryPi -pikkutietokoneelle) sähkökatkojen varalta, joita siellä tuntuu vähän väliä olevan.\nEnsimmäiseksi uuden UPS:in on annettu latautua täyteen ennen käyttöön ottoa. Minulla on jo aikaisemmin asennettu palvelinkoneelle NUT-server (Network UPS Tools) hoitamaan kommunikointia UPS:in kanssa, mutta nyt täytyy päivittää sen asetukset vastaamaan uutta UPS:ia. Samalla voidaan kerrata NUT-serverin asennus ja konfigurointi alusta alkaen.\nMinulla on käytössä palvelinkoneella Debian-käyttöjärjestelmä eli NUT-serveri saadaan asennettua helposti ohjelmistolähteiden kautta.\nAluksi ajetaan kuitenkin komento\nsudo apt update Seuraavaksi asennetaan tarvittavat tiedostot eli ajetaan komento\nsudo apt install nut nut-server nut-client Asennuksen jälkeen pitäisi hakemistosta /etc/nut löytyä alla olevat tiedostot, joita meidän täytyy muokata.\nEnsimmäiseksi muokataan tiedostoa ups.conf komennolla sudo nano /etc/nut/ups.conf ja laitetaan tiedoston loppuun tiedot UPS:sta. Itselläni on GreenCell:n UPS, joten minulla tiedosto näyttää seuraavalta:\nHakasulkuihin laitetaan UPS:n nimi, jotta NUT tietää millä nimellä se tunnistaa UPS:n. Ajurina Green Cellin UPS:ssa on yleensä blazer_usb, mutta vanhassa UPS:ssa ajurina oli usbhid-ups.\nSeuraavaksi muokataan tiedostoa upsmon.conf komennolla sudo nano /etc/nut/upsmon.conf ja laitetaan sinne tarvittavat tiedot käyttäjistä. Käyttäjiä ovat ns. master -käyttäjä UPS:in komentamista varten sekä monitor -käyttäjä UPS:in tilan tarkastamista varten. Kohtaan secret laitetaan jokin vahva salasana. Tästä myös huomataan, miten hakasuluissa ollutta UPS:n nimeä käytetään eli greencell@localhost.\nSeuraavaksi muokataan tiedostoa upsd.conf komennolla sudo nano /etc/nut/upsd.conf ja asetaan tänne tarvittavat tiedot, jotta NUT-server voi toimia verkossa eli osoite ja portti.\nTämän jälkeen muutetaan vielä tiedostoa nut.conf komennolla sudo nano /etc/nut/nut.conf ja määritetään NUT toimimaan serverinä eli\nMuokataan hosts.conf -tiedostoa komennolla sudo nano /etc/nut/hosts.conf lisäämällä sinne\nViimeisesti tehdään vielä tarvittavat muutokset käyttäjiin eli muokataan tiedostoa upsd.users komennolla sudo nano /etc/nut/upsd.users, jotta NUT-serveri ja -asiakas osaavat pitää yhteyttä toisiinsa. Itselläni ne on asetettu seuraavasti eli admin -käyttäjä sekä monitor -käyttäjä\nTämän jälkeen voidaan käynnistää tietokone uudestaan tai antaa seuraavat käskyt:\nsudo upsdrvctl stop sudo upsdrvctl start sudo systemctl restart nut-server sudo systemctl restart nut-client sudo systemctl restart nut-monitor Tämän jälkeen meillä pitäisi sitten olla NUT-server käytössä kommunikoimassa ja ohjaamassa UPS:ia.\nNUT-client asennus Link to heading NUT-server osaa sammuttaa myös verkossa olevat tietokoneet, kun akun varaus on mennyt tarpeeksi alas, mutta tätä varten asiakas-koneisiin tarvitsee asentaa NUT-client sovellus. Tämä tietysti sillä oletuksella, että asiakaskoneet on kytketty samaan UPS:iin.\nItselläni asiakaskoneina ovat kaksi RaspberryPi- ja yksi BananaPi -pikkutietokone. RaspberryPi koneissa on käyttöjärjestelmänä RaspberryPi OS ja BananaPi koneessa Armbian:in Bullseye -versio. Nämä molemmat pohjautuvat Debianiin, joten asennus niille tapahtuu samalla tavoin.\nAluksi ajetaan komento\nsudo apt update Seuraavaksi asennetaan tarvittavat ohjelmistot\nsudo apt install nut-client Seuraavaksi meiltä pitäisi löytyä hakemistosta /etc/nut/ seuraavat tiedostot\nTiedostossa nut.conf muutetaan NUT toimimaan asiakkaana eli muutetaan tiedoston lopussa kohta MODE seuraavanlaiseksi\nTämän jälkeen lisätään tiedostoon upsmon.conf rivi, jotta NUT-client osaa ottaa yhteyttä NUT-serveriin\nEli tässä greencell on UPS:n nimi ja IP-osoite on NUT-serverin osoite. Käyttäjä on monitor -käyttäjä ja tässä tapauksessa upsmonuser. Salasana on sama kuin asetettiin aiemmin NUT-serverin asetuksissa.\nTämän jälkeen käynnistetään kone uudestaan tai annetaan komento\nsudo service restart nut-client Nyt meillä on myös asiakaskone asetettu eli NUT-serveri osaa sammuttaa sen tarvittaessa, jos UPS:in akun varaus laskee liian alas.\n","tags":["armbian","debian","nut","raspberrypios","ups"], "section": "posts"},{"date":"1657670400", "url":"https://eddyshomepages.github.io/posts/mita-olen-vuosien-aikana-puuhaillut/", "title":"Mitä olen vuosien aikana puuhaillut", "summary":"Kertokoon tämä ensimmäinen kirjoitus hiukan siitä, että mitä kaikkea on tullutkaan puuhailtua vuosien varrella.\nEli viimeiset reilut parikymmentä vuotta olen oikestaan enemmän toiminut Linuxin kanssa kuin Windowsin kanssa. Linuxin ensimmäiset asennukset taisivat olla RedHat:in versio 7 ja Slackware Linux:in versio 8. Tämän jälkeen, kun pääsin sisälle Linuxiin, on se ollut pääsääntöisesti käytössä ja Windowsin käyttö ollut enemmän työkäyttöä. Nykyisin opiskelun myötä on tullut syvennyttyä paremmin myös Windowsin maailmaan ja sekin on nykyisellään hyvin hallussa.", "content":"Kertokoon tämä ensimmäinen kirjoitus hiukan siitä, että mitä kaikkea on tullutkaan puuhailtua vuosien varrella.\nEli viimeiset reilut parikymmentä vuotta olen oikestaan enemmän toiminut Linuxin kanssa kuin Windowsin kanssa. Linuxin ensimmäiset asennukset taisivat olla RedHat:in versio 7 ja Slackware Linux:in versio 8. Tämän jälkeen, kun pääsin sisälle Linuxiin, on se ollut pääsääntöisesti käytössä ja Windowsin käyttö ollut enemmän työkäyttöä. Nykyisin opiskelun myötä on tullut syvennyttyä paremmin myös Windowsin maailmaan ja sekin on nykyisellään hyvin hallussa.\nOmaan käyttöön on nykyisellään vakiintunut Debian ja sen eri versiot. Kannettavalle tietokoneelle on asennettu Linux Mint Debian Edition ja palvelinkoneella on puhdas versio Debian:ista, joka on tosin vielä vanhempi Buster. Näille pikkutietokoneille, kuten RaspberryPi ja BananaPi on myös asennettu Debianin johdannaiset Raspberry Pi OS ja Armbian.\nLinuxin kanssa on tullut opeteltua ja asennettua jos jonkinlaista, kuten tämä palvelinkone, joka toimii mm. varmuuskopio-, DigiTV- ja kameravalvonnan palvelimena. RaspberryPi -koneita on käytössä mm. kotiautomaatiojärjestelmän pohjana, kalenteripalvelimena ja pikaviestipalvelimena.\nPalvelinkoneen käyttöjärjestelmänä on Debian:in Buster-versio, jota päivitän ja säädän SSH:n välityksellä päätteessä samoin kuin myös nämä RaspberryPi ja BananaPi -pikkutietokoneet. Palvelimella käyttöjärjestelmä on asennettu omalla kiintolevylle ja tallennustilana on neljä 1 Tt kiintolevyä, jotka on asennettu RAID5 -pakkaan. Tällä on saatu tallennustilaa n. 3Tt ja lisäksi parempi vikasietoisuus eli yksi kiintolevy neljästä voi hajota ja tiedot ovat vielä kuitenkin palautettavissa.\nPalvelinkoneen, puhelimen ja kannettavan tietokoneen välinen tiedostojen synkronointi hoituu näppärästi Syncthing:in avulla, josta löytyy lähdekoodin lisäksi ohjelmistoversiot Androidille, Windowsille, Macille, Linux:lle, eri BSD-pohjaisille käyttiksille sekä myös itseä lähellä sydäntä olevalle SailfishOS-käyttöjärjestelmälle. Palvelinkone toimii myös OpenVPN -palvelimena, johon etäyhteys hoituu turvallisesti puhelimella tai kannettavalla tietokoneella.\nDigiTV-palvelimen ohjelmistoksi on asennettu Tvheadend, johon on kytketty 3 kpl usb DigiTV -tikkuja. Tällä pystyy tallentamaan ainakin kolmea kanavaa saman aikaisesti ja lisäksi pystyy etänä ajastamaan ja katsomaan tallennuksia.\nKameravalvonnan ohjelmistona toimii AgentDVR, johon on kytketty kaksi kpl kameroita. Nämä on yhdistetty myös kotiautomaatiojärjestelmään, joka toimii samalla myös hälytysjärjestelmänä.\nNämä kotisivut toimivat RaspberryPi 2 -tietokoneella, jonka käyttöjärjestelmänä on Raspberry Pi OS (aiemmin tunnettiin nimellä Raspbian), web-palvelimena Caddy ja blogialustana Wordpress.org. Web-palvelimen ohjelmistoksi valikoitui Caddy -server, joka on helppo asentaa ja se ei vie paljoa palvelimen resursseja. Caddy on myös helppokäyttöinen ja se asentaa sekä päivittää automaattisesti myös sertifikaatin omalle sivustolle. Lisäksi Caddy toimii myös ns. reverse proxynä eli sen kautta saan ohjattua verkkoliikenteen omalle kalenteripalvelimelle, jolloin sama sertifikaatti toimii myös kalenterin kanssa.\nMuina \u0026ldquo;projekteina\u0026rdquo; olen tehnyt Jabber/XMPP -pikaviestipalvelimen raspin päälle, jonka ohjelmistona käytin Prosody IM:iä. Prosody on keveytensä lisäksi myös helppo asentaa ja ottaa käyttöön. Jabber/XMPP -pikaviestiprotokollalle on saatavilla paljon erilaisia pikaviestisovelluksia, joista itse käytin Conversation:ia, jossa on olemassa valmiina viestien suojaus OMEMO -protokollaa käyttäen. Nykyisin Jabber/XMPP on jo jäänyt pois käytöstä ja tilalle on tullut Matrix -pikaviestit. Palvelimen -ohjelmistona käytän Synapse -palvelin ohjelmistoa, johon löytyy hyvät ohjeet asennukseen. Eli Matrix:in kautta minua voi tavoitella @esa:fasted.dy.fi.\nKotiautomaatio järjestelmien osalta puuhailin aiemmin paljon Domoticz:in kanssa, mutta nyttemmin käyttöön on vakiintunut Home Assistant. Joskus on tullut myös kokeiltua openHAB:ia, mutta sen käyttämisen koin jotenkin kömpelöksi ja hankalaksi. Nykyinen kokoonpano on Raspberry Pi 4, johon on kytketty mSata-massamuisti tallennustilaksi. Käyttöjärjestelmänä on Raspberry Pi OS ja Home Assistant on asennettu Docker Compose:n päälle \u0026ldquo;konttiin\u0026rdquo;. Tällä on haettu sitä, että pystyn paremmin muokkaamaan myös käyttöjärjestelmää enkä ole sidoksissa Home Assistant:n käyttöjärjestelmään.\nNykyiseen kotiautomaatio -kokoonpanoon on kytketty Zigbee -palikoita Zigbee2MQTT:n avulla ja 433MHz-taajuudella toimivia antureita RFXCOM:n avulla, kaksi kappaletta RuuviTag -antureita, jotka lähettävät RuuviTag-Discovery:n avulla tiedot MQTT-protokollaa käyttäen Home Assistantiin. Lisäksi on myös useita NodeMCU ja Wemos -pohjaisia kehityskortteja, joille on asennettuna ESPHome -firmware. Zigbee2MQTT ja RFXCOM on asennettu erilliselle RaspberryPi -koneelle, jotta kokoonpanon muuttuessa ei tarvitse parittaa kaikkia laitteita uudestaan. Zigbee2MQTT lähettää niin ikään tiedot Home Assistant:n MQTT -protokollaa käyttäen ja RFXCOM on kytketty käyttäen ser2net (serial to network) -ohjelmaa, joka mahdollistaa erilliselle tietokoneelle usb-väylän kautta kytketyn laitteen jakamisen verkon yli. Z-Wave -palikat on liitetty Home Assistantiin ZWaveJS2MQTT:n avulla.\n","tags":["agendvr","armbian","bananapi","caddy","debian","docker","domoticz","esphome","homeassistant","jabber","kotiautomaatio","linux","linux-mint-debian-edition","matrix","mqtt","openhab","openvpn","raspberrypi","raspberrypios","redhat","rfxcom","ruuvitag","slackware","ssh","syncthing","tvheadend","wordpress.org","xmpp","zwave","zigbee","zigbee2mqtt","zwavejs2mqtt"], "section": "posts"},{"date":"1657584000", "url":"https://eddyshomepages.github.io/posts/moikka-maailma/", "title":"Terve maailma!", "summary":"Tervetuloa kotisivuilleni!\nNämä koti- ja blogi-sivut on luotu Raspberry Pi 2:n päällä pyörivän Caddy -webserverin ja WordPress.org blogi-alustan avulla. Caddy -webserver on kevyt ja sen avulla saa automaattisesti sertifikaatin nettisivustolle Let\u0026rsquo;s Encryptin kautta. Lisäksi Caddy -webserver pitää sertifikaatin automaattisesti myös ajan tasalla.\nNäille sivuille on tarkoituksena alkaa kirjoittaa erilaisia kotiautomaatioon, Linuxiin ja muihinkin asioihin liittyviä kirjoituksia.\nLisäksi nämä sivut toimivat minulle oppimisympäristönä WordPressiin ja mahdollisesti myös tulevaisuudessa jonkinlaisena sivutoimisena työnä.", "content":"Tervetuloa kotisivuilleni!\nNämä koti- ja blogi-sivut on luotu Raspberry Pi 2:n päällä pyörivän Caddy -webserverin ja WordPress.org blogi-alustan avulla. Caddy -webserver on kevyt ja sen avulla saa automaattisesti sertifikaatin nettisivustolle Let\u0026rsquo;s Encryptin kautta. Lisäksi Caddy -webserver pitää sertifikaatin automaattisesti myös ajan tasalla.\nNäille sivuille on tarkoituksena alkaa kirjoittaa erilaisia kotiautomaatioon, Linuxiin ja muihinkin asioihin liittyviä kirjoituksia.\nLisäksi nämä sivut toimivat minulle oppimisympäristönä WordPressiin ja mahdollisesti myös tulevaisuudessa jonkinlaisena sivutoimisena työnä.\n","tags":["caddy","letsencrypt","raspberrypi","wordpress.org"], "section": "posts"}]

